{"version":3,"file":"component---src-docs-components-checkbox-customisation-mdx-6c1fd2bf3217b86e6c13.js","mappings":"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","sources":["webpack://site/./src/docs/components/checkbox/customisation.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { Checkbox, Notification } from 'hds-react';\nimport Playground from '../../../components/Playground';\nimport TabsLayout from './tabs.mdx';\nexport const _frontmatter = {\n  \"slug\": \"/components/checkbox/customisation\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = ({\n  children,\n  pageContext\n}) => <TabsLayout pageContext={pageContext}>{children}</TabsLayout>;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"customisation\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Customisation`}<a parentName=\"h2\" {...{\n        \"href\": \"#customisation\",\n        \"aria-label\": \"customisation permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h2>\n    <Notification type=\"alert\" label=\"Checkbox customisation works differently!\" className=\"siteNotification\" mdxType=\"Notification\">\n  Checkbox is an older HDS component and therefore its customisation works slightly differently. Instead of the \n  <code>theme</code> property, you need to use the <code>style</code> property. This will be fixed in a future update.\n    </Notification>\n    <h3 {...{\n      \"id\": \"customisation-properties\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Customisation properties`}<a parentName=\"h3\" {...{\n        \"href\": \"#customisation-properties\",\n        \"aria-label\": \"customisation properties permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h3>\n    <p>{`In Core version, you can either use the `}<inlineCode parentName=\"p\">{`style`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`class`}</inlineCode>{` attributes in the HTML to customise the component.`}</p>\n    <p>{`In React version, you can either use the `}<inlineCode parentName=\"p\">{`style`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`className`}</inlineCode>{` properties to customise the component.`}</p>\n    <p>{`See all available theme variables in the table below.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Theme variable`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`--size`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Size of the checkbox`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`--icon-scale`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Scale of the checkbox check icon`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`--border-width`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Width of the checkbox border`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`--outline-width`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Width of the checkbox focus border`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`--background-selected`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Colour of the checkbox background when selected`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`--background-hover`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Colour of the checkbox background when hovered`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`--border-color-selected`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Colour of the checkbox border when selected`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`--border-color-selected-hover`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Colour of the checkbox border when selected and hovered`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`--border-color-selected-focus`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Colour of the checkbox border when selected and focused`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`--focus-outline-color`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Colour of the checkbox focus border`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"customisation-example\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Customisation example`}<a parentName=\"h3\" {...{\n        \"href\": \"#customisation-example\",\n        \"aria-label\": \"customisation example permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h3>\n    <Playground mdxType=\"Playground\">\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\"\n        }}>{`{\n  () => {\n    const [checked, setChecked] = React.useState(false);\n    const customStyles = {\n      '--size': '40px',\n      '--icon-scale': 0.6,\n      '--border-width': '3px',\n      '--outline-width': '4px',\n      '--background-selected': 'var(--color-success)',\n      '--background-hover': 'var(--color-success-dark)',\n      '--border-color-selected': 'var(--color-success)',\n      '--border-color-selected-hover': 'var(--color-success-dark)',\n      '--border-color-selected-focus': 'var(--color-success)',\n      '--focus-outline-color': 'var(--color-black-20)',\n    };\n    return (\n      <Checkbox\n        id=\"checkbox5\"\n        label=\"Label\"\n        style={customStyles}\n        checked={checked}\n        onChange={() => setChecked(!checked)}\n      />\n    );\n  };\n}\n`}</code></pre>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-html\"\n        }}>{`<div\n  class=\"hds-checkbox\"\n  style=\"--size: 40px; --icon-scale: 0.6; --border-width: 3px; --outline-width: 4px;\n  --background-selected: var(--color-success); --background-hover: var(--color-success-dark);\n  --border-color-selected: var(--color-success); --border-color-selected-hover: var(--color-success-dark);\n  --border-color-selected-focus: var(--color-success); --focus-outline-color: var(--color-black-20);\"\n>\n  <input type=\"checkbox\" id=\"checkbox1\" class=\"hds-checkbox__input\" value=\"foo\" />\n  <label for=\"checkbox1\" class=\"hds-checkbox__label\">Label</label>\n</div>\n`}</code></pre>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","_ref","children","pageContext","mdx","TabsLayout","MDXContent","_ref2","components","props","_objectWithoutPropertiesLoose","_excluded","Object","assign","mdxType","parentName","Notification","type","label","className","Playground","isMDXComponent"],"sourceRoot":""}