{"version":3,"file":"component---src-docs-components-file-input-security-mdx-ba51c4e54aaefa385ee5.js","mappings":"sLAasBA,E,6DALTC,EAAe,CAC1B,KAAQ,kCACR,MAAS,wBAQLC,GALgBF,EAKK,OALG,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,cAASG,KAIZG,EAAc,CAClBL,aAAAA,GAGIM,EAAY,SAAC,GAAD,IAChBC,EADgB,EAChBA,SACAC,EAFgB,EAEhBA,YAFgB,OAGZ,QAAC,UAAD,CAAYA,YAAaA,GAAcD,IAE9B,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGR,GACF,YACD,OAAO,QAACI,EAAD,iBAAeD,EAAiBH,EAAhC,CAAuCQ,WAAYA,EAAYC,QAAQ,eAG5E,cACE,GAAM,WACN,MAAS,CACP,SAAY,aAHhB,YAKe,aAAGC,WAAW,KACzB,KAAQ,YACR,aAAc,qBACd,UAAa,wBACZ,aAAGA,WAAW,IACb,UAAa,4DACb,cAAe,OACf,MAAS,CACP,cAAiB,eAGzB,mPAC+F,QAACX,EAAD,CAAMY,KAAK,IAAIC,KAAK,kGAAkGC,UAAQ,EAACJ,QAAQ,QAAvI,6DAD/F,MAEA,mBACE,cAAIC,WAAW,MAAf,qGACE,cAAIA,WAAW,OACb,cAAIA,WAAW,MAAf,kDACA,cAAIA,WAAW,MAAf,yPAGJ,cAAIA,WAAW,MAAf,uEACA,cAAIA,WAAW,MAAf,mIACA,cAAIA,WAAW,MAAf,kKACE,cAAIA,WAAW,OACb,cAAIA,WAAW,MAAf,mIAQVH,EAAWO,gBAAiB","sources":["webpack://site/./src/docs/components/file-input/security.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport TabsLayout from './tabs.mdx';\nexport const _frontmatter = {\n  \"slug\": \"/components/file-input/security\",\n  \"title\": \"FileInput - Security\"\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Link = makeShortcode(\"Link\");\nconst layoutProps = {\n  _frontmatter\n};\n\nconst MDXLayout = ({\n  children,\n  pageContext\n}) => <TabsLayout pageContext={pageContext}>{children}</TabsLayout>;\n\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"security\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Security`}<a parentName=\"h2\" {...{\n        \"href\": \"#security\",\n        \"aria-label\": \"security permalink\",\n        \"className\": \"header-anchor after\"\n      }}><i parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></i></a></h2>\n    <p>{`As HDS FileInput provides only the front-end solution, remember that you need to take care of the security in your project.\nBelow are some good practices you need to consider. For more detailed checklist, please refer to `}<Link size=\"M\" href=\"https://github.com/City-of-Helsinki/ASVS/blob/helsinki-4.0.1/4.0/en/0x20-V12-Files-Resources.md\" external mdxType=\"Link\">{`Helsinki OWASP Application Security Verification Standard`}</Link>{`.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Do not trust the front-end solution to validate the files for you. Validate files on the backend.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Verify file type, file size, and name length.`}</li>\n          <li parentName=\"ul\">{`HDS FileInput verifies the file size and the file type based on the DOM File object properties. It does not examine the file contents. This validation is not sufficient in the backend since it can be bypassed for example by renaming the file.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Always restrict and only allow file types related to the use case.`}</li>\n      <li parentName=\"ul\">{`Pay attention to error messages returned from the backend. Do not include information the user does not need, e.g. file paths.`}</li>\n      <li parentName=\"ul\">{`If files are uploaded from untrusted sources, make sure files are stored outside of the web root, with limited permissions, preferably with strong validation.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Files from untrusted sources should also be scanned by antivirus scanners to prevent the upload of known malicious content.`}</li>\n        </ul>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","Link","props","console","warn","layoutProps","MDXLayout","children","pageContext","MDXContent","components","mdxType","parentName","size","href","external","isMDXComponent"],"sourceRoot":""}