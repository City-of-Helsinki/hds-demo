{"version":3,"file":"component---src-docs-patterns-cookies-using-the-cookieconsent-mdx-2731c3b3c63d03d8b111.js","mappings":"mTAWaA,EAAe,GACtBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAI5E,cACE,GAAM,0BACN,MAAS,CACP,SAAY,aAHhB,2BAK8B,aAAGC,WAAW,KACxC,KAAQ,2BACR,aAAc,oCACd,UAAa,wBACZ,aAAGA,WAAW,IACb,UAAa,4DACb,cAAe,OACf,MAAS,CACP,cAAiB,eAGzB,QAAC,EAAAC,EAAD,CAAaC,KAAK,QAAQH,QAAQ,eAAlC,QACA,QAAC,IAAD,CAAeA,QAAQ,iBAAvB,qMAGA,uHAAyG,QAAC,EAAAI,EAAD,CAAMC,KAAK,6BAA6BL,QAAQ,QAAhD,sBAAzG,MACA,qHAAuG,QAAC,EAAAI,EAAD,CAAMC,KAAK,2BAA2BL,QAAQ,QAA9C,0BAAvG,MACA,cACE,GAAM,aACN,MAAS,CACP,SAAY,aAHhB,cAKiB,aAAGC,WAAW,KAC3B,KAAQ,cACR,aAAc,uBACd,UAAa,wBACZ,aAAGA,WAAW,IACb,UAAa,4DACb,cAAe,OACf,MAAS,CACP,cAAiB,eAGzB,eAAKK,UAAU,eAAeC,MAAO,CACnC,WAAc,6BACd,QAAW,mBACX,aAAgB,6BAChB,SAAY,WAEd,eAAKD,UAAU,qBAAqBC,MAAO,CACvC,MAAS,uBACT,aAAgB,sBACf,QAAC,EAAAC,EAAD,CAAWD,MAAO,CACjBE,YAAa,sBACbC,cAAe,UACdC,KAAK,IAAIX,QAAQ,eAAc,8BACtC,cAAIO,MAAO,CACP,aAAgB,OAEhB,mBAAI,8IACA,cAAIA,MAAO,CACX,UAAa,OAET,uIAGR,mBAAI,0KACJ,mBAAI,iGACF,cAAIA,MAAO,CACT,UAAa,OAET,6GAGR,mBAAI,8HAGR,eAAKD,UAAU,iBAAiBC,MAAO,CACrC,WAAc,2BACd,QAAW,mBACX,aAAgB,6BAChB,SAAY,WAEd,eAAKD,UAAU,uBAAuBC,MAAO,CACzC,MAAS,qBACT,aAAgB,sBACf,QAAC,EAAAC,EAAD,CAAWD,MAAO,CACjBE,YAAa,sBACbC,cAAe,UACdC,KAAK,IAAIX,QAAQ,eAAc,iCACtC,cAAIO,MAAO,CACP,aAAgB,OAEhB,yLAGJ,cACE,GAAM,gCACN,MAAS,CACP,SAAY,aAHhB,iCAKoC,aAAGN,WAAW,KAC9C,KAAQ,iCACR,aAAc,0CACd,UAAa,wBACZ,aAAGA,WAAW,IACb,UAAa,4DACb,cAAe,OACf,MAAS,CACP,cAAiB,eAGzB,2bACA,2TACA,yTACA,cACE,GAAM,yEACN,MAAS,CACP,SAAY,aAHhB,2EAK8E,aAAGA,WAAW,KACxF,KAAQ,0EACR,aAAc,mFACd,UAAa,wBACZ,aAAGA,WAAW,IACb,UAAa,4DACb,cAAe,OACf,MAAS,CACP,cAAiB,eAGzB,6SACA,cACE,GAAM,0EACN,MAAS,CACP,SAAY,aAHhB,4EAK+E,aAAGA,WAAW,KACzF,KAAQ,2EACR,aAAc,oFACd,UAAa,wBACZ,aAAGA,WAAW,IACb,UAAa,4DACb,cAAe,OACf,MAAS,CACP,cAAiB,eAGzB,ieACA,sJAKJJ,EAAWe,gBAAiB","sources":["webpack://site/./src/docs/patterns/cookies/using-the-cookieconsent.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mikanevalainen/Documents/code/helsinki-design-system/site/src/components/layout.js\";\nimport { Link, StatusLabel, IconCheck, IconError } from 'hds-react';\nimport LeadParagraph from '../../../components/LeadParagraph';\nimport Image from '../../../components/Image';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"using-the-cookieconsent\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Using the CookieConsent`}<a parentName=\"h1\" {...{\n        \"href\": \"#using-the-cookieconsent\",\n        \"aria-label\": \"using the cookieconsent permalink\",\n        \"className\": \"header-anchor after\"\n      }}><i parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></i></a></h1>\n    <StatusLabel type=\"alert\" mdxType=\"StatusLabel\">WIP</StatusLabel>\n    <LeadParagraph mdxType=\"LeadParagraph\">\n  HDS offers a consistent way of informing the user about cookies and, if needed, asking for consent. The CookieConsent component is used for this. This page describes how the component is used.\n    </LeadParagraph>\n    <p>{`If you are looking for technical documentation about the CookieConsent component, please refer to `}<Link href=\"/components/cookie-consent\" mdxType=\"Link\">{`the component page`}</Link>{`.`}</p>\n    <p>{`If you are looking for an explanation about gathering and categorising cookies, please refer to `}<Link href=\"/patterns/cookies/basics\" mdxType=\"Link\">{`the Cookie basics page`}</Link>{`.`}</p>\n    <h2 {...{\n      \"id\": \"principles\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Principles`}<a parentName=\"h2\" {...{\n        \"href\": \"#principles\",\n        \"aria-label\": \"principles permalink\",\n        \"className\": \"header-anchor after\"\n      }}><i parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></i></a></h2>\n    <div className=\"guideline-do\" style={{\n      \"background\": \"var(--color-success-light)\",\n      \"padding\": \"var(--spacing-s)\",\n      \"marginBottom\": \"var(--spacing-layout-2-xs)\",\n      \"maxWidth\": \"600px\"\n    }}>\n    <div className=\"guideline-do-label\" style={{\n        \"color\": \"var(--color-success)\",\n        \"marginBottom\": \"var(--spacing-s)\"\n      }}><IconCheck style={{\n          marginRight: 'var(--spacing-3-xs)',\n          verticalAlign: 'middle'\n        }} size=\"s\" mdxType=\"IconCheck\" /><strong>Do</strong></div>\n    <ul style={{\n        \"marginBottom\": \"0\"\n      }}>\n        <li><strong>The cookie consent banner must be shown if the user has not accepted or denied the optional cookies of the service.</strong>\n            <ul style={{\n            \"marginTop\": \"0\"\n          }}>\n                <li>If cookies have changed since the last time the user accepted or denied them, the consent must be shown again.</li>\n            </ul>\n        </li>\n        <li><strong>Include the cookie consent component on every page of the service. The user may arrive on any page of the service (e.g. via a search machine).</strong></li>\n        <li><strong>Make sure that cookie consent is the first item in the page tab order.</strong>\n          <ul style={{\n            \"marginTop\": \"0\"\n          }}>\n                <li>The cookie consent banner is automatically positioned to the bottom of the viewport.</li>\n            </ul>\n        </li>\n        <li><strong>Offer the cookie consent banner and cookie settings in all languages that your service supports.</strong></li>\n    </ul>\n    </div>\n    <div className=\"guideline-dont\" style={{\n      \"background\": \"var(--color-error-light)\",\n      \"padding\": \"var(--spacing-s)\",\n      \"marginBottom\": \"var(--spacing-layout-2-xs)\",\n      \"maxWidth\": \"600px\"\n    }}>\n    <div className=\"guideline-dont-label\" style={{\n        \"color\": \"var(--color-error)\",\n        \"marginBottom\": \"var(--spacing-s)\"\n      }}><IconError style={{\n          marginRight: 'var(--spacing-3-xs)',\n          verticalAlign: 'middle'\n        }} size=\"s\" mdxType=\"IconError\" /><strong>Don't</strong></div>\n    <ul style={{\n        \"marginBottom\": \"0\"\n      }}>\n        <li>The cookie consent banner should not prevent the user from using the web page. Never use an overlay behind the banner or otherwise restrict the use of the site.</li>\n    </ul>\n    </div>\n    <h2 {...{\n      \"id\": \"cookie-banner-and-cookie-page\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Cookie banner and cookie page`}<a parentName=\"h2\" {...{\n        \"href\": \"#cookie-banner-and-cookie-page\",\n        \"aria-label\": \"cookie banner and cookie page permalink\",\n        \"className\": \"header-anchor after\"\n      }}><i parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></i></a></h2>\n    <p>{`The HDS CookieConsent features two (2) ways of displaying cookies and cookie settings; banner and page. The banner approach is used to inform the user about cookies and offer a quick way to accept or deny them. The cookie page uses the banner content but renders it as a full page. This page is used to present cookie settings. It also works as a place where the user can later return to review or change cookie settings.`}</p>\n    <p>{`The banner also has a feature to expand to show cookie settings. This expanding settings menu can be used when the amount of cookies is low, e.g. less than five (5) individual cookies. Otherwise, it is recommended to open the full settings page. It is easier for the user to browse and manage.`}</p>\n    <p>{`No matter whether you use expanding cookie banner or not, you must always offer a full cookie settings page to the user. It is required to allow the user to review and edit cookie settings after the initial consent has been given. Place a link to the cookies page on the page footer element.`}</p>\n    <h2 {...{\n      \"id\": \"how-does-the-cookie-consent-banner-affect-other-content-of-the-service\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`How does the cookie consent banner affect other content of the service?`}<a parentName=\"h2\" {...{\n        \"href\": \"#how-does-the-cookie-consent-banner-affect-other-content-of-the-service\",\n        \"aria-label\": \"how does the cookie consent banner affect other content of the service permalink\",\n        \"className\": \"header-anchor after\"\n      }}><i parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></i></a></h2>\n    <p>{`There may be elements or content on your service that do not work properly until the user has given consent to optional cookies. It is recommended to either hide this content or show clear error messages at the position of these elements that indicate why they are not available.`}</p>\n    <h2 {...{\n      \"id\": \"what-happens-after-the-user-has-accepted-or-denied-the-optional-cookies\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`What happens after the user has accepted or denied the optional cookies?`}<a parentName=\"h2\" {...{\n        \"href\": \"#what-happens-after-the-user-has-accepted-or-denied-the-optional-cookies\",\n        \"aria-label\": \"what happens after the user has accepted or denied the optional cookies permalink\",\n        \"className\": \"header-anchor after\"\n      }}><i parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></i></a></h2>\n    <p>{`The user must be able to view and edit the cookie consent after they have initially submitted their choices. You must offer a separate cookies page that allows changing viewing the cookies and changing consent. The link to this page should be placed on the footer element of the page. Note that the HDS CookieConsent component offers functionality to render it as a page. This allows you to use the same component and data to construct a separate cookie page.`}</p>\n    <p>{`If new cookies are added or current ones changed, consent should be asked from the user again the next time the service is used.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","S","type","L","href","className","style","I","marginRight","verticalAlign","size","isMDXComponent"],"sourceRoot":""}