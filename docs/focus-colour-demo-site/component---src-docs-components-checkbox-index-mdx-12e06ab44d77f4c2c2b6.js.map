{"version":3,"file":"component---src-docs-components-checkbox-index-mdx-12e06ab44d77f4c2c2b6.js","mappings":"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","sources":["webpack://site/./src/docs/components/checkbox/index.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { useReducer } from 'react';\nimport { Checkbox, SelectionGroup, Fieldset } from 'hds-react';\nimport PlaygroundPreview from '../../../components/Playground';\nimport TabsLayout from './tabs.mdx';\nimport InternalLink from '../../../components/InternalLink';\nexport const CheckboxExample = () => {\n  const [checkedItems, setCheckedItems] = React.useState({\n    'checkbox-checked': true,\n    'checkbox-checked-disabled': true\n  });\n  const onChange = event => {\n    setCheckedItems({\n      ...checkedItems,\n      [event.target.id]: event.target.checked\n    });\n  };\n  return <>\n      <Checkbox label=\"Label\" id=\"checkbox-unchecked\" checked={checkedItems['checkbox-unchecked']} onChange={onChange} mdxType=\"Checkbox\" />\n      <Checkbox label=\"Label\" id=\"checkbox-checked\" checked={checkedItems['checkbox-checked']} onChange={onChange} mdxType=\"Checkbox\" />\n      <Checkbox label=\"Label\" id=\"checkbox-disabled\" checked={checkedItems['checkbox-disabled']} onChange={onChange} disabled mdxType=\"Checkbox\" />\n      <Checkbox label=\"Label\" id=\"checkbox-checked-disabled\" checked={checkedItems['checkbox-checked-disabled']} onChange={onChange} disabled mdxType=\"Checkbox\" />\n      <Checkbox label=\"Label\" id=\"checkbox-unchecked-error-text\" checked={checkedItems['checkbox-unchecked-error-text']} onChange={onChange} errorText=\"Error text\" mdxType=\"Checkbox\" />\n      <Checkbox label=\"Label\" id=\"checkbox-unchecked-helper-text\" checked={checkedItems['checkbox-unchecked-helper-text']} onChange={onChange} helperText=\"Assistive text\" mdxType=\"Checkbox\" />\n      <Checkbox label=\"label\" id=\"checkbox-with-tooltip\" tooltipText=\"tooltip text\" tooltipLabel=\"tooltip text aria label\" tooltipButtonLabel=\"tooltip button aria label\" checked={checkedItems['checkbox-with-tooltip']} onChange={onChange} mdxType=\"Checkbox\" />\n    </>;\n};\nexport const CheckboxDefaultExample = () => {\n  const [checkedItems, setCheckedItems] = React.useState({\n    'checkbox-checked-2': true,\n    'checkbox-checked-disabled-2': true\n  });\n  const onChange2 = event => {\n    setCheckedItems({\n      ...checkedItems,\n      [event.target.id]: event.target.checked\n    });\n  };\n  return <>\n      <Checkbox label=\"Label\" id=\"checkbox-unchecked-2\" checked={checkedItems['checkbox-unchecked-2']} onChange={onChange2} mdxType=\"Checkbox\" />\n      <Checkbox label=\"Label\" id=\"checkbox-checked-2\" checked={checkedItems['checkbox-checked-2']} onChange={onChange2} mdxType=\"Checkbox\" />\n      <Checkbox label=\"Label\" id=\"checkbox-disabled-2\" checked={checkedItems['checkbox-disabled-2']} onChange={onChange2} disabled mdxType=\"Checkbox\" />\n      <Checkbox label=\"Label\" id=\"checkbox-checked-disabled-2\" checked={checkedItems['checkbox-checked-disabled-2']} onChange={onChange2} disabled mdxType=\"Checkbox\" />\n    </>;\n};\nexport const CheckboxGroupExample = () => {\n  const [checkedItems, setCheckedItems] = React.useState({\n    \"v-checkbox1\": true,\n    \"v-checkbox2\": true\n  });\n  const onChange3 = event => {\n    setCheckedItems({\n      ...checkedItems,\n      [event.target.name]: event.target.checked\n    });\n  };\n  return <SelectionGroup label=\"Checkbox group\" mdxType=\"SelectionGroup\">\n      <Checkbox id=\"v-checkbox1\" name=\"v-checkbox1\" label=\"Option\" checked={checkedItems[\"v-checkbox1\"]} onChange={onChange3} mdxType=\"Checkbox\" />\n      <Checkbox id=\"v-checkbox2\" name=\"v-checkbox2\" label=\"Option\" checked={checkedItems[\"v-checkbox2\"]} onChange={onChange3} mdxType=\"Checkbox\" />\n      <Checkbox id=\"v-checkbox3\" name=\"v-checkbox3\" label=\"Option\" checked={checkedItems[\"v-checkbox3\"]} onChange={onChange3} mdxType=\"Checkbox\" />\n      <Checkbox id=\"v-checkbox4\" name=\"v-checkbox4\" label=\"Option\" checked={checkedItems[\"v-checkbox4\"]} onChange={onChange3} mdxType=\"Checkbox\" />\n    </SelectionGroup>;\n};\nexport const IndeterminateExample = () => {\n  const CheckboxState = {\n    checked: 0,\n    unchecked: 1,\n    indeterminate: 2\n  };\n  const areAllChecked = state => {\n    let checkedCount = 0;\n    Object.keys(state).forEach(key => {\n      if (key === 'controllerCheckbox') {\n        return;\n      }\n      if (state[key] === CheckboxState.checked) {\n        checkedCount += 1;\n      }\n    });\n    return checkedCount === 4;\n  };\n  const areAllUnchecked = state => {\n    let checkedCount = 0;\n    Object.keys(state).forEach(key => {\n      if (key === 'controllerCheckbox') {\n        return;\n      }\n      if (state[key] === CheckboxState.checked) {\n        checkedCount += 1;\n      }\n    });\n    return checkedCount === 1;\n  };\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case 'check':\n        {\n          if (action.payload === 'controllerCheckbox') {\n            return {\n              controllerCheckbox: CheckboxState.checked,\n              checkbox1: CheckboxState.checked,\n              checkbox2: CheckboxState.checked,\n              checkbox3: CheckboxState.checked,\n              checkbox4: CheckboxState.checked,\n              checkbox5: CheckboxState.checked\n            };\n          }\n          return {\n            ...state,\n            [action.payload]: CheckboxState.checked,\n            controllerCheckbox: areAllChecked(state) ? CheckboxState.checked : CheckboxState.indeterminate\n          };\n        }\n      case 'uncheck':\n        {\n          if (action.payload === 'controllerCheckbox') {\n            return {\n              controllerCheckbox: CheckboxState.unchecked,\n              checkbox1: CheckboxState.unchecked,\n              checkbox2: CheckboxState.unchecked,\n              checkbox3: CheckboxState.unchecked,\n              checkbox4: CheckboxState.unchecked,\n              checkbox5: CheckboxState.unchecked\n            };\n          }\n          return {\n            ...state,\n            [action.payload]: CheckboxState.unchecked,\n            controllerCheckbox: areAllUnchecked(state) ? CheckboxState.unchecked : CheckboxState.indeterminate\n          };\n        }\n      default:\n        throw new Error();\n    }\n  };\n  const initialState = {\n    controllerCheckbox: CheckboxState.indeterminate,\n    checkbox1: CheckboxState.checked,\n    checkbox2: CheckboxState.checked,\n    checkbox3: CheckboxState.unchecked,\n    checkbox4: CheckboxState.checked,\n    checkbox5: CheckboxState.unchecked\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return <Fieldset heading=\"Group label *\" mdxType=\"Fieldset\">\n      <Checkbox aria-controls=\"checkbox1 checkbox2 checkbox3 checkbox4 checkbox5\" id=\"controllerCheckbox\" label=\"Label\" indeterminate={state.controllerCheckbox === CheckboxState.indeterminate} checked={state.controllerCheckbox === CheckboxState.checked} style={{\n      marginTop: 'var(--spacing-xs)'\n    }} onChange={() => {\n      if (state.controllerCheckbox === CheckboxState.unchecked || state.controllerCheckbox === CheckboxState.indeterminate) {\n        dispatch({\n          type: 'check',\n          payload: 'controllerCheckbox'\n        });\n      } else {\n        dispatch({\n          type: 'uncheck',\n          payload: 'controllerCheckbox'\n        });\n      }\n    }} mdxType=\"Checkbox\" />\n      <ul style={{\n      marginLeft: 'var(--spacing-s)',\n      paddingInlineStart: '0'\n    }}>\n        {Object.entries(state).map(entry => {\n        if (entry[0] === 'controllerCheckbox') {\n          return null;\n        }\n        return <li key={entry[0]} style={{\n          marginTop: 'var(--spacing-s)',\n          listStyle: 'none'\n        }}>\n              <Checkbox id={entry[0]} key={entry[0]} label=\"Label\" checked={entry[1] === CheckboxState.checked} onChange={() => {\n            if (entry[1] === CheckboxState.unchecked) {\n              dispatch({\n                type: 'check',\n                payload: entry[0]\n              });\n            } else {\n              dispatch({\n                type: 'uncheck',\n                payload: entry[0]\n              });\n            }\n          }} mdxType=\"Checkbox\" />\n            </li>;\n      })}\n      </ul>\n    </Fieldset>;\n};\nexport const _frontmatter = {\n  \"slug\": \"/components/checkbox\",\n  \"title\": \"Checkbox\",\n  \"navTitle\": \"Checkbox\"\n};\nconst layoutProps = {\n  CheckboxExample,\n  CheckboxDefaultExample,\n  CheckboxGroupExample,\n  IndeterminateExample,\n  _frontmatter\n};\nconst MDXLayout = ({\n  children,\n  pageContext\n}) => <TabsLayout pageContext={pageContext}>{children}</TabsLayout>;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"usage\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Usage`}<a parentName=\"h2\" {...{\n        \"href\": \"#usage\",\n        \"aria-label\": \"usage permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h2>\n    <h3 {...{\n      \"id\": \"example\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Example`}<a parentName=\"h3\" {...{\n        \"href\": \"#example\",\n        \"aria-label\": \"example permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h3>\n\n    <PlaygroundPreview mdxType=\"PlaygroundPreview\">\n  <CheckboxExample mdxType=\"CheckboxExample\" />\n    </PlaygroundPreview>\n    <h3 {...{\n      \"id\": \"principles\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Principles`}<a parentName=\"h3\" {...{\n        \"href\": \"#principles\",\n        \"aria-label\": \"principles permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h3>\n    <ul>\n      <li parentName=\"ul\">{`If the user can only select one option from a list, use `}<InternalLink href=\"/components/radio-button\" mdxType=\"InternalLink\">{`radio buttons`}</InternalLink>{` instead.`}</li>\n      <li parentName=\"ul\">{`Checkbox label should always clearly describe what will happen if the specific option is chosen. A good practice is to keep labels a maximum of three words long.`}</li>\n      <li parentName=\"ul\">{`Checkboxes work independently from each other. This means that checking one option should never affect other checkboxes.`}</li>\n      <li parentName=\"ul\">{`If Checkboxes are related to each other, use `}<InternalLink href=\"/components/selection-group\" mdxType=\"InternalLink\">{`HDS Selection group`}</InternalLink>{` to achieve that.`}</li>\n      <li parentName=\"ul\">{`Checkboxes should not have any immediate effects. The checkbox selection takes effect when the user presses a submit button (e.g. in a form). If you need the selection to have an immediate effect, use `}<InternalLink href=\"/components/toggle-button\" mdxType=\"InternalLink\">{`HDS Toggle button component`}</InternalLink>{` instead. Also see `}<InternalLink href=\"/foundation/guidelines/checkbox-radiobutton-toggle\" mdxType=\"InternalLink\">{`guidelines for choosing between radio buttons, checkboxes and toggles.`}</InternalLink></li>\n      <li parentName=\"ul\">{`Checkbox can be provided with additional tooltip. Tooltip information should be considered as extra information. You can find more information about Tooltips how they are used from the `}<InternalLink href=\"/components/tooltip\" mdxType=\"InternalLink\">{`Tooltip documentation page`}</InternalLink>{`.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"variations\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Variations`}<a parentName=\"h3\" {...{\n        \"href\": \"#variations\",\n        \"aria-label\": \"variations permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h3>\n    <h4 {...{\n      \"id\": \"default\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Default`}<a parentName=\"h4\" {...{\n        \"href\": \"#default\",\n        \"aria-label\": \"default permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h4>\n\n    <PlaygroundPreview mdxType=\"PlaygroundPreview\">\n  <CheckboxDefaultExample mdxType=\"CheckboxDefaultExample\" />\n    </PlaygroundPreview>\n    <h4 {...{\n      \"id\": \"checkbox-group\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Checkbox group`}<a parentName=\"h4\" {...{\n        \"href\": \"#checkbox-group\",\n        \"aria-label\": \"checkbox group permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h4>\n    <p>{`Related checkboxes can be grouped together with the Selection group component. See `}<InternalLink href=\"components/selection-group\" mdxType=\"InternalLink\">{`HDS Selection group page`}</InternalLink>{` for full documentation.`}</p>\n\n    <PlaygroundPreview mdxType=\"PlaygroundPreview\">\n  <CheckboxGroupExample mdxType=\"CheckboxGroupExample\" />\n    </PlaygroundPreview>\n    <h4 {...{\n      \"id\": \"indeterminate\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Indeterminate`}<a parentName=\"h4\" {...{\n        \"href\": \"#indeterminate\",\n        \"aria-label\": \"indeterminate permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h4>\n    <p>{`Checkboxes also have a \"mixed\" state that is called an indeterminate state. This state is meant to be between the checked and unchecked states. While not very common, the usual use case for the indeterminate state is nested checkboxes. The parent checkbox can be in the indeterminate state when only part of the children checkboxes are checked.`}</p>\n    <p>{`Note! You will always have to use JavaScript to set a checkbox to the indeterminate state. Currently, it cannot be done through HTML. The HDS React component will do this part automatically when the `}<inlineCode parentName=\"p\">{`indeterminate`}</inlineCode>{` property is given.`}</p>\n\n    <PlaygroundPreview mdxType=\"PlaygroundPreview\">\n  <IndeterminateExample mdxType=\"IndeterminateExample\" />\n    </PlaygroundPreview>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["CheckboxExample","_React$useState","React","checkedItems","setCheckedItems","onChange","event","_objectSpread2","_objectSpread","target","id","checked","mdx","Checkbox","label","mdxType","disabled","errorText","helperText","tooltipText","tooltipLabel","tooltipButtonLabel","CheckboxDefaultExample","_React$useState2","onChange2","_objectSpread3","CheckboxGroupExample","_React$useState3","onChange3","_objectSpread4","name","SelectionGroup","IndeterminateExample","CheckboxState","initialState","controllerCheckbox","checkbox1","checkbox2","checkbox3","checkbox4","checkbox5","_useReducer","useReducer","state","action","type","_objectSpread5","payload","checkedCount","Object","keys","forEach","key","areAllChecked","_objectSpread6","areAllUnchecked","Error","dispatch","Fieldset","heading","indeterminate","style","marginTop","marginLeft","paddingInlineStart","entries","map","entry","listStyle","_frontmatter","layoutProps","MDXLayout","_ref","children","pageContext","TabsLayout","MDXContent","_ref2","components","props","_objectWithoutPropertiesLoose","_excluded","assign","parentName","PlaygroundPreview","InternalLink","href","isMDXComponent"],"sourceRoot":""}