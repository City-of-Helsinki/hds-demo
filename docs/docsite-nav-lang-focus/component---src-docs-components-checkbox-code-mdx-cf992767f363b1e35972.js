"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[399],{83567:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return d},default:function(){return x}});var a,c=t(63366),o=(t(67294),t(64983)),l=t(94846),h=t(80699),r=t(9460),i=t(10882),k=["components"],d={slug:"/components/checkbox/code",title:"Checkbox - Code"},s=(a="IconCheckCircleFill",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)}),b={_frontmatter:d},p=function(e){var n=e.children,t=e.pageContext;return(0,o.kt)(i.default,{pageContext:t},n)};function x(e){var n=e.components,t=(0,c.Z)(e,k);return(0,o.kt)(p,Object.assign({},b,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"code",style:{position:"relative"}},"Code",(0,o.kt)("a",{parentName:"h2",href:"#code","aria-label":"code permalink",className:"header-anchor after"},(0,o.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,o.kt)("h3",{id:"code-examples",style:{position:"relative"}},"Code examples",(0,o.kt)("a",{parentName:"h3",href:"#code-examples","aria-label":"code examples permalink",className:"header-anchor after"},(0,o.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,o.kt)("h4",{id:"checkbox-with-label",style:{position:"relative"}},"Checkbox with label",(0,o.kt)("a",{parentName:"h4",href:"#checkbox-with-label","aria-label":"checkbox with label permalink",className:"header-anchor after"},(0,o.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,o.kt)(r.ZP,{mdxType:"Playground"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'{() => {\n  const [checkedItems, setCheckedItems] = React.useState({ "checkbox-checked": true, "checkbox-checked-disabled": true });\n  const onChange = (event) => {\n    setCheckedItems({ ...checkedItems, [event.target.id]: event.target.checked });\n  };\n  return <>\n    <Checkbox label="Label" id="checkbox" checked={checkedItems["checkbox"]} onChange={onChange} />\n    <Checkbox label="Label" id="checkbox-checked" checked={checkedItems["checkbox-checked"]} onChange={onChange} />\n    <Checkbox label="Label" id="checkbox-disabled" checked={checkedItems["checkbox-disabled"]} onChange={onChange} disabled />\n    <Checkbox label="Label" id="checkbox-checked-disabled" checked={checkedItems["checkbox-checked-disabled"]} onChange={onChange} disabled />\n  </>\n}}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<div>\n  <div class="hds-checkbox">\n    <input type="checkbox" id="checkbox-core" class="hds-checkbox__input" />\n    <label for="checkbox-core"  class="hds-checkbox__label">Label</label>\n  </div>\n\n  <div class="hds-checkbox">\n    <input type="checkbox" id="checkbox-checked-core" class="hds-checkbox__input" checked />\n    <label for="checkbox-checked-core"  class="hds-checkbox__label">Label</label>\n  </div>\n\n  <div class="hds-checkbox">\n    <input type="checkbox" id="checkbox-disabled-core" class="hds-checkbox__input" disabled />\n    <label for="checkbox-disabled-core"  class="hds-checkbox__label">Label</label>\n  </div>\n\n  <div class="hds-checkbox">\n    <input type="checkbox" id="checkbox-checked-disabled" class="hds-checkbox__input" checked disabled />\n    <label for="checkbox-checked-disabled"  class="hds-checkbox__label">Label</label>\n  </div>\n</div>\n'))),(0,o.kt)("h4",{id:"checkbox-group",style:{position:"relative"}},"Checkbox group",(0,o.kt)("a",{parentName:"h4",href:"#checkbox-group","aria-label":"checkbox group permalink",className:"header-anchor after"},(0,o.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,o.kt)(r.ZP,{mdxType:"Playground"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'{() => {\n  const [checkedItems, setCheckedItems] = React.useState({ "v-checkbox1": true, "v-checkbox2": true });\n  const onChange = (event) => {\n    setCheckedItems({ ...checkedItems, [event.target.name]: event.target.checked });\n  };\n  return (\n    <SelectionGroup label="Checkbox group">\n      <Checkbox id="v-checkbox1" name="v-checkbox1" label="Option" checked={checkedItems["v-checkbox1"]} onChange={onChange} />\n      <Checkbox id="v-checkbox2" name="v-checkbox2" label="Option" checked={checkedItems["v-checkbox2"]} onChange={onChange} />\n      <Checkbox id="v-checkbox3" name="v-checkbox3" label="Option" checked={checkedItems["v-checkbox3"]} onChange={onChange} />\n      <Checkbox id="v-checkbox4" name="v-checkbox4" label="Option" checked={checkedItems["v-checkbox4"]} onChange={onChange} />\n    </SelectionGroup>\n  );\n}}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<fieldset class="hds-selection-group">\n  <legend class="hds-selection-group__legend">Checkbox group</legend>\n  <div class="hds-selection-group__items">\n    <div class="hds-selection-group__item">\n      <div class="hds-checkbox">\n        <input type="checkbox" id="v-checkbox1" name="v-checkbox1" class="hds-checkbox__input" value="foo" checked />\n        <label for="v-checkbox1" class="hds-checkbox__label">Option</label>\n      </div>\n    </div>\n    <div class="hds-selection-group__item">\n      <div class="hds-checkbox">\n        <input type="checkbox" id="v-checkbox2" name="v-checkbox2" class="hds-checkbox__input" value="bar" checked/>\n        <label for="v-checkbox2" class="hds-checkbox__label">Option</label>\n      </div>\n    </div>\n    <div class="hds-selection-group__item">\n      <div class="hds-checkbox">\n        <input type="checkbox" id="v-checkbox3" name="v-checkbox3" class="hds-checkbox__input" value="baz" />\n        <label for="v-checkbox3" class="hds-checkbox__label">Option</label>\n      </div>\n    </div>\n    <div class="hds-selection-group__item">\n      <div class="hds-checkbox">\n        <input type="checkbox" id="v-checkbox4" name="v-checkbox4" class="hds-checkbox__input" value="qux" />\n        <label for="v-checkbox4" class="hds-checkbox__label">Option</label>\n      </div>\n    </div>\n  </div>\n</fieldset>\n'))),(0,o.kt)("h4",{id:"indeterminate",style:{position:"relative"}},"Indeterminate",(0,o.kt)("a",{parentName:"h4",href:"#indeterminate","aria-label":"indeterminate permalink",className:"header-anchor after"},(0,o.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,o.kt)(r.ZP,{mdxType:"Playground"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"{() => {\n  const CheckboxState = {\n    checked: 0,\n    unchecked: 1,\n    indeterminate: 2,\n  };\n  const areAllChecked = (state) => {\n    let checkedCount = 0;\n    Object.keys(state).forEach((key) => {\n      if (key === 'controllerCheckbox') {\n        return;\n      }\n      if (state[key] === CheckboxState.checked) {\n        checkedCount += 1;\n      }\n    });\n    return checkedCount === 4;\n  };\n  const areAllUnchecked = (state) => {\n    let checkedCount = 0;\n    Object.keys(state).forEach((key) => {\n      if (key === 'controllerCheckbox') {\n        return;\n      }\n      if (state[key] === CheckboxState.checked) {\n        checkedCount += 1;\n      }\n    });\n    return checkedCount === 1;\n  };\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case 'check': {\n        if (action.payload === 'controllerCheckbox') {\n          return {\n            controllerCheckbox: CheckboxState.checked,\n            checkbox1: CheckboxState.checked,\n            checkbox2: CheckboxState.checked,\n            checkbox3: CheckboxState.checked,\n            checkbox4: CheckboxState.checked,\n            checkbox5: CheckboxState.checked,\n          };\n        }\n        return {\n          ...state,\n          [action.payload]: CheckboxState.checked,\n          controllerCheckbox: areAllChecked(state) ? CheckboxState.checked : CheckboxState.indeterminate,\n        };\n      }\n      case 'uncheck': {\n        if (action.payload === 'controllerCheckbox') {\n          return {\n            controllerCheckbox: CheckboxState.unchecked,\n            checkbox1: CheckboxState.unchecked,\n            checkbox2: CheckboxState.unchecked,\n            checkbox3: CheckboxState.unchecked,\n            checkbox4: CheckboxState.unchecked,\n            checkbox5: CheckboxState.unchecked,\n          };\n        }\n        return {\n          ...state,\n          [action.payload]: CheckboxState.unchecked,\n          controllerCheckbox: areAllUnchecked(state) ? CheckboxState.unchecked : CheckboxState.indeterminate,\n        };\n      }\n      default:\n        throw new Error();\n    }\n  };\n  const initialState = {\n    controllerCheckbox: CheckboxState.indeterminate,\n    checkbox1: CheckboxState.checked,\n    checkbox2: CheckboxState.checked,\n    checkbox3: CheckboxState.unchecked,\n    checkbox4: CheckboxState.checked,\n    checkbox5: CheckboxState.unchecked,\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <Fieldset heading=\"Group label *\">\n      <Checkbox\n        aria-controls=\"checkbox1 checkbox2 checkbox3 checkbox4 checkbox5\"\n        id=\"controllerCheckbox\"\n        label=\"Label\"\n        indeterminate={state.controllerCheckbox === CheckboxState.indeterminate}\n        checked={state.controllerCheckbox === CheckboxState.checked}\n        style={{ marginTop: 'var(--spacing-xs)' }}\n        onChange={() => {\n          if (\n            state.controllerCheckbox === CheckboxState.unchecked ||\n            state.controllerCheckbox === CheckboxState.indeterminate\n          ) {\n            dispatch({ type: 'check', payload: 'controllerCheckbox' });\n          } else {\n            dispatch({ type: 'uncheck', payload: 'controllerCheckbox' });\n          }\n        }}\n      />\n      <ul style={{ marginLeft: 'var(--spacing-s)', paddingInlineStart: '0' }}>\n        {Object.entries(state).map((entry) => {\n          if (entry[0] === 'controllerCheckbox') {\n            return null;\n          }\n          return (\n            <li key={entry[0]} style={{ marginTop: 'var(--spacing-s)', listStyle: 'none' }}>\n              <Checkbox\n                id={entry[0]}\n                key={entry[0]}\n                label=\"Label\"\n                checked={entry[1] === CheckboxState.checked}\n                onChange={() => {\n                  if (entry[1] === CheckboxState.unchecked) {\n                    dispatch({ type: 'check', payload: entry[0] });\n                  } else {\n                    dispatch({ type: 'uncheck', payload: entry[0] });\n                  }\n                }}\n              />\n            </li>\n          );\n        })}\n      </ul>\n    </Fieldset>\n  );\n}}\n"))),(0,o.kt)("h3",{id:"packages",style:{position:"relative"}},"Packages",(0,o.kt)("a",{parentName:"h3",href:"#packages","aria-label":"packages permalink",className:"header-anchor after"},(0,o.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Package"),(0,o.kt)("th",{parentName:"tr",align:null},"Included"),(0,o.kt)("th",{parentName:"tr",align:null},"Storybook link"),(0,o.kt)("th",{parentName:"tr",align:null},"Source link"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"HDS React")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("div",{style:{display:"flex",gap:"var(--spacing-3-xs)"}},(0,o.kt)(s,{mdxType:"IconCheckCircleFill"})," Yes ")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)(l.L,{openInNewTab:!0,openInNewTabAriaLabel:"Opens in a new tab",href:"/storybook/react/?path=/story/components-checkbox--default",mdxType:"Link"},"View in Storybook")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)(h.Z,{openInNewTab:!0,openInNewTabAriaLabel:"Opens in a new tab",href:"https://github.com/City-of-Helsinki/helsinki-design-system/blob/master/packages/react/src/components/checkbox/Checkbox.tsx",mdxType:"ExternalLink"},"View source"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"HDS Core")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("div",{style:{display:"flex",gap:"var(--spacing-3-xs)"}},(0,o.kt)(s,{mdxType:"IconCheckCircleFill"})," Yes ")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)(l.L,{openInNewTab:!0,openInNewTabAriaLabel:"Opens in a new tab",href:"/storybook/core/?path=/story/components-checkbox--default",mdxType:"Link"},"View in Storybook")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)(h.Z,{openInNewTab:!0,openInNewTabAriaLabel:"Opens in a new tab",href:"https://github.com/City-of-Helsinki/helsinki-design-system/tree/master/packages/core/src/components/checkbox",mdxType:"ExternalLink"},"View source"))))),(0,o.kt)("h3",{id:"properties",style:{position:"relative"}},"Properties",(0,o.kt)("a",{parentName:"h3",href:"#properties","aria-label":"properties permalink",className:"header-anchor after"},(0,o.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,o.kt)("p",null,"Note! You can find the full list of properties in the ",(0,o.kt)(l.L,{openInNewTab:!0,openInNewTabAriaLabel:"Opens in a new tab",href:"/storybook/react/?path=/story/components-checkbox--default",mdxType:"Link"},"React Storybook.")),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Property"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"),(0,o.kt)("th",{parentName:"tr",align:null},"Values"),(0,o.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"checked")),(0,o.kt)("td",{parentName:"tr",align:null},"If set to true, the component is checked."),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"boolean")),(0,o.kt)("td",{parentName:"tr",align:null},"false")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"disabled")),(0,o.kt)("td",{parentName:"tr",align:null},"If set to true, the component is disabled."),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"boolean")),(0,o.kt)("td",{parentName:"tr",align:null},"false")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"indeterminate")),(0,o.kt)("td",{parentName:"tr",align:null},"If set to true, the component is in indeterminate state."),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"boolean")),(0,o.kt)("td",{parentName:"tr",align:null},"false")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"label")),(0,o.kt)("td",{parentName:"tr",align:null},"A text label for the checkbox."),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"string")),(0,o.kt)("td",{parentName:"tr",align:null},"-")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"onChange")),(0,o.kt)("td",{parentName:"tr",align:null},"Callback fired when the state is changed."),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"function")),(0,o.kt)("td",{parentName:"tr",align:null},"-")))))}x.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-components-checkbox-code-mdx-cf992767f363b1e35972.js.map