{"version":3,"file":"component---src-docs-foundation-design-tokens-breakpoints-index-mdx-b2edea6ae64c6f746e99.js","mappings":"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","sources":["webpack://hds-site/./src/docs/foundation/design-tokens/breakpoints/index.mdx","webpack://hds-site/./src/docs/foundation/design-tokens/breakpoints/tabs.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport TabsLayout from './tabs.mdx';\nexport const _frontmatter = {\n  \"slug\": \"/foundation/design-tokens/breakpoints\",\n  \"title\": \"Breakpoint tokens - Usage\",\n  \"nav_title\": \"Breakpoints\"\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Link = makeShortcode(\"Link\");\nconst layoutProps = {\n  _frontmatter\n};\n\nconst MDXLayout = ({\n  children,\n  pageContext\n}) => <TabsLayout pageContext={pageContext}>{children}</TabsLayout>;\n\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"usage\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Usage`}<a parentName=\"h2\" {...{\n        \"href\": \"#usage\",\n        \"aria-label\": \"usage permalink\",\n        \"className\": \"headerAnchor after\"\n      }}><i parentName=\"a\" {...{\n          \"className\": \"hdsAnchorIcon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></i></a></h2>\n    <p>{`HDS includes tokenized values for both breakpoints and maximum container width in each breakpoint. Breakpoint tokens can be also used alongside `}<Link size=\"M\" href=\"#\" mdxType=\"Link\">{`HDS grid guidelines`}</Link>{` in order to create consistent designs and implementations.`}</p>\n    <h3 {...{\n      \"id\": \"principles\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Principles`}<a parentName=\"h3\" {...{\n        \"href\": \"#principles\",\n        \"aria-label\": \"principles permalink\",\n        \"className\": \"headerAnchor after\"\n      }}><i parentName=\"a\" {...{\n          \"className\": \"hdsAnchorIcon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></i></a></h3>\n    <ul>\n      <li parentName=\"ul\">{`Always use token of the same level for both the breakpoint and container width. This ensures consistency across all services using HDS breakpoint tokens. Read more about this in `}<Link size=\"M\" href=\"#using-breakpoint-tokens\" mdxType=\"Link\">{`the breakpoint usage section.`}</Link></li>\n      <li parentName=\"ul\">{`Aim to provide all breakpoints listed in HDS tokens in your service. This way you ensure your service is usable with every common screen width.`}</li>\n      <li parentName=\"ul\">{`For best results, test your designs and implementations at the edge of each HDS breakpoint.`}</li>\n      <li parentName=\"ul\">{`It is recommended to use scaling methods HDS suggests for each breakpoint (`}<Link size=\"M\" href=\"#tab-1-button\" mdxType=\"Link\">{`see Breakpoints token table`}</Link>{`). However, it is allowed to use different scaling methods if it works better for the service.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"accessibility\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Accessibility`}<a parentName=\"h3\" {...{\n        \"href\": \"#accessibility\",\n        \"aria-label\": \"accessibility permalink\",\n        \"className\": \"headerAnchor after\"\n      }}><i parentName=\"a\" {...{\n          \"className\": \"hdsAnchorIcon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></i></a></h3>\n    <ul>\n      <li parentName=\"ul\">{`When testing your designs and implementation at different breakpoints, pay extra attention how your service behaves if browser zoom functionality is used. Read more about the `}<Link size=\"M\" href=\"https://www.w3.org/WAI/WCAG21/Understanding/reflow.html\" external mdxType=\"Link\">{`WCAG requirements considering reflow`}</Link>{`.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"using-breakpoint-tokens\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Using breakpoint tokens`}<a parentName=\"h3\" {...{\n        \"href\": \"#using-breakpoint-tokens\",\n        \"aria-label\": \"using breakpoint tokens permalink\",\n        \"className\": \"headerAnchor after\"\n      }}><i parentName=\"a\" {...{\n          \"className\": \"hdsAnchorIcon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></i></a></h3>\n    <p>{`The breakpoint tokens are divided into two sets;`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Breakpoint tokens`}</strong>{` define exact widths (in pixels) where the next breakpoint comes into effect.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Container width tokens`}</strong>{` define maximum container width in each breakpoint.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Note how these two sets of tokens are linked.`}</strong>{` You are supposed pick and use tokens from same level depending on the screen width. For example, when screen width is above 767 pixels and below 992 pixels you use `}<inlineCode parentName=\"p\">{`--breakpoint-m`}</inlineCode>{` token in combination with `}<inlineCode parentName=\"p\">{`--container-width-m`}</inlineCode>{` token.`}</p>\n    <p><strong parentName=\"p\">{`HDS offers a Container component which follows breakpoint and container width tokens automatically.`}</strong>{` It is recommended to use it if possible. For more info and examples, see `}<Link size=\"M\" href=\"https://hds.hel.fi/storybook/react/?path=/story/components-container--example\" external mdxType=\"Link\">{`Container - React documentation`}</Link>{` and `}<Link size=\"M\" href=\"https://hds.hel.fi/storybook/core/?path=/story/components-container--default\" external mdxType=\"Link\">{`Container - Core documentation`}</Link>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { StatusLabel } from 'hds-react';\nimport LeadParagraph from '../../../../components/LeadParagraph';\nimport Layout from '../../../../components/layout';\nimport PageTabs from '../../../../components/PageTabs';\nexport const _frontmatter = {\n  \"slug\": \"/foundation/design-tokens/breakpoints/tabs\",\n  \"title\": \"Breakpoint tokens\"\n};\nconst layoutProps = {\n  _frontmatter\n};\n\nconst MDXLayout = ({\n  pageContext,\n  children\n}) => <Layout pageContext={pageContext}>{children}</Layout>;\n\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"breakpoints\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Breakpoints`}<a parentName=\"h1\" {...{\n        \"href\": \"#breakpoints\",\n        \"aria-label\": \"breakpoints permalink\",\n        \"className\": \"headerAnchor after\"\n      }}><i parentName=\"a\" {...{\n          \"className\": \"hdsAnchorIcon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></i></a></h1>\n    <StatusLabel type=\"info\" mdxType=\"StatusLabel\">Stable</StatusLabel>\n    <LeadParagraph mdxType=\"LeadParagraph\">\n  Breakpoint tokens are used to keep services and products using HDS consistent across all screen sizes.\n    </LeadParagraph>\n    <PageTabs pageContext={props.pageContext} mdxType=\"PageTabs\">\n  <PageTabs.TabList>\n    <PageTabs.Tab href=\"/\">Usage</PageTabs.Tab>\n    <PageTabs.Tab href=\"/tokens\">Tokens</PageTabs.Tab>\n  </PageTabs.TabList>\n  <PageTabs.TabPanel>{props.children}</PageTabs.TabPanel>\n    </PageTabs>\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","Link","props","console","warn","layoutProps","MDXLayout","children","pageContext","MDXContent","components","mdxType","parentName","size","href","external","isMDXComponent","type"],"sourceRoot":""}