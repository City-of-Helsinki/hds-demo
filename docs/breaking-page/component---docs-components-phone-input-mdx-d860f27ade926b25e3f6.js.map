{"version":3,"sources":["webpack:///../docs/components/phone_input.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","type","style","marginLeft","parentName","__position","__code","__scope","Playground","PhoneInput","Combobox","StatusLabel","ColorBox","LargeParagraph","Text","defaultValue","helperText","label","required","maxWidth","id","fontSize","fontWeight","display","gridTemplateColumns","columnGap","helper","aria-describedby","options","toggleButtonAriaLabel","isMDXComponent"],"mappings":"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","file":"component---docs-components-phone-input-mdx-d860f27ade926b25e3f6.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mikanevalainen/Documents/code/helsinki-design-system/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from \"docz\";\nimport { PhoneInput, Combobox, StatusLabel } from \"hds-react\";\nimport ColorBox from \"../../src/components/ColorBox\";\nimport LargeParagraph from \"../../src/components/LargeParagraph\";\nimport Text from \"../../src/components/Text\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"phone-input\"\n    }}>{`Phone input`}</h1>\n    <StatusLabel type=\"alert\" mdxType=\"StatusLabel\">Draft</StatusLabel>\n    <StatusLabel type=\"success\" style={{\n      marginLeft: 'var(--spacing-xs)'\n    }} mdxType=\"StatusLabel\">Accessible</StatusLabel>\n    <LargeParagraph mdxType=\"LargeParagraph\">\n  A phone input allows the user to enter phone number values. \n    </LargeParagraph>\n    <h2 {...{\n      \"id\": \"principles\"\n    }}>{`Principles`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`A label should always be provided with a phone number input.`}</strong>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Make sure that the label is clear and concise. The user should immediately understand what phone number they are supposed to input.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`If a specific phone number format is required, describe the format in the assistive text. `}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Generally it is recommended to allow all common formats and fix the format automatically for the user if needed.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Unless you can fill the input for the user automatically, a default value should not be set.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`A placeholder text is often not used either. If a placeholder is used, it is a good practice to make them easily distinguishable from the actual input. A recommended way to do this is to format the placeholder text like this: \"`}<em parentName=\"li\">{`E.g. 0401234567`}</em>{`\".`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`If a country code must be inputted, a separate `}<a parentName=\"li\" {...{\n          \"href\": \"/components/dropdown#combobox-single-selection\"\n        }}>{`HDS Combobox input`}</a>{` should be used alongside the phone number input.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"accessibility\"\n    }}>{`Accessibility`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`HDS Phone number input supports HTML input `}<inlineCode parentName=\"li\">{`pattern`}</inlineCode>{` attribute. It can be used to specify an exact format for the phone number.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Note that pattern is not visible to regular users in any way.`}</strong>{` Some of the screen readers informs the user if the input does not match the pattern. This attribute mostly increases user experience for screen reader users. `}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`If multiple phone numbers are asked in the same view, make sure they are labelled descriptively or have an extra fieldset label linked to the input with `}<inlineCode parentName=\"li\">{`aria-desribedby`}</inlineCode>{`.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`You can view an example of this below in `}<a parentName=\"li\" {...{\n              \"href\": \"#with-a-country-code-selection\"\n            }}>{`phone input with a country code selection variant`}</a></li>\n        </ul>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"usage-and-variations\"\n    }}>{`Usage and variations`}</h2>\n    <h3 {...{\n      \"id\": \"default\"\n    }}>{`Default`}</h3>\n    <p>{`A default variant of the phone number input.`}</p>\n    <p>{`Note! A default value is used here for demonstration purposes. It should not be used unless the input can be automatically filled for the user.`}</p>\n    <Playground __position={2} __code={'<PhoneInput\\n  defaultValue=\\\"0451234567\\\"\\n  helperText=\\\"Assistive text\\\"\\n  label=\\\"Phone number\\\"\\n  required\\n  style={{ maxWidth: \\'320px\\' }}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      PhoneInput,\n      Combobox,\n      StatusLabel,\n      ColorBox,\n      LargeParagraph,\n      Text,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">      \n      <PhoneInput defaultValue=\"0451234567\" helperText=\"Assistive text\" label=\"Phone number\" required style={{\n        maxWidth: '320px'\n      }} mdxType=\"PhoneInput\" />\n    </Playground>\n    <h4 {...{\n      \"id\": \"core-code-example\"\n    }}>{`Core code example:`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<div class=\"hds-text-input\">\n  <label for=\"input\" class=\"hds-text-input__label\">\n    Label\n    <span class=\"hds-text-input__required\">*</span>\n  </label>\n  <div class=\"hds-text-input__input-wrapper\">\n    <input\n      id=\"input1\"\n      class=\"hds-text-input__input\"\n      type=\"tel\"\n      autocomplete=\"tel\"\n      value=\"0451234567\"\n    />\n  </div>\n  <span class=\"hds-text-input__helper-text\">Assistive text</span>\n</div>\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"react-code-example\"\n    }}>{`React code example:`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<PhoneInput\n   defaultValue=\"0451234567\"\n   helperText=\"Assistive text\"\n   label=\"Phone number\"\n   required\n/>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"with-a-country-code-selection\"\n    }}>{`With a country code selection`}</h3>\n    <p>{`If a country code is a required input (or otherwise critical), it should be asked in a separate input using `}<a parentName=\"p\" {...{\n        \"href\": \"/components/dropdown#combobox-single-selection\"\n      }}>{`HDS Combobox`}</a>{`. `}</p>\n    <p>{`These two input are linked together using a fieldset title and `}<inlineCode parentName=\"p\">{`aria-desribedby`}</inlineCode>{` attribute. This way is is clear for screen readers which phone number these two inputs relate to.`}</p>\n    <Playground __position={3} __code={'() => {\\n  const options = [{ label: \\'Finland (+358)\\' }, { label: \\'UK (+46)\\' }]\\n  return (\\n    <>\\n      <p id=\\\"work-phone\\\" style={{ fontSize: \\'18px\\', fontWeight: \\'bold\\' }}>\\n        Work phone\\n      </p>\\n      <div\\n        style={{\\n          display: \\'grid\\',\\n          gridTemplateColumns: \\'200px 300px\\',\\n          columnGap: \\'16px\\',\\n        }}\\n      >\\n        <Combobox\\n          id=\\\"hds-select-1\\\"\\n          label=\\\"Country code\\\"\\n          helper=\\\"Assistive text\\\"\\n          aria-describedby=\\\"work-phone\\\"\\n          options={options}\\n          defaultValue={{ label: \\'Finland (+358)\\' }}\\n          required\\n          toggleButtonAriaLabel=\\\"Choose country code\\\"\\n        />\\n        <PhoneInput\\n          id=\\\"WithCountryCode\\\"\\n          defaultValue=\\\"0451234567\\\"\\n          aria-describedby=\\\"work-phone\\\"\\n          label=\\\"Phone number\\\"\\n          required={true}\\n        />\\n      </div>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      PhoneInput,\n      Combobox,\n      StatusLabel,\n      ColorBox,\n      LargeParagraph,\n      Text,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const options = [{\n          label: 'Finland (+358)'\n        }, {\n          label: 'UK (+46)'\n        }];\n        return <>\n      <p id=\"work-phone\" style={{\n            fontSize: '18px',\n            fontWeight: 'bold'\n          }}>\n        Work phone\n      </p>\n      <div style={{\n            display: 'grid',\n            gridTemplateColumns: '200px 300px',\n            columnGap: '16px'\n          }}>\n        <Combobox id=\"hds-select-1\" label=\"Country code\" helper=\"Assistive text\" aria-describedby=\"work-phone\" options={options} defaultValue={{\n              label: 'Finland (+358)'\n            }} required toggleButtonAriaLabel=\"Choose country code\" mdxType=\"Combobox\" />\n        <PhoneInput id=\"WithCountryCode\" defaultValue=\"0451234567\" aria-describedby=\"work-phone\" label=\"Phone number\" required={true} mdxType=\"PhoneInput\" />\n      </div>\n    </>;\n      }}\n    </Playground>\n    <h4 {...{\n      \"id\": \"react-code-example-1\"\n    }}>{`React code example:`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`{() => {\n  const options = [{ label: 'Finland (+358)' }, { label: 'UK (+46)' }];\n  return (\n    <>\n      <p id=\"work-phone\" style={{ fontSize: '18px', fontWeight: 'bold' }}>\n        Work phone\n      </p>\n      <div style={{ display: 'grid', gridTemplateColumns: '200px 300px', columnGap: '16px' }}>\n        <Combobox\n          id=\"hds-select-1\"\n          label=\"Country code\"\n          helper=\"Assistive text\"\n          aria-describedby=\"work-phone\"\n          options={options}\n          defaultValue={{ label: 'Finland (+358)' }}\n          required\n          toggleButtonAriaLabel=\"Choose country code\"\n        />\n        <PhoneInput\n          id=\"WithCountryCode\"\n          defaultValue=\"0451234567\"\n          aria-describedby=\"work-phone\"\n          label=\"Phone number\"\n          required={true}\n        />\n      </div>\n    </>\n  )\n}}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"demos--api\"\n    }}>{`Demos & API`}</h2>\n    <h3 {...{\n      \"id\": \"core\"\n    }}>{`Core`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/storybook/core/?path=/story/components-phone-input--default\"\n      }}>{`Phone input in hds-core`}</a></p>\n    <h3 {...{\n      \"id\": \"react\"\n    }}>{`React`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/storybook/react/?path=/story/components-phoneinput--default\"\n      }}>{`Phone input in hds-react`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/storybook/react/?path=/docs/components-phoneinput--default\"\n      }}>{`PhoneInput API`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}