(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{kNAa:function(e,c,o){"use strict";o.r(c),o.d(c,"_frontmatter",(function(){return O})),o.d(c,"default",(function(){return g}));var t=o("zjfJ"),a=o("cxan"),n=o("+wNj"),b=o("ERkP"),l=o("ZVZ0"),h=o("9Rvw"),s=o("qbsg"),i=o("tQPQ"),r=o("HqL5"),d=o("9Lef"),p=o("sQ7B"),x=o("vD+s"),k=o("x0e6");o("l1C2");function u(e,c){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);c&&(t=t.filter((function(c){return Object.getOwnPropertyDescriptor(e,c).enumerable}))),o.push.apply(o,t)}return o}function m(e){for(var c=1;c<arguments.length;c++){var o=null!=arguments[c]?arguments[c]:{};c%2?u(Object(o),!0).forEach((function(c){Object(t.a)(e,c,o[c])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):u(Object(o)).forEach((function(c){Object.defineProperty(e,c,Object.getOwnPropertyDescriptor(o,c))}))}return e}var O={};void 0!==O&&O&&O===Object(O)&&Object.isExtensible(O)&&!O.hasOwnProperty("__filemeta")&&Object.defineProperty(O,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/components/checkbox.mdx"}});var v={_frontmatter:O},j=h.a;function g(e){var c,o,t=e.components,u=Object(n.a)(e,["components"]);return Object(l.b)(j,Object(a.a)({},v,u,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"checkboxes"},"Checkboxes"),Object(l.b)(i.a,{type:"info",mdxType:"StatusLabel"},"Stable"),Object(l.b)(i.a,{type:"success",style:{marginLeft:"var(--spacing-xs)"},mdxType:"StatusLabel"},"Accessible"),Object(l.b)(x.a,{mdxType:"LargeParagraph"},"Checkboxes are used to pick an option when one or more options can be chosen."),Object(l.b)("h2",{id:"principles"},"Principles"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"If the user can only select one option from a list, use ",Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"/components/radio-button"}),"radio buttons")," instead."),Object(l.b)("li",{parentName:"ul"},"Checkbox label should always clearly describe what will happen if the specific option is chosen. A good practice is to keep labels a maximum of three words long."),Object(l.b)("li",{parentName:"ul"},"Checkboxes work independently from each other. This means that checking one option should never affect other checkboxes."),Object(l.b)("li",{parentName:"ul"},"If Checkboxes are related to each other, use ",Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"/components/selection-group"}),"HDS Selection group")," to achieve that. "),Object(l.b)("li",{parentName:"ul"},"Checkboxes should not have any immediate effects. The checkbox selection takes effect when the user presses a submit button (e.g. in a form). If you need the selection to have an immediate effect, use ",Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"/components/toggle"}),"HDS Toggle button component")," instead.")),Object(l.b)("h2",{id:"accessibility"},"Accessibility"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"It is advisable to use colour combinations provided by the implementation.")," These combinations are ensured to comply with WCAG AA requirements. When customising colors, refer to ",Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"/design-tokens/colour",title:"Colour"}),"colour guidelines")," to ensure accessibility."),Object(l.b)("li",{parentName:"ul"},"When multiple Checkboxes are related to each other, group them together using ",Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"/components/selection-group"}),"HDS Selection group"),". Selection group also includes a title for the group.")),Object(l.b)("h2",{id:"usage"},"Usage"),Object(l.b)("h3",{id:"checkbox-with-label"},"Checkbox with label"),Object(l.b)(s.c,{__position:2,__code:'<Checkbox label="Label" />\n<Checkbox label="Label" checked />\n<Checkbox label="Label" disabled />\n<Checkbox label="Label" checked disabled />',__scope:(c={props:u,DefaultLayout:h.a,Playground:s.c,Checkbox:r.a,StatusLabel:i.a,SelectionGroup:d.a,ColorBox:p.a,LargeParagraph:x.a,Text:k.a},c.DefaultLayout=h.a,c._frontmatter=O,c),mdxType:"Playground"},Object(l.b)(r.a,{label:"Label",mdxType:"Checkbox"}),Object(l.b)(r.a,{label:"Label",checked:!0,mdxType:"Checkbox"}),Object(l.b)(r.a,{label:"Label",disabled:!0,mdxType:"Checkbox"}),Object(l.b)(r.a,{label:"Label",checked:!0,disabled:!0,mdxType:"Checkbox"})),Object(l.b)("h4",{id:"core-code-example"},"Core code example:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),'\x3c!-- Enabled --\x3e\n<div class="hds-checkbox">\n  <input type="checkbox" id="checkbox" class="hds-checkbox__input" />\n  <label for="checkbox"  class="hds-checkbox__label">Label</label>\n</div>\n\n\x3c!-- Enabled & selected --\x3e\n<div class="hds-checkbox">\n  <input type="checkbox" id="checkbox" class="hds-checkbox__input" checked />\n  <label for="checkbox"  class="hds-checkbox__label">Label</label>\n</div>\n\n\x3c!-- Disabled --\x3e\n<div class="hds-checkbox">\n  <input type="checkbox" id="checkbox" class="hds-checkbox__input" disabled />\n  <label for="checkbox"  class="hds-checkbox__label">Label</label>\n</div>\n\n\x3c!-- Disabled & selected --\x3e\n<div class="hds-checkbox">\n  <input type="checkbox" id="checkbox" class="hds-checkbox__input" checked disabled />\n  <label for="checkbox"  class="hds-checkbox__label">Label</label>\n</div>\n')),Object(l.b)("h4",{id:"react-code-example"},"React code example:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-tsx"}),'<Checkbox id="checkbox1" label="Label" />\n<Checkbox id="checkbox2" label="Label" checked />\n<Checkbox id="checkbox3" label="Label" disabled />\n<Checkbox id="checkbox4" label="Label" checked disabled />\n')),Object(l.b)("h3",{id:"checkbox-group"},"Checkbox group"),Object(l.b)("p",null,"Related checkboxes can be grouped together with the Selection group component. See ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/components/selection-group"}),"HDS Selection group page")," for full documentation."),Object(l.b)(s.c,{__position:3,__code:'() => {\n  const [checkedItems, setCheckedItems] = React.useState({\n    \'v-checkbox1\': true,\n    \'v-checkbox2\': true,\n  })\n  const onChange = event => {\n    setCheckedItems({\n      ...checkedItems,\n      [event.target.name]: event.target.checked,\n    })\n  }\n  return (\n    <SelectionGroup label="Checkbox group">\n      <Checkbox\n        id="v-checkbox1"\n        name="v-checkbox1"\n        label="Option"\n        checked={checkedItems[\'v-checkbox1\']}\n        onChange={onChange}\n      />\n      <Checkbox\n        id="v-checkbox2"\n        name="v-checkbox2"\n        label="Option"\n        checked={checkedItems[\'v-checkbox2\']}\n        onChange={onChange}\n      />\n      <Checkbox\n        id="v-checkbox3"\n        name="v-checkbox3"\n        label="Option"\n        checked={checkedItems[\'v-checkbox3\']}\n        onChange={onChange}\n      />\n      <Checkbox\n        id="v-checkbox4"\n        name="v-checkbox4"\n        label="Option"\n        checked={checkedItems[\'v-checkbox4\']}\n        onChange={onChange}\n      />\n    </SelectionGroup>\n  )\n}',__scope:(o={props:u,DefaultLayout:h.a,Playground:s.c,Checkbox:r.a,StatusLabel:i.a,SelectionGroup:d.a,ColorBox:p.a,LargeParagraph:x.a,Text:k.a},o.DefaultLayout=h.a,o._frontmatter=O,o),mdxType:"Playground"},(function(){var e=b.useState({"v-checkbox1":!0,"v-checkbox2":!0}),c=e[0],o=e[1],t=function(e){var t;o(m(m({},c),{},((t={})[e.target.name]=e.target.checked,t)))};return Object(l.b)(d.a,{label:"Checkbox group",mdxType:"SelectionGroup"},Object(l.b)(r.a,{id:"v-checkbox1",name:"v-checkbox1",label:"Option",checked:c["v-checkbox1"],onChange:t,mdxType:"Checkbox"}),Object(l.b)(r.a,{id:"v-checkbox2",name:"v-checkbox2",label:"Option",checked:c["v-checkbox2"],onChange:t,mdxType:"Checkbox"}),Object(l.b)(r.a,{id:"v-checkbox3",name:"v-checkbox3",label:"Option",checked:c["v-checkbox3"],onChange:t,mdxType:"Checkbox"}),Object(l.b)(r.a,{id:"v-checkbox4",name:"v-checkbox4",label:"Option",checked:c["v-checkbox4"],onChange:t,mdxType:"Checkbox"}))})),Object(l.b)("h4",{id:"core-code-example-1"},"Core code example:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),'<fieldset class="hds-selection-group">\n  <legend class="hds-selection-group__legend">Checkbox group</legend>\n  <div class="hds-selection-group__items">\n    <div class="hds-selection-group__item">\n      <div class="hds-checkbox">\n        <input type="checkbox" id="v-checkbox1" name="v-checkbox1" class="hds-checkbox__input" value="foo" checked />\n        <label for="v-checkbox1" class="hds-checkbox__label">Option</label>\n      </div>\n    </div>\n    <div class="hds-selection-group__item">\n      <div class="hds-checkbox">\n        <input type="checkbox" id="v-checkbox2" name="v-checkbox2" class="hds-checkbox__input" value="bar" checked/>\n        <label for="v-checkbox2" class="hds-checkbox__label">Option</label>\n      </div>\n    </div>\n    <div class="hds-selection-group__item">\n      <div class="hds-checkbox">\n        <input type="checkbox" id="v-checkbox3" name="v-checkbox3" class="hds-checkbox__input" value="baz" />\n        <label for="v-checkbox3" class="hds-checkbox__label">Option</label>\n      </div>\n    </div>\n    <div class="hds-selection-group__item">\n      <div class="hds-checkbox">\n        <input type="checkbox" id="v-checkbox4" name="v-checkbox4" class="hds-checkbox__input" value="qux" />\n        <label for="v-checkbox4" class="hds-checkbox__label">Option</label>\n      </div>\n    </div>\n  </div>\n</fieldset>\n')),Object(l.b)("h4",{id:"react-code-example-1"},"React code example:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-tsx"}),'<SelectionGroup label="Checkbox group">\n  <Checkbox id="v-checkbox1" name="v-checkbox1" label="Option" checked />\n  <Checkbox id="v-checkbox2" name="v-checkbox2" label="Option" checked />\n  <Checkbox id="v-checkbox3" name="v-checkbox3" label="Option" />\n  <Checkbox id="v-checkbox4" name="v-checkbox4" label="Option" />\n</SelectionGroup>\n')),Object(l.b)("h2",{id:"demos--api"},"Demos & API"),Object(l.b)("h3",{id:"core"},"Core"),Object(l.b)("p",null,Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/storybook/core/?path=/story/components-checkbox--default"}),"Checkboxes in hds-core")),Object(l.b)("h3",{id:"react"},"React"),Object(l.b)("p",null,Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/storybook/react/?path=/story/components-checkbox--default"}),"Checkboxes in hds-react")),Object(l.b)("p",null,Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/storybook/react/?path=/docs/components-checkbox--default"}),"Checkbox API")))}void 0!==g&&g&&g===Object(g)&&Object.isExtensible(g)&&!g.hasOwnProperty("__filemeta")&&Object.defineProperty(g,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/components/checkbox.mdx"}}),g.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-components-checkbox-mdx-445debefbd7e29df0b5a.js.map