"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[795],{96994:function(e,t,c){c.r(t),c.d(t,{CheckboxDefaultExample:function(){return u},CheckboxExample:function(){return x},CheckboxGroupExample:function(){return m},IndeterminateExample:function(){return f},_frontmatter:function(){return y},default:function(){return v}});var a=c(63366),o=c(4942),n=c(67294),r=c(64983),i=c(93592),l=c(68946),h=c(27661),k=c(37274),d=c(92625),s=["components"];function b(e,t){var c=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),c.push.apply(c,a)}return c}function p(e){for(var t=1;t<arguments.length;t++){var c=null!=arguments[t]?arguments[t]:{};t%2?b(Object(c),!0).forEach((function(t){(0,o.Z)(e,t,c[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(c)):b(Object(c)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(c,t))}))}return e}var x=function(){var e=n.useState({"checkbox-checked":!0,"checkbox-checked-disabled":!0}),t=e[0],c=e[1],a=function(e){var a;c(p(p({},t),{},((a={})[e.target.id]=e.target.checked,a)))};return(0,r.kt)(n.Fragment,null,(0,r.kt)(i.C,{label:"Label",id:"checkbox-unchecked",checked:t["checkbox-unchecked"],onChange:a,mdxType:"Checkbox"}),(0,r.kt)(i.C,{label:"Label",id:"checkbox-checked",checked:t["checkbox-checked"],onChange:a,mdxType:"Checkbox"}),(0,r.kt)(i.C,{label:"Label",id:"checkbox-disabled",checked:t["checkbox-disabled"],onChange:a,disabled:!0,mdxType:"Checkbox"}),(0,r.kt)(i.C,{label:"Label",id:"checkbox-checked-disabled",checked:t["checkbox-checked-disabled"],onChange:a,disabled:!0,mdxType:"Checkbox"}))},u=function(){var e=n.useState({"checkbox-checked-2":!0,"checkbox-checked-disabled-2":!0}),t=e[0],c=e[1],a=function(e){var a;c(p(p({},t),{},((a={})[e.target.id]=e.target.checked,a)))};return(0,r.kt)(n.Fragment,null,(0,r.kt)(i.C,{label:"Label",id:"checkbox-unchecked-2",checked:t["checkbox-unchecked-2"],onChange:a,mdxType:"Checkbox"}),(0,r.kt)(i.C,{label:"Label",id:"checkbox-checked-2",checked:t["checkbox-checked-2"],onChange:a,mdxType:"Checkbox"}),(0,r.kt)(i.C,{label:"Label",id:"checkbox-disabled-2",checked:t["checkbox-disabled-2"],onChange:a,disabled:!0,mdxType:"Checkbox"}),(0,r.kt)(i.C,{label:"Label",id:"checkbox-checked-disabled-2",checked:t["checkbox-checked-disabled-2"],onChange:a,disabled:!0,mdxType:"Checkbox"}))},m=function(){var e=n.useState({"v-checkbox1":!0,"v-checkbox2":!0}),t=e[0],c=e[1],a=function(e){var a;c(p(p({},t),{},((a={})[e.target.name]=e.target.checked,a)))};return(0,r.kt)(l.S,{label:"Checkbox group",mdxType:"SelectionGroup"},(0,r.kt)(i.C,{id:"v-checkbox1",name:"v-checkbox1",label:"Option",checked:t["v-checkbox1"],onChange:a,mdxType:"Checkbox"}),(0,r.kt)(i.C,{id:"v-checkbox2",name:"v-checkbox2",label:"Option",checked:t["v-checkbox2"],onChange:a,mdxType:"Checkbox"}),(0,r.kt)(i.C,{id:"v-checkbox3",name:"v-checkbox3",label:"Option",checked:t["v-checkbox3"],onChange:a,mdxType:"Checkbox"}),(0,r.kt)(i.C,{id:"v-checkbox4",name:"v-checkbox4",label:"Option",checked:t["v-checkbox4"],onChange:a,mdxType:"Checkbox"}))},f=function(){var e=0,t=1,c=2,a={controllerCheckbox:c,checkbox1:e,checkbox2:e,checkbox3:t,checkbox4:e,checkbox5:t},o=(0,n.useReducer)((function(a,o){switch(o.type){case"check":var n;return"controllerCheckbox"===o.payload?{controllerCheckbox:e,checkbox1:e,checkbox2:e,checkbox3:e,checkbox4:e,checkbox5:e}:p(p({},a),{},((n={})[o.payload]=e,n.controllerCheckbox=function(t){var c=0;return Object.keys(t).forEach((function(a){"controllerCheckbox"!==a&&t[a]===e&&(c+=1)})),4===c}(a)?e:c,n));case"uncheck":var r;return"controllerCheckbox"===o.payload?{controllerCheckbox:t,checkbox1:t,checkbox2:t,checkbox3:t,checkbox4:t,checkbox5:t}:p(p({},a),{},((r={})[o.payload]=t,r.controllerCheckbox=function(t){var c=0;return Object.keys(t).forEach((function(a){"controllerCheckbox"!==a&&t[a]===e&&(c+=1)})),1===c}(a)?t:c,r));default:throw new Error}}),a),l=o[0],k=o[1];return(0,r.kt)(h.F,{heading:"Group label *",mdxType:"Fieldset"},(0,r.kt)(i.C,{"aria-controls":"checkbox1 checkbox2 checkbox3 checkbox4 checkbox5",id:"controllerCheckbox",label:"Label",indeterminate:l.controllerCheckbox===c,checked:l.controllerCheckbox===e,style:{marginTop:"var(--spacing-xs)"},onChange:function(){l.controllerCheckbox===t||l.controllerCheckbox===c?k({type:"check",payload:"controllerCheckbox"}):k({type:"uncheck",payload:"controllerCheckbox"})},mdxType:"Checkbox"}),(0,r.kt)("ul",{style:{marginLeft:"var(--spacing-s)",paddingInlineStart:"0"}},Object.entries(l).map((function(c){return"controllerCheckbox"===c[0]?null:(0,r.kt)("li",{key:c[0],style:{marginTop:"var(--spacing-s)",listStyle:"none"}},(0,r.kt)(i.C,{id:c[0],key:c[0],label:"Label",checked:c[1]===e,onChange:function(){c[1]===t?k({type:"check",payload:c[0]}):k({type:"uncheck",payload:c[0]})},mdxType:"Checkbox"}))}))))},y={slug:"/components/checkbox",title:"Checkbox",navTitle:"Checkbox"},g={CheckboxExample:x,CheckboxDefaultExample:u,CheckboxGroupExample:m,IndeterminateExample:f,_frontmatter:y},C=function(e){var t=e.children,c=e.pageContext;return(0,r.kt)(d.default,{pageContext:c},t)};function v(e){var t=e.components,c=(0,a.Z)(e,s);return(0,r.kt)(C,Object.assign({},g,c,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"usage",style:{position:"relative"}},"Usage",(0,r.kt)("a",{parentName:"h2",href:"#usage","aria-label":"usage permalink",className:"header-anchor after"},(0,r.kt)("i",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,r.kt)("h3",{id:"example",style:{position:"relative"}},"Example",(0,r.kt)("a",{parentName:"h3",href:"#example","aria-label":"example permalink",className:"header-anchor after"},(0,r.kt)("i",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,r.kt)(k.ZP,{mdxType:"PlaygroundPreview"},(0,r.kt)(x,{mdxType:"CheckboxExample"})),(0,r.kt)("h3",{id:"principles",style:{position:"relative"}},"Principles",(0,r.kt)("a",{parentName:"h3",href:"#principles","aria-label":"principles permalink",className:"header-anchor after"},(0,r.kt)("i",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If the user can only select one option from a list, use ",(0,r.kt)("a",{parentName:"li",href:"/components/radio-button"},"radio buttons")," instead."),(0,r.kt)("li",{parentName:"ul"},"Checkbox label should always clearly describe what will happen if the specific option is chosen. A good practice is to keep labels a maximum of three words long."),(0,r.kt)("li",{parentName:"ul"},"Checkboxes work independently from each other. This means that checking one option should never affect other checkboxes."),(0,r.kt)("li",{parentName:"ul"},"If Checkboxes are related to each other, use ",(0,r.kt)("a",{parentName:"li",href:"/components/selection-group"},"HDS Selection group")," to achieve that."),(0,r.kt)("li",{parentName:"ul"},"Checkboxes should not have any immediate effects. The checkbox selection takes effect when the user presses a submit button (e.g. in a form). If you need the selection to have an immediate effect, use ",(0,r.kt)("a",{parentName:"li",href:"/components/toggle-button"},"HDS Toggle button component")," instead. Also see ",(0,r.kt)("a",{parentName:"li",href:"/guidelines/checkboxes-radiobuttons-toggles"},"guidelines for choosing between radio buttons, checkboxes, and toggles."))),(0,r.kt)("h3",{id:"variations",style:{position:"relative"}},"Variations",(0,r.kt)("a",{parentName:"h3",href:"#variations","aria-label":"variations permalink",className:"header-anchor after"},(0,r.kt)("i",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,r.kt)("h4",{id:"default",style:{position:"relative"}},"Default",(0,r.kt)("a",{parentName:"h4",href:"#default","aria-label":"default permalink",className:"header-anchor after"},(0,r.kt)("i",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,r.kt)(k.ZP,{mdxType:"PlaygroundPreview"},(0,r.kt)(u,{mdxType:"CheckboxDefaultExample"})),(0,r.kt)("h4",{id:"checkbox-group",style:{position:"relative"}},"Checkbox group",(0,r.kt)("a",{parentName:"h4",href:"#checkbox-group","aria-label":"checkbox group permalink",className:"header-anchor after"},(0,r.kt)("i",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,r.kt)("p",null,"Related checkboxes can be grouped together with the Selection group component. See ",(0,r.kt)("a",{parentName:"p",href:"/components/selection-group"},"HDS Selection group page")," for full documentation."),(0,r.kt)(k.ZP,{mdxType:"PlaygroundPreview"},(0,r.kt)(m,{mdxType:"CheckboxGroupExample"})),(0,r.kt)("h4",{id:"indeterminate",style:{position:"relative"}},"Indeterminate",(0,r.kt)("a",{parentName:"h4",href:"#indeterminate","aria-label":"indeterminate permalink",className:"header-anchor after"},(0,r.kt)("i",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,r.kt)("p",null,'Checkboxes also have a "mixed" state that is called an indeterminate state. This state is meant to be between the checked and unchecked states. While not very common, the usual use case for the indeterminate state is nested checkboxes. The parent checkbox can be in the indeterminate state when only part of the children checkboxes are checked.'),(0,r.kt)("p",null,"Note! You will always have to use JavaScript to set a checkbox to the indeterminate state. Currently, it cannot be done through HTML. The HDS React component will do this part automatically when the ",(0,r.kt)("inlineCode",{parentName:"p"},"indeterminate")," property is given."),(0,r.kt)(k.ZP,{mdxType:"PlaygroundPreview"},(0,r.kt)(f,{mdxType:"IndeterminateExample"})))}v.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-components-checkbox-index-mdx-afa83f685d6c96e0de0f.js.map