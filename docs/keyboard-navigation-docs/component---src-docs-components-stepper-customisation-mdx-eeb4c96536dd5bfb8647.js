"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[8824],{40020:function(t,e,n){n.r(e),n.d(e,{_frontmatter:function(){return s},default:function(){return m}});var a=n(45987),o=(n(67294),n(64983)),l=n(71823);const r=["components"],s={slug:"/components/stepper/customisation",title:"Stepper - Customisation"},i=(p="Playground",function(t){return console.warn("Component "+p+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)});var p;const d={_frontmatter:s},c=t=>{let{children:e,pageContext:n}=t;return(0,o.kt)(l.default,{pageContext:n},e)};function m(t){let{components:e}=t,n=(0,a.Z)(t,r);return(0,o.kt)(c,Object.assign({},d,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"customisation",style:{position:"relative"}},"Customisation",(0,o.kt)("a",{parentName:"h2",href:"#customisation","aria-label":"customisation permalink",className:"header-anchor after"},(0,o.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,o.kt)("h3",{id:"customisation-properties",style:{position:"relative"}},"Customisation properties",(0,o.kt)("a",{parentName:"h3",href:"#customisation-properties","aria-label":"customisation properties permalink",className:"header-anchor after"},(0,o.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,o.kt)("p",null,"You can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"theme")," property to customise the component. See all available theme variables in the table below."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Theme variable"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"--hds-not-selected-step-label-color")),(0,o.kt)("td",{parentName:"tr",align:null},"Colour of a non-selected step label.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"--hds-step-background-color")),(0,o.kt)("td",{parentName:"tr",align:null},"Background colour of a step circle.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"--hds-step-content-color")),(0,o.kt)("td",{parentName:"tr",align:null},"Colour of elements inside a step.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"--hds-stepper-background-color")),(0,o.kt)("td",{parentName:"tr",align:null},"Background colour of the stepper container.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"--hds-stepper-color")),(0,o.kt)("td",{parentName:"tr",align:null},"Highlight colour of the stepper.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"--hds-stepper-disabled-color")),(0,o.kt)("td",{parentName:"tr",align:null},"Colour of a disabled step.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"--hds-stepper-focus-border-color")),(0,o.kt)("td",{parentName:"tr",align:null},"Colour of a step focus border.")))),(0,o.kt)("h3",{id:"customisation-example",style:{position:"relative"}},"Customisation example",(0,o.kt)("a",{parentName:"h3",href:"#customisation-example","aria-label":"customisation example permalink",className:"header-anchor after"},(0,o.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,o.kt)(i,{mdxType:"Playground"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"{() => {\n  const commonReducer = (stepsTotal) => (state, action) => {\n    switch (action.type) {\n      case 'completeStep': {\n        const activeStepIndex = action.payload === stepsTotal - 1 ? stepsTotal - 1 : action.payload + 1;\n        return {\n          activeStepIndex,\n          steps: state.steps.map((step, index) => {\n            if (index === action.payload && index !== stepsTotal - 1) {\n              // current one but not last one\n              return {\n                state: StepState.completed,\n                label: step.label,\n              };\n            }\n            if (index === action.payload + 1) {\n              // next one\n              return {\n                state: StepState.available,\n                label: step.label,\n              };\n            }\n            return step;\n          }),\n        };\n      }\n      case 'setActive': {\n        return {\n          activeStepIndex: action.payload,\n          steps: state.steps.map((step, index) => {\n            if (index === action.payload) {\n              return {\n                state: StepState.available,\n                label: step.label,\n              };\n            }\n            return step;\n          }),\n        };\n      }\n      default:\n        throw new Error();\n    }\n  };\n  const reducer = commonReducer(5);\n  const initialState = {\n    activeStepIndex: 0,\n    steps: [\n      {\n        label: 'Step 1',\n        state: StepState.available,\n      },\n      {\n        label: 'Step 2',\n        state: StepState.disabled,\n      },\n      {\n        label: 'Step 3',\n        state: StepState.disabled,\n      },\n      {\n        label: 'Step 4 - longer text',\n        state: StepState.disabled,\n      },\n      {\n        label: 'Step 5',\n        state: StepState.disabled,\n      },\n    ],\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const lastStep = state.activeStepIndex === state.steps.length - 1;\n  return (\n    <div>\n      <Stepper\n        steps={state.steps}\n        language=\"en\"\n        selectedStep={state.activeStepIndex}\n        onStepClick={(event, stepIndex) => dispatch({ type: 'setActive', payload: stepIndex })}\n        theme={{\n          '--hds-not-selected-step-label-color': 'var(--color-black-90)',\n          '--hds-step-background-color': 'var(--color-black-5)',\n          '--hds-step-content-color': 'var(--color-black-90)',\n          '--hds-stepper-background-color': 'var(--color-white)',\n          '--hds-stepper-color': 'var(--color-black-90)',\n          '--hds-stepper-disabled-color': 'var(--color-black-30)',\n          '--hds-stepper-focus-border-color': 'var(--color-black-90)'\n        }}\n      />\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'flex-start',\n          alignItems: 'flex-end',\n          gap: '24px',\n        }}\n      >\n        <Button\n          disabled={state.activeStepIndex === 0}\n          variant=\"secondary\"\n          onClick={() => dispatch({ type: 'setActive', payload: state.activeStepIndex - 1 })}\n          style={{ height: 'fit-content', width: 'fit-content' }}\n          iconLeft={<IconArrowLeft />}\n          theme=\"black\"\n        >\n          Previous\n        </Button>\n        <Button\n          variant={lastStep ? 'primary' : 'secondary'}\n          onClick={() => dispatch({ type: 'completeStep', payload: state.activeStepIndex })}\n          style={{ height: 'fit-content', width: 'fit-content' }}\n          iconRight={lastStep ? undefined : <IconArrowRight />}\n          theme=\"black\"\n        >\n          {lastStep ? 'Send' : 'Next'}\n        </Button>\n      </div>\n    </div>\n  );\n}}\n"))))}m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-components-stepper-customisation-mdx-eeb4c96536dd5bfb8647.js.map