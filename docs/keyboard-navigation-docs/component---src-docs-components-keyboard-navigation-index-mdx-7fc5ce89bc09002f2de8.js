"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[6365],{19866:function(e,a,t){t.r(a),t.d(a,{_frontmatter:function(){return c},default:function(){return p}});var n=t(45987),i=(t(67294),t(64983)),l=t(74233),s=t(9460),o=t(77440);const r=["components"],c={slug:"/components/keyboard-navigation",title:"KeyboardNavigation",navTitle:"KeyboardNavigation"},d={_frontmatter:c},h=e=>{let{children:a,pageContext:t}=e;return(0,i.kt)(o.default,{pageContext:t},a)};function p(e){let{components:a}=e,t=(0,n.Z)(e,r);return(0,i.kt)(h,Object.assign({},d,t,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"usage",style:{position:"relative"}},"Usage",(0,i.kt)("a",{parentName:"h2",href:"#usage","aria-label":"usage permalink",className:"header-anchor after"},(0,i.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,i.kt)("p",null,"Preferred way enable keyboard navigation is to use the hook ",(0,i.kt)("inlineCode",{parentName:"p"},"useKeyboardNavigation"),". The ",(0,i.kt)("inlineCode",{parentName:"p"},"KeyboardNavigation")," component uses it and both use same properties. The component adds an extra div, which the hook does not add."),(0,i.kt)("h3",{id:"example",style:{position:"relative"}},"Example",(0,i.kt)("a",{parentName:"h3",href:"#example","aria-label":"example permalink",className:"header-anchor after"},(0,i.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,i.kt)(s.ZP,{mdxType:"PlaygroundPreview"},(0,i.kt)(l.K,{mdxType:"KeyboardNavigation"},(0,i.kt)("ul",{style:{listStyle:"none",display:"flex",border:"1px solid #000",padding:"0",position:"relative"}},(0,i.kt)("li",{style:{padding:"10px"}},(0,i.kt)("a",{href:"#",tabIndex:"0"},"Item 1")),(0,i.kt)("li",{style:{padding:"10px"}},(0,i.kt)("a",{href:"#",tabIndex:"0"},"Item 2")),(0,i.kt)("li",{style:{padding:"10px"}},(0,i.kt)("a",{href:"#",tabIndex:"0"},"Item 3"))))),(0,i.kt)("h3",{id:"principles",style:{position:"relative"}},"Principles",(0,i.kt)("a",{parentName:"h3",href:"#principles","aria-label":"principles permalink",className:"header-anchor after"},(0,i.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Keyboard navigation should not prevent native keyboard commands."),(0,i.kt)("li",{parentName:"ul"},"If natively unfocusable element is included by the selectors, the element will be modified to accept focus."),(0,i.kt)("li",{parentName:"ul"},"Elements not visible on screen are filtered out. Their bounding box must be inside the screen.")),(0,i.kt)("h3",{id:"functionalities",style:{position:"relative"}},"Functionalities",(0,i.kt)("a",{parentName:"h3",href:"#functionalities","aria-label":"functionalities permalink",className:"header-anchor after"},(0,i.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Focusable elements:")," By default all ",(0,i.kt)("inlineCode",{parentName:"li"},"<a>")," elements inside the element passed to the component are selected as focusables"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Container elements:")," By default the passed root element is the only container of focusable elements. Multiple containers need to be used only, if you have multi-level navigation with menus and submenus and may submenus of submenus. There is no limit how deep the navigational tree can be.")),(0,i.kt)("h3",{id:"selectors",style:{position:"relative"}},"Selectors",(0,i.kt)("a",{parentName:"h3",href:"#selectors","aria-label":"selectors permalink",className:"header-anchor after"},(0,i.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,i.kt)("p",null,"There are two kind of selectors: ",(0,i.kt)("inlineCode",{parentName:"p"},"focusableSelector")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"containerSelector"),". Selector can be a function or a string. Both selectors are optional."),(0,i.kt)("h3",{id:"function-selectors",style:{position:"relative"}},"Function selectors",(0,i.kt)("a",{parentName:"h3",href:"#function-selectors","aria-label":"function selectors permalink",className:"header-anchor after"},(0,i.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,i.kt)("p",null,"If selector is a function, it receives two arguments: "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"parent element. Usually the passed root element. In multilevel navigation, the parent element changes on each level."),(0,i.kt)("li",{parentName:"ul"},"path to the parent element. Path is an array of objects and it shows where in the navigational tree the parent element is.")),(0,i.kt)("h3",{id:"string-selectors",style:{position:"relative"}},"String selectors",(0,i.kt)("a",{parentName:"h3",href:"#string-selectors","aria-label":"string selectors permalink",className:"header-anchor after"},(0,i.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,i.kt)("p",null,"String selectors are used with ",(0,i.kt)("inlineCode",{parentName:"p"},"container.querySelectorAll(selector)"),". The ",(0,i.kt)("inlineCode",{parentName:"p"},"container")," is the parent element, usually root element passed to the component or hook."),(0,i.kt)("h3",{id:"the-focusableselector",style:{position:"relative"}},"The focusableSelector",(0,i.kt)("a",{parentName:"h3",href:"#the-focusableselector","aria-label":"the focusableselector permalink",className:"header-anchor after"},(0,i.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,i.kt)("p",null,"Focusable elements are queried with ",(0,i.kt)("inlineCode",{parentName:"p"},"container.querySelectorAll(selector)"),". Default selector is ",(0,i.kt)("inlineCode",{parentName:"p"},"a"),"."),(0,i.kt)("h3",{id:"the-containerselector",style:{position:"relative"}},"The containerSelector",(0,i.kt)("a",{parentName:"h3",href:"#the-containerselector","aria-label":"the containerselector permalink",className:"header-anchor after"},(0,i.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,i.kt)("p",null,"If multiple containers are needed, set the ",(0,i.kt)("inlineCode",{parentName:"p"},"containerSelector")," property. Otherwise there is no need for it. Container elements are also queried with ",(0,i.kt)("inlineCode",{parentName:"p"},"container.querySelectorAll(selector)"),"."),(0,i.kt)("h3",{id:"focusable-elements",style:{position:"relative"}},"Focusable elements",(0,i.kt)("a",{parentName:"h3",href:"#focusable-elements","aria-label":"focusable elements permalink",className:"header-anchor after"},(0,i.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,i.kt)("p",null,"You can select any element to be focusable. ",(0,i.kt)("inlineCode",{parentName:"p"},"tabindex")," attribute is set to ",(0,i.kt)("inlineCode",{parentName:"p"},"-1"),", if element is not natively focusable. Note that by default Firefox and Safari on Mac do not allow keyboard focus even then. System preferences must be changed."),(0,i.kt)("h3",{id:"container-elements",style:{position:"relative"}},"Container elements",(0,i.kt)("a",{parentName:"h3",href:"#container-elements","aria-label":"container elements permalink",className:"header-anchor after"},(0,i.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,i.kt)("p",null,"Container contains any number of focusables. All focusables in sibling containers are considered to be on same level.\nFor example all ",(0,i.kt)("inlineCode",{parentName:"p"},"<li>")," elements of a ",(0,i.kt)("inlineCode",{parentName:"p"},"<ul>")," can be containers and each ",(0,i.kt)("inlineCode",{parentName:"p"},"<a>")," in each list element can be navigated on the same level."),(0,i.kt)("h3",{id:"multilevel-containers",style:{position:"relative"}},"Multilevel containers",(0,i.kt)("a",{parentName:"h3",href:"#multilevel-containers","aria-label":"multilevel containers permalink",className:"header-anchor after"},(0,i.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,i.kt)("p",null,"If the ",(0,i.kt)("inlineCode",{parentName:"p"},"<li>")," element also has a ",(0,i.kt)("inlineCode",{parentName:"p"},"<div>")," as a subMenu container and it has ",(0,i.kt)("inlineCode",{parentName:"p"},"<span>")," elements as focusables, then you should use following selectors:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"containerSelector: ",(0,i.kt)("inlineCode",{parentName:"li"},":scope > ul > li, :scope > div")),(0,i.kt)("li",{parentName:"ul"},"focusableSelector: ",(0,i.kt)("inlineCode",{parentName:"li"},":scope a, :scope span"))),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},":scope")," should be used to limit selectors to certain level. "))}p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-components-keyboard-navigation-index-mdx-7fc5ce89bc09002f2de8.js.map