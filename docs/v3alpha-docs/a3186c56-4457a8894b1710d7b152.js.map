{"version":3,"file":"a3186c56-4457a8894b1710d7b152.js","mappings":"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","sources":["webpack://site/../node_modules/html-validate/dist/cjs/core.js"],"sourcesContent":["'use strict';\n\nvar fs = require('fs');\nvar betterAjvErrors = require('@sidvind/better-ajv-errors');\nvar Ajv = require('ajv');\nvar deepmerge = require('deepmerge');\nvar path = require('path');\nvar semver = require('semver');\nvar kleur = require('kleur');\nvar codeFrame = require('@babel/code-frame');\nvar stylishImpl = require('@html-validate/stylish');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar fs__default = /*#__PURE__*/_interopDefaultLegacy(fs);\nvar betterAjvErrors__default = /*#__PURE__*/_interopDefaultLegacy(betterAjvErrors);\nvar Ajv__default = /*#__PURE__*/_interopDefaultLegacy(Ajv);\nvar deepmerge__default = /*#__PURE__*/_interopDefaultLegacy(deepmerge);\nvar path__default = /*#__PURE__*/_interopDefaultLegacy(path);\nvar semver__default = /*#__PURE__*/_interopDefaultLegacy(semver);\nvar kleur__default = /*#__PURE__*/_interopDefaultLegacy(kleur);\nvar stylishImpl__default = /*#__PURE__*/_interopDefaultLegacy(stylishImpl);\nconst $schema$2 = \"http://json-schema.org/draft-06/schema#\";\nconst $id$2 = \"http://json-schema.org/draft-06/schema#\";\nconst title = \"Core schema meta-schema\";\nconst definitions$1 = {\n  schemaArray: {\n    type: \"array\",\n    minItems: 1,\n    items: {\n      $ref: \"#\"\n    }\n  },\n  nonNegativeInteger: {\n    type: \"integer\",\n    minimum: 0\n  },\n  nonNegativeIntegerDefault0: {\n    allOf: [{\n      $ref: \"#/definitions/nonNegativeInteger\"\n    }, {\n      \"default\": 0\n    }]\n  },\n  simpleTypes: {\n    \"enum\": [\"array\", \"boolean\", \"integer\", \"null\", \"number\", \"object\", \"string\"]\n  },\n  stringArray: {\n    type: \"array\",\n    items: {\n      type: \"string\"\n    },\n    uniqueItems: true,\n    \"default\": []\n  }\n};\nconst type$2 = [\"object\", \"boolean\"];\nconst properties$2 = {\n  $id: {\n    type: \"string\",\n    format: \"uri-reference\"\n  },\n  $schema: {\n    type: \"string\",\n    format: \"uri\"\n  },\n  $ref: {\n    type: \"string\",\n    format: \"uri-reference\"\n  },\n  title: {\n    type: \"string\"\n  },\n  description: {\n    type: \"string\"\n  },\n  \"default\": {},\n  examples: {\n    type: \"array\",\n    items: {}\n  },\n  multipleOf: {\n    type: \"number\",\n    exclusiveMinimum: 0\n  },\n  maximum: {\n    type: \"number\"\n  },\n  exclusiveMaximum: {\n    type: \"number\"\n  },\n  minimum: {\n    type: \"number\"\n  },\n  exclusiveMinimum: {\n    type: \"number\"\n  },\n  maxLength: {\n    $ref: \"#/definitions/nonNegativeInteger\"\n  },\n  minLength: {\n    $ref: \"#/definitions/nonNegativeIntegerDefault0\"\n  },\n  pattern: {\n    type: \"string\",\n    format: \"regex\"\n  },\n  additionalItems: {\n    $ref: \"#\"\n  },\n  items: {\n    anyOf: [{\n      $ref: \"#\"\n    }, {\n      $ref: \"#/definitions/schemaArray\"\n    }],\n    \"default\": {}\n  },\n  maxItems: {\n    $ref: \"#/definitions/nonNegativeInteger\"\n  },\n  minItems: {\n    $ref: \"#/definitions/nonNegativeIntegerDefault0\"\n  },\n  uniqueItems: {\n    type: \"boolean\",\n    \"default\": false\n  },\n  contains: {\n    $ref: \"#\"\n  },\n  maxProperties: {\n    $ref: \"#/definitions/nonNegativeInteger\"\n  },\n  minProperties: {\n    $ref: \"#/definitions/nonNegativeIntegerDefault0\"\n  },\n  required: {\n    $ref: \"#/definitions/stringArray\"\n  },\n  additionalProperties: {\n    $ref: \"#\"\n  },\n  definitions: {\n    type: \"object\",\n    additionalProperties: {\n      $ref: \"#\"\n    },\n    \"default\": {}\n  },\n  properties: {\n    type: \"object\",\n    additionalProperties: {\n      $ref: \"#\"\n    },\n    \"default\": {}\n  },\n  patternProperties: {\n    type: \"object\",\n    additionalProperties: {\n      $ref: \"#\"\n    },\n    \"default\": {}\n  },\n  dependencies: {\n    type: \"object\",\n    additionalProperties: {\n      anyOf: [{\n        $ref: \"#\"\n      }, {\n        $ref: \"#/definitions/stringArray\"\n      }]\n    }\n  },\n  propertyNames: {\n    $ref: \"#\"\n  },\n  \"const\": {},\n  \"enum\": {\n    type: \"array\",\n    minItems: 1,\n    uniqueItems: true\n  },\n  type: {\n    anyOf: [{\n      $ref: \"#/definitions/simpleTypes\"\n    }, {\n      type: \"array\",\n      items: {\n        $ref: \"#/definitions/simpleTypes\"\n      },\n      minItems: 1,\n      uniqueItems: true\n    }]\n  },\n  format: {\n    type: \"string\"\n  },\n  allOf: {\n    $ref: \"#/definitions/schemaArray\"\n  },\n  anyOf: {\n    $ref: \"#/definitions/schemaArray\"\n  },\n  oneOf: {\n    $ref: \"#/definitions/schemaArray\"\n  },\n  not: {\n    $ref: \"#\"\n  }\n};\nvar ajvSchemaDraft = {\n  $schema: $schema$2,\n  $id: $id$2,\n  title: title,\n  definitions: definitions$1,\n  type: type$2,\n  properties: properties$2,\n  \"default\": {}\n};\nclass NestedError extends Error {\n  constructor(message, nested) {\n    super(message);\n    Error.captureStackTrace(this, NestedError);\n    if (nested) {\n      this.stack += \"\\nCaused by: \".concat(nested.stack);\n    }\n  }\n}\n\n/**\n * @public\n */\nclass UserError extends NestedError {}\nfunction getSummary(schema, obj, errors) {\n  const output = betterAjvErrors__default[\"default\"](schema, obj, errors, {\n    format: \"js\"\n  });\n  // istanbul ignore next: for safety only\n  return output.length > 0 ? output[0].error : \"unknown validation error\";\n}\n/**\n * @public\n */\nclass SchemaValidationError extends UserError {\n  constructor(filename, message, obj, schema, errors) {\n    const summary = getSummary(schema, obj, errors);\n    super(\"\".concat(message, \": \").concat(summary));\n    this.filename = filename;\n    this.obj = obj;\n    this.schema = schema;\n    this.errors = errors;\n  }\n  prettyError() {\n    const json = this.getRawJSON();\n    return betterAjvErrors__default[\"default\"](this.schema, this.obj, this.errors, {\n      format: \"cli\",\n      indent: 2,\n      json\n    });\n  }\n  getRawJSON() {\n    if (this.filename && fs__default[\"default\"].existsSync(this.filename)) {\n      return fs__default[\"default\"].readFileSync(this.filename, \"utf-8\");\n    } else {\n      return null;\n    }\n  }\n}\nconst projectRoot = path__default[\"default\"].resolve(__dirname, \"../../\");\nconst legacyRequire = require;\nconst distFolder = path__default[\"default\"].resolve(projectRoot, \"dist/cjs\");\n\n/**\n * Similar to `require(..)` but removes the cached copy first.\n */\nfunction requireUncached(moduleId) {\n  const filename = legacyRequire.resolve(moduleId);\n  /* remove references from the parent module to prevent memory leak */\n  const m = legacyRequire.cache[filename];\n  if (m && m.parent) {\n    const {\n      parent\n    } = m;\n    for (let i = parent.children.length - 1; i >= 0; i--) {\n      if (parent.children[i].id === filename) {\n        parent.children.splice(i, 1);\n      }\n    }\n  }\n  /* remove old module from cache */\n  delete legacyRequire.cache[filename];\n  return legacyRequire(filename);\n}\nconst $schema$1 = \"http://json-schema.org/draft-06/schema#\";\nconst $id$1 = \"https://html-validate.org/schemas/elements.json\";\nconst type$1 = \"object\";\nconst properties$1 = {\n  $schema: {\n    type: \"string\"\n  }\n};\nconst patternProperties = {\n  \"^[^$].*$\": {\n    type: \"object\",\n    properties: {\n      inherit: {\n        title: \"Inherit from another element\",\n        description: \"Most properties from the parent element will be copied onto this one\",\n        type: \"string\"\n      },\n      embedded: {\n        title: \"Mark this element as belonging in the embedded content category\",\n        $ref: \"#/definitions/contentCategory\"\n      },\n      flow: {\n        title: \"Mark this element as belonging in the flow content category\",\n        $ref: \"#/definitions/contentCategory\"\n      },\n      heading: {\n        title: \"Mark this element as belonging in the heading content category\",\n        $ref: \"#/definitions/contentCategory\"\n      },\n      interactive: {\n        title: \"Mark this element as belonging in the interactive content category\",\n        $ref: \"#/definitions/contentCategory\"\n      },\n      metadata: {\n        title: \"Mark this element as belonging in the metadata content category\",\n        $ref: \"#/definitions/contentCategory\"\n      },\n      phrasing: {\n        title: \"Mark this element as belonging in the phrasing content category\",\n        $ref: \"#/definitions/contentCategory\"\n      },\n      sectioning: {\n        title: \"Mark this element as belonging in the sectioning content category\",\n        $ref: \"#/definitions/contentCategory\"\n      },\n      deprecated: {\n        title: \"Mark element as deprecated\",\n        description: \"Deprecated elements should not be used. If a message is provided it will be included in the error\",\n        anyOf: [{\n          type: \"boolean\"\n        }, {\n          type: \"string\"\n        }, {\n          $ref: \"#/definitions/deprecatedElement\"\n        }]\n      },\n      foreign: {\n        title: \"Mark element as foreign\",\n        description: \"Foreign elements are elements which have a start and end tag but is otherwize not parsed\",\n        type: \"boolean\"\n      },\n      \"void\": {\n        title: \"Mark element as void\",\n        description: \"Void elements are elements which cannot have content and thus must not use an end tag\",\n        type: \"boolean\"\n      },\n      transparent: {\n        title: \"Mark element as transparent\",\n        description: \"Transparent elements follows the same content model as its parent, i.e. the content must be allowed in the parent.\",\n        anyOf: [{\n          type: \"boolean\"\n        }, {\n          type: \"array\",\n          items: {\n            type: \"string\"\n          }\n        }]\n      },\n      implicitClosed: {\n        title: \"List of elements which implicitly closes this element\",\n        description: \"Some elements are automatically closed when another start tag occurs\",\n        type: \"array\",\n        items: {\n          type: \"string\"\n        }\n      },\n      scriptSupporting: {\n        title: \"Mark element as script-supporting\",\n        description: \"Script-supporting elements are elements which can be inserted where othersise not permitted to assist in templating\",\n        type: \"boolean\"\n      },\n      form: {\n        title: \"Mark element as a submittable form element\",\n        type: \"boolean\"\n      },\n      labelable: {\n        title: \"Mark this element as labelable\",\n        description: \"This element may contain an associated label element.\",\n        anyOf: [{\n          type: \"boolean\"\n        }, {\n          $ref: \"#/definitions/expression\"\n        }]\n      },\n      deprecatedAttributes: {\n        title: \"List of deprecated attributes\",\n        type: \"array\",\n        items: {\n          type: \"string\"\n        }\n      },\n      requiredAttributes: {\n        title: \"List of required attributes\",\n        type: \"array\",\n        items: {\n          type: \"string\"\n        }\n      },\n      attributes: {\n        title: \"List of known attributes and allowed values\",\n        $ref: \"#/definitions/PermittedAttribute\"\n      },\n      permittedContent: {\n        title: \"List of elements or categories allowed as content in this element\",\n        $ref: \"#/definitions/Permitted\"\n      },\n      permittedDescendants: {\n        title: \"List of elements or categories allowed as descendants in this element\",\n        $ref: \"#/definitions/Permitted\"\n      },\n      permittedOrder: {\n        title: \"Required order of child elements\",\n        $ref: \"#/definitions/PermittedOrder\"\n      },\n      requiredAncestors: {\n        title: \"List of required ancestor elements\",\n        $ref: \"#/definitions/RequiredAncestors\"\n      },\n      requiredContent: {\n        title: \"List of required content elements\",\n        $ref: \"#/definitions/RequiredContent\"\n      },\n      textContent: {\n        title: \"Allow, disallow or require textual content\",\n        description: \"This property controls whenever an element allows, disallows or requires text. Text from any descendant counts, not only direct children\",\n        \"default\": \"default\",\n        type: \"string\",\n        \"enum\": [\"none\", \"default\", \"required\", \"accessible\"]\n      }\n    },\n    additionalProperties: false\n  }\n};\nconst definitions = {\n  contentCategory: {\n    anyOf: [{\n      type: \"boolean\"\n    }, {\n      $ref: \"#/definitions/expression\"\n    }]\n  },\n  expression: {\n    type: \"array\",\n    minItems: 2,\n    maxItems: 2,\n    items: [{\n      type: \"string\",\n      \"enum\": [\"isDescendant\", \"hasAttribute\", \"matchAttribute\"]\n    }, {\n      anyOf: [{\n        type: \"string\"\n      }, {\n        $ref: \"#/definitions/operation\"\n      }]\n    }]\n  },\n  operation: {\n    type: \"array\",\n    minItems: 3,\n    maxItems: 3,\n    items: [{\n      type: \"string\"\n    }, {\n      type: \"string\",\n      \"enum\": [\"!=\", \"=\"]\n    }, {\n      type: \"string\"\n    }]\n  },\n  deprecatedElement: {\n    type: \"object\",\n    additionalProperties: false,\n    properties: {\n      message: {\n        type: \"string\",\n        title: \"A short text message shown next to the regular error message.\"\n      },\n      documentation: {\n        type: \"string\",\n        title: \"An extended markdown formatted message shown with the contextual rule documentation.\"\n      },\n      source: {\n        type: \"string\",\n        title: \"Element source, e.g. what standard or library deprecated this element.\",\n        \"default\": \"html5\"\n      }\n    }\n  },\n  Permitted: {\n    type: \"array\",\n    items: {\n      anyOf: [{\n        type: \"string\"\n      }, {\n        type: \"array\",\n        items: {\n          anyOf: [{\n            type: \"string\"\n          }, {\n            $ref: \"#/definitions/PermittedGroup\"\n          }]\n        }\n      }, {\n        $ref: \"#/definitions/PermittedGroup\"\n      }]\n    }\n  },\n  PermittedAttribute: {\n    type: \"object\",\n    patternProperties: {\n      \"^.*$\": {\n        anyOf: [{\n          type: \"object\",\n          additionalProperties: false,\n          properties: {\n            boolean: {\n              type: \"boolean\",\n              title: \"Set to true if this is a boolean attribute\"\n            },\n            deprecated: {\n              title: \"Set to true or string if this attribute is deprecated\",\n              oneOf: [{\n                type: \"boolean\"\n              }, {\n                type: \"string\"\n              }]\n            },\n            list: {\n              type: \"boolean\",\n              title: \"Set to true if this attribute is a list of space-separated tokens, each which must be valid by itself\"\n            },\n            \"enum\": {\n              type: \"array\",\n              title: \"Exhaustive list of values (string or regex) this attribute accepts\",\n              uniqueItems: true,\n              items: {\n                anyOf: [{\n                  type: \"string\"\n                }, {\n                  regexp: true\n                }]\n              }\n            },\n            omit: {\n              type: \"boolean\",\n              title: \"Set to true if this attribute can optionally omit its value\"\n            },\n            required: {\n              type: \"boolean\",\n              title: \"Set to true if this attribute is required\"\n            }\n          }\n        }, {\n          type: \"array\",\n          uniqueItems: true,\n          items: {\n            type: \"string\"\n          }\n        }]\n      }\n    }\n  },\n  PermittedGroup: {\n    type: \"object\",\n    additionalProperties: false,\n    properties: {\n      exclude: {\n        anyOf: [{\n          items: {\n            type: \"string\"\n          },\n          type: \"array\"\n        }, {\n          type: \"string\"\n        }]\n      }\n    }\n  },\n  PermittedOrder: {\n    type: \"array\",\n    items: {\n      type: \"string\"\n    }\n  },\n  RequiredAncestors: {\n    type: \"array\",\n    items: {\n      type: \"string\"\n    }\n  },\n  RequiredContent: {\n    type: \"array\",\n    items: {\n      type: \"string\"\n    }\n  }\n};\nvar schema = {\n  $schema: $schema$1,\n  $id: $id$1,\n  type: type$1,\n  properties: properties$1,\n  patternProperties: patternProperties,\n  definitions: definitions\n};\nvar TextContent$1;\n(function (TextContent) {\n  /* forbid node to have text content, inter-element whitespace is ignored */\n  TextContent[\"NONE\"] = \"none\";\n  /* node can have text but not required too */\n  TextContent[\"DEFAULT\"] = \"default\";\n  /* node requires text-nodes to be present (direct or by descendant) */\n  TextContent[\"REQUIRED\"] = \"required\";\n  /* node requires accessible text (hidden text is ignored, tries to get text from accessibility tree) */\n  TextContent[\"ACCESSIBLE\"] = \"accessible\";\n})(TextContent$1 || (TextContent$1 = {}));\n/**\n * Properties listed here can be copied (loaded) onto another element using\n * [[HtmlElement.loadMeta]].\n *\n * @public\n */\nconst MetaCopyableProperty = [\"metadata\", \"flow\", \"sectioning\", \"heading\", \"phrasing\", \"embedded\", \"interactive\", \"transparent\", \"form\", \"labelable\", \"attributes\", \"permittedContent\", \"permittedDescendants\", \"permittedOrder\", \"requiredAncestors\", \"requiredContent\"];\n/**\n * @internal\n */\nfunction setMetaProperty(dst, key, value) {\n  dst[key] = value;\n}\nfunction isSet(value) {\n  return typeof value !== \"undefined\";\n}\nfunction flag(value) {\n  return value ? true : undefined;\n}\nfunction stripUndefined(src) {\n  const entries = Object.entries(src).filter(_ref => {\n    let [, value] = _ref;\n    return isSet(value);\n  });\n  return Object.fromEntries(entries);\n}\nfunction migrateSingleAttribute(src, key) {\n  var _a, _b;\n  const result = {};\n  result.deprecated = flag((_a = src.deprecatedAttributes) === null || _a === void 0 ? void 0 : _a.includes(key));\n  result.required = flag((_b = src.requiredAttributes) === null || _b === void 0 ? void 0 : _b.includes(key));\n  result.omit = undefined;\n  const attr = src.attributes ? src.attributes[key] : undefined;\n  if (typeof attr === \"undefined\") {\n    return stripUndefined(result);\n  }\n  /* when the attribute is set to null we use a special property \"delete\" to\n   * flag it, if it is still set during merge (inheritance, overwriting, etc) the attribute will be removed */\n  if (attr === null) {\n    result.delete = true;\n    return stripUndefined(result);\n  }\n  if (Array.isArray(attr)) {\n    if (attr.length === 0) {\n      result.boolean = true;\n    } else {\n      result.enum = attr.filter(it => it !== \"\");\n      if (attr.includes(\"\")) {\n        result.omit = true;\n      }\n    }\n    return stripUndefined(result);\n  } else {\n    return stripUndefined({\n      ...result,\n      ...attr\n    });\n  }\n}\nfunction migrateAttributes(src) {\n  var _a, _b, _c;\n  const keys = [...Object.keys((_a = src.attributes) !== null && _a !== void 0 ? _a : {}), ...((_b = src.requiredAttributes) !== null && _b !== void 0 ? _b : []), ...((_c = src.deprecatedAttributes) !== null && _c !== void 0 ? _c : [])].sort();\n  const entries = keys.map(key => {\n    return [key, migrateSingleAttribute(src, key)];\n  });\n  return Object.fromEntries(entries);\n}\nfunction migrateElement(src) {\n  const result = {\n    ...src,\n    attributes: migrateAttributes(src)\n  };\n  /* removed properties */\n  delete result.deprecatedAttributes;\n  delete result.requiredAttributes;\n  return result;\n}\nconst dynamicKeys = [\"metadata\", \"flow\", \"sectioning\", \"heading\", \"phrasing\", \"embedded\", \"interactive\", \"labelable\"];\nconst functionTable = {\n  isDescendant,\n  hasAttribute,\n  matchAttribute\n};\nfunction clone(src) {\n  return JSON.parse(JSON.stringify(src));\n}\nfunction overwriteMerge$1(a, b) {\n  return b;\n}\n/**\n * AJV keyword \"regexp\" to validate the type to be a regular expression.\n * Injects errors with the \"type\" keyword to give the same output.\n */\n/* istanbul ignore next: manual testing */\nconst ajvRegexpValidate = function (data, dataCxt) {\n  const valid = data instanceof RegExp;\n  if (!valid) {\n    ajvRegexpValidate.errors = [{\n      instancePath: dataCxt === null || dataCxt === void 0 ? void 0 : dataCxt.instancePath,\n      schemaPath: undefined,\n      keyword: \"type\",\n      message: \"should be regexp\",\n      params: {\n        keyword: \"type\"\n      }\n    }];\n  }\n  return valid;\n};\nconst ajvRegexpKeyword = {\n  keyword: \"regexp\",\n  schema: false,\n  errors: true,\n  validate: ajvRegexpValidate\n};\n/**\n * @public\n */\nclass MetaTable {\n  /**\n   * @internal\n   */\n  constructor() {\n    this.elements = {};\n    this.schema = clone(schema);\n  }\n  /**\n   * @internal\n   */\n  init() {\n    this.resolveGlobal();\n  }\n  /**\n   * Extend validation schema.\n   *\n   * @internal\n   */\n  extendValidationSchema(patch) {\n    if (patch.properties) {\n      this.schema = deepmerge__default[\"default\"](this.schema, {\n        patternProperties: {\n          \"^[^$].*$\": {\n            properties: patch.properties\n          }\n        }\n      });\n    }\n    if (patch.definitions) {\n      this.schema = deepmerge__default[\"default\"](this.schema, {\n        definitions: patch.definitions\n      });\n    }\n  }\n  /**\n   * Load metadata table from object.\n   *\n   * @internal\n   * @param obj - Object with metadata to load\n   * @param filename - Optional filename used when presenting validation error\n   */\n  loadFromObject(obj) {\n    let filename = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var _a;\n    const validate = this.getSchemaValidator();\n    if (!validate(obj)) {\n      throw new SchemaValidationError(filename, \"Element metadata is not valid\", obj, this.schema, /* istanbul ignore next: AJV sets .errors when validate returns false */\n      (_a = validate.errors) !== null && _a !== void 0 ? _a : []);\n    }\n    for (const [key, value] of Object.entries(obj)) {\n      if (key === \"$schema\") continue;\n      this.addEntry(key, migrateElement(value));\n    }\n  }\n  /**\n   * Load metadata table from filename\n   *\n   * @internal\n   * @param filename - Filename to load\n   */\n  loadFromFile(filename) {\n    try {\n      /* load using require as it can process both js and json */\n      const data = requireUncached(filename);\n      this.loadFromObject(data, filename);\n    } catch (err) {\n      if (err instanceof SchemaValidationError) {\n        throw err;\n      }\n      throw new UserError(\"Failed to load element metadata from \\\"\".concat(filename, \"\\\"\"), err);\n    }\n  }\n  /**\n   * Get [[MetaElement]] for the given tag. If no specific metadata is present\n   * the global metadata is returned or null if no global is present.\n   *\n   * @public\n   * @returns A shallow copy of metadata.\n   */\n  getMetaFor(tagName) {\n    /* try to locate by tagname */\n    tagName = tagName.toLowerCase();\n    if (this.elements[tagName]) {\n      return {\n        ...this.elements[tagName]\n      };\n    }\n    /* try to locate global element */\n    if (this.elements[\"*\"]) {\n      return {\n        ...this.elements[\"*\"]\n      };\n    }\n    return null;\n  }\n  /**\n   * Find all tags which has enabled given property.\n   *\n   * @public\n   */\n  getTagsWithProperty(propName) {\n    return Object.entries(this.elements).filter(_ref2 => {\n      let [, entry] = _ref2;\n      return entry[propName];\n    }).map(_ref3 => {\n      let [tagName] = _ref3;\n      return tagName;\n    });\n  }\n  /**\n   * Find tag matching tagName or inheriting from it.\n   *\n   * @public\n   */\n  getTagsDerivedFrom(tagName) {\n    return Object.entries(this.elements).filter(_ref4 => {\n      let [key, entry] = _ref4;\n      return key === tagName || entry.inherit === tagName;\n    }).map(_ref5 => {\n      let [tagName] = _ref5;\n      return tagName;\n    });\n  }\n  addEntry(tagName, entry) {\n    let parent = this.elements[tagName] || {};\n    /* handle inheritance */\n    if (entry.inherit) {\n      const name = entry.inherit;\n      parent = this.elements[name];\n      if (!parent) {\n        throw new UserError(\"Element <\".concat(tagName, \"> cannot inherit from <\").concat(name, \">: no such element\"));\n      }\n    }\n    /* merge all sources together */\n    const expanded = this.mergeElement(parent, {\n      ...entry,\n      tagName\n    });\n    expandRegex(expanded);\n    this.elements[tagName] = expanded;\n  }\n  /**\n   * Construct a new AJV schema validator.\n   */\n  getSchemaValidator() {\n    const ajv = new Ajv__default[\"default\"]({\n      strict: true,\n      strictTuples: true,\n      strictTypes: true\n    });\n    ajv.addMetaSchema(ajvSchemaDraft);\n    ajv.addKeyword(ajvRegexpKeyword);\n    ajv.addKeyword({\n      keyword: \"copyable\"\n    });\n    return ajv.compile(this.schema);\n  }\n  /**\n   * @public\n   */\n  getJSONSchema() {\n    return this.schema;\n  }\n  /**\n   * Finds the global element definition and merges each known element with the\n   * global, e.g. to assign global attributes.\n   */\n  resolveGlobal() {\n    /* skip if there is no global elements */\n    if (!this.elements[\"*\"]) return;\n    /* fetch and remove the global element, it should not be resolvable by\n     * itself */\n    const global = this.elements[\"*\"];\n    delete this.elements[\"*\"];\n    /* hack: unset default properties which global should not override */\n    delete global.tagName;\n    delete global.void;\n    /* merge elements */\n    for (const [tagName, entry] of Object.entries(this.elements)) {\n      this.elements[tagName] = this.mergeElement(global, entry);\n    }\n  }\n  mergeElement(a, b) {\n    const merged = deepmerge__default[\"default\"](a, b, {\n      arrayMerge: overwriteMerge$1\n    });\n    /* special handling when removing attributes by setting them to null\n     * resulting in the deletion flag being set */\n    const filteredAttrs = Object.entries(merged.attributes).filter(_ref6 => {\n      let [, attr] = _ref6;\n      const val = !attr.delete;\n      delete attr.delete;\n      return val;\n    });\n    merged.attributes = Object.fromEntries(filteredAttrs);\n    return merged;\n  }\n  /**\n   * @internal\n   */\n  resolve(node) {\n    if (node.meta) {\n      expandProperties(node, node.meta);\n    }\n  }\n}\nfunction expandProperties(node, entry) {\n  for (const key of dynamicKeys) {\n    const property = entry[key];\n    if (property && typeof property !== \"boolean\") {\n      setMetaProperty(entry, key, evaluateProperty(node, property));\n    }\n  }\n}\n/**\n * Given a string it returns either the string as-is or if the string is wrapped\n * in /../ it creates and returns a regex instead.\n */\nfunction expandRegexValue(value) {\n  if (value instanceof RegExp) {\n    return value;\n  }\n  const match = value.match(/^\\/\\^?([^/$]*)\\$?\\/([i]*)$/);\n  if (match) {\n    const [, expr, flags] = match;\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp(\"^\".concat(expr, \"$\"), flags);\n  } else {\n    return value;\n  }\n}\n/**\n * Expand all regular expressions in strings (\"/../\"). This mutates the object.\n */\nfunction expandRegex(entry) {\n  for (const [name, values] of Object.entries(entry.attributes)) {\n    if (values.enum) {\n      entry.attributes[name].enum = values.enum.map(expandRegexValue);\n    }\n  }\n}\nfunction evaluateProperty(node, expr) {\n  const [func, options] = parseExpression(expr);\n  return func(node, options);\n}\nfunction parseExpression(expr) {\n  if (typeof expr === \"string\") {\n    return parseExpression([expr, {}]);\n  } else {\n    const [funcName, options] = expr;\n    const func = functionTable[funcName];\n    if (!func) {\n      throw new Error(\"Failed to find function \\\"\".concat(funcName, \"\\\" when evaluating property expression\"));\n    }\n    return [func, options];\n  }\n}\nfunction isDescendant(node, tagName) {\n  if (typeof tagName !== \"string\") {\n    throw new Error(\"Property expression \\\"isDescendant\\\" must take string argument when evaluating metadata for <\".concat(node.tagName, \">\"));\n  }\n  let cur = node.parent;\n  while (cur && !cur.isRootElement()) {\n    if (cur.is(tagName)) {\n      return true;\n    }\n    cur = cur.parent;\n  }\n  return false;\n}\nfunction hasAttribute(node, attr) {\n  if (typeof attr !== \"string\") {\n    throw new Error(\"Property expression \\\"hasAttribute\\\" must take string argument when evaluating metadata for <\".concat(node.tagName, \">\"));\n  }\n  return node.hasAttribute(attr);\n}\nfunction matchAttribute(node, match) {\n  if (!Array.isArray(match) || match.length !== 3) {\n    throw new Error(\"Property expression \\\"matchAttribute\\\" must take [key, op, value] array as argument when evaluating metadata for <\".concat(node.tagName, \">\"));\n  }\n  const [key, op, value] = match.map(x => x.toLowerCase());\n  const nodeValue = (node.getAttributeValue(key) || \"\").toLowerCase();\n  switch (op) {\n    case \"!=\":\n      return nodeValue !== value;\n    case \"=\":\n      return nodeValue === value;\n    default:\n      throw new Error(\"Property expression \\\"matchAttribute\\\" has invalid operator \\\"\".concat(op, \"\\\" when evaluating metadata for <\").concat(node.tagName, \">\"));\n  }\n}\n\n/**\n * @public\n */\nclass DynamicValue {\n  constructor(expr) {\n    this.expr = expr;\n  }\n  toString() {\n    return this.expr;\n  }\n}\n\n/**\n * DOM Attribute.\n *\n * Represents a HTML attribute. Can contain either a fixed static value or a\n * placeholder for dynamic values (e.g. interpolated).\n */\nclass Attribute {\n  /**\n   * @param key - Attribute name.\n   * @param value - Attribute value. Set to `null` for boolean attributes.\n   * @param keyLocation - Source location of attribute name.\n   * @param valueLocation - Source location of attribute value.\n   * @param originalAttribute - If this attribute was dynamically added via a\n   * transformation (e.g. vuejs `:id` generating the `id` attribute) this\n   * parameter should be set to the attribute name of the source attribute (`:id`).\n   */\n  constructor(key, value, keyLocation, valueLocation, originalAttribute) {\n    this.key = key;\n    this.value = value;\n    this.keyLocation = keyLocation;\n    this.valueLocation = valueLocation;\n    this.originalAttribute = originalAttribute;\n    /* force undefined to null */\n    if (typeof this.value === \"undefined\") {\n      this.value = null;\n    }\n  }\n  /**\n   * Flag set to true if the attribute value is static.\n   */\n  get isStatic() {\n    return !this.isDynamic;\n  }\n  /**\n   * Flag set to true if the attribute value is dynamic.\n   */\n  get isDynamic() {\n    return this.value instanceof DynamicValue;\n  }\n  valueMatches(pattern) {\n    let dynamicMatches = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    if (this.value === null) {\n      return false;\n    }\n    /* dynamic values matches everything */\n    if (this.value instanceof DynamicValue) {\n      return dynamicMatches;\n    }\n    /* test value against pattern */\n    if (pattern instanceof RegExp) {\n      return this.value.match(pattern) !== null;\n    } else {\n      return this.value === pattern;\n    }\n  }\n}\nfunction sliceSize(size, begin, end) {\n  if (typeof size !== \"number\") {\n    return size;\n  }\n  if (typeof end !== \"number\") {\n    return size - begin;\n  }\n  if (end < 0) {\n    end = size + end;\n  }\n  return Math.min(size, end - begin);\n}\nfunction sliceLocation(location, begin, end, wrap) {\n  if (!location) return null;\n  const size = sliceSize(location.size, begin, end);\n  const sliced = {\n    filename: location.filename,\n    offset: location.offset + begin,\n    line: location.line,\n    column: location.column + begin,\n    size\n  };\n  /* if text content is provided try to find all newlines and modify line/column accordingly */\n  if (wrap) {\n    let index = -1;\n    const col = sliced.column;\n    do {\n      index = wrap.indexOf(\"\\n\", index + 1);\n      if (index >= 0 && index < begin) {\n        sliced.column = col - (index + 1);\n        sliced.line++;\n      } else {\n        break;\n      }\n    } while (true); // eslint-disable-line no-constant-condition\n  }\n\n  return sliced;\n}\nvar State;\n(function (State) {\n  State[State[\"INITIAL\"] = 1] = \"INITIAL\";\n  State[State[\"DOCTYPE\"] = 2] = \"DOCTYPE\";\n  State[State[\"TEXT\"] = 3] = \"TEXT\";\n  State[State[\"TAG\"] = 4] = \"TAG\";\n  State[State[\"ATTR\"] = 5] = \"ATTR\";\n  State[State[\"CDATA\"] = 6] = \"CDATA\";\n  State[State[\"SCRIPT\"] = 7] = \"SCRIPT\";\n  State[State[\"STYLE\"] = 8] = \"STYLE\";\n})(State || (State = {}));\nvar ContentModel;\n(function (ContentModel) {\n  ContentModel[ContentModel[\"TEXT\"] = 1] = \"TEXT\";\n  ContentModel[ContentModel[\"SCRIPT\"] = 2] = \"SCRIPT\";\n  ContentModel[ContentModel[\"STYLE\"] = 3] = \"STYLE\";\n})(ContentModel || (ContentModel = {}));\nclass Context {\n  constructor(source) {\n    var _a, _b, _c, _d;\n    this.state = State.INITIAL;\n    this.string = source.data;\n    this.filename = (_a = source.filename) !== null && _a !== void 0 ? _a : \"\";\n    this.offset = (_b = source.offset) !== null && _b !== void 0 ? _b : 0;\n    this.line = (_c = source.line) !== null && _c !== void 0 ? _c : 1;\n    this.column = (_d = source.column) !== null && _d !== void 0 ? _d : 1;\n    this.contentModel = ContentModel.TEXT;\n  }\n  getTruncatedLine() {\n    let n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 13;\n    return JSON.stringify(this.string.length > n ? \"\".concat(this.string.slice(0, 10), \"...\") : this.string);\n  }\n  consume(n, state) {\n    /* if \"n\" is an regex match the first value is the full matched\n     * string so consume that many characters. */\n    if (typeof n !== \"number\") {\n      n = n[0].length; /* regex match */\n    }\n    /* poor mans line counter :( */\n    let consumed = this.string.slice(0, n);\n    let offset;\n    while ((offset = consumed.indexOf(\"\\n\")) >= 0) {\n      this.line++;\n      this.column = 1;\n      consumed = consumed.substr(offset + 1);\n    }\n    this.column += consumed.length;\n    this.offset += n;\n    /* remove N chars */\n    this.string = this.string.substr(n);\n    /* change state */\n    this.state = state;\n  }\n  getLocation(size) {\n    return {\n      filename: this.filename,\n      offset: this.offset,\n      line: this.line,\n      column: this.column,\n      size\n    };\n  }\n}\nvar NodeType;\n(function (NodeType) {\n  NodeType[NodeType[\"ELEMENT_NODE\"] = 1] = \"ELEMENT_NODE\";\n  NodeType[NodeType[\"TEXT_NODE\"] = 3] = \"TEXT_NODE\";\n  NodeType[NodeType[\"DOCUMENT_NODE\"] = 9] = \"DOCUMENT_NODE\";\n})(NodeType || (NodeType = {}));\nconst DOCUMENT_NODE_NAME = \"#document\";\nconst TEXT_CONTENT = Symbol(\"textContent\");\nlet counter = 0;\nclass DOMNode {\n  /**\n   * Create a new DOMNode.\n   *\n   * @param nodeType - What node type to create.\n   * @param nodeName - What node name to use. For `HtmlElement` this corresponds\n   * to the tagName but other node types have specific predefined values.\n   * @param location - Source code location of this node.\n   */\n  constructor(nodeType, nodeName, location) {\n    this.nodeType = nodeType;\n    this.nodeName = nodeName !== null && nodeName !== void 0 ? nodeName : DOCUMENT_NODE_NAME;\n    this.location = location;\n    this.disabledRules = new Set();\n    this.childNodes = [];\n    this.unique = counter++;\n    this.cache = null;\n  }\n  /**\n   * Enable cache for this node.\n   *\n   * Should not be called before the node and all children are fully constructed.\n   */\n  cacheEnable() {\n    this.cache = new Map();\n  }\n  cacheGet(key) {\n    if (this.cache) {\n      return this.cache.get(key);\n    } else {\n      return undefined;\n    }\n  }\n  cacheSet(key, value) {\n    if (this.cache) {\n      this.cache.set(key, value);\n    }\n    return value;\n  }\n  cacheRemove(key) {\n    if (this.cache) {\n      return this.cache.delete(key);\n    } else {\n      return false;\n    }\n  }\n  cacheExists(key) {\n    return Boolean(this.cache && this.cache.has(key));\n  }\n  /**\n   * Get the text (recursive) from all child nodes.\n   */\n  get textContent() {\n    const cached = this.cacheGet(TEXT_CONTENT);\n    if (cached) {\n      return cached;\n    }\n    const text = this.childNodes.map(node => node.textContent).join(\"\");\n    this.cacheSet(TEXT_CONTENT, text);\n    return text;\n  }\n  append(node) {\n    this.childNodes.push(node);\n  }\n  isRootElement() {\n    return this.nodeType === NodeType.DOCUMENT_NODE;\n  }\n  /**\n   * Tests if two nodes are the same (references the same object).\n   */\n  isSameNode(otherNode) {\n    return this.unique === otherNode.unique;\n  }\n  /**\n   * Returns a DOMNode representing the first direct child node or `null` if the\n   * node has no children.\n   */\n  get firstChild() {\n    return this.childNodes[0] || null;\n  }\n  /**\n   * Returns a DOMNode representing the last direct child node or `null` if the\n   * node has no children.\n   */\n  get lastChild() {\n    return this.childNodes[this.childNodes.length - 1] || null;\n  }\n  /**\n   * Disable a rule for this node.\n   */\n  disableRule(ruleId) {\n    this.disabledRules.add(ruleId);\n  }\n  /**\n   * Disables multiple rules.\n   */\n  disableRules(rules) {\n    for (const rule of rules) {\n      this.disableRule(rule);\n    }\n  }\n  /**\n   * Enable a previously disabled rule for this node.\n   */\n  enableRule(ruleId) {\n    this.disabledRules.delete(ruleId);\n  }\n  /**\n   * Enables multiple rules.\n   */\n  enableRules(rules) {\n    for (const rule of rules) {\n      this.enableRule(rule);\n    }\n  }\n  /**\n   * Test if a rule is enabled for this node.\n   */\n  ruleEnabled(ruleId) {\n    return !this.disabledRules.has(ruleId);\n  }\n  generateSelector() {\n    return null;\n  }\n}\nfunction parse(text, baseLocation) {\n  const tokens = [];\n  const locations = baseLocation ? [] : null;\n  for (let begin = 0; begin < text.length;) {\n    let end = text.indexOf(\" \", begin);\n    /* if the last space was found move the position to the last character\n     * in the string */\n    if (end === -1) {\n      end = text.length;\n    }\n    /* handle multiple spaces */\n    const size = end - begin;\n    if (size === 0) {\n      begin++;\n      continue;\n    }\n    /* extract token */\n    const token = text.substring(begin, end);\n    tokens.push(token);\n    /* extract location */\n    if (locations && baseLocation) {\n      const location = sliceLocation(baseLocation, begin, end);\n      locations.push(location);\n    }\n    /* advance position to the character after the current end position */\n    begin += size + 1;\n  }\n  return {\n    tokens,\n    locations\n  };\n}\nclass DOMTokenList extends Array {\n  constructor(value, location) {\n    if (value && typeof value === \"string\") {\n      /* replace all whitespace with a single space for easier parsing */\n      const normalized = value.replace(/[\\t\\r\\n]/g, \" \");\n      const {\n        tokens,\n        locations\n      } = parse(normalized, location);\n      super(...tokens);\n      this.locations = locations;\n    } else {\n      super(0);\n      this.locations = null;\n    }\n    if (value instanceof DynamicValue) {\n      this.value = value.expr;\n    } else {\n      this.value = value || \"\";\n    }\n  }\n  item(n) {\n    return this[n];\n  }\n  location(n) {\n    if (this.locations) {\n      return this.locations[n];\n    } else {\n      throw new Error(\"Trying to access DOMTokenList location when base location isn't set\");\n    }\n  }\n  contains(token) {\n    return this.includes(token);\n  }\n  *iterator() {\n    for (let index = 0; index < this.length; index++) {\n      /* eslint-disable @typescript-eslint/no-non-null-assertion */\n      const item = this.item(index);\n      const location = this.location(index);\n      /* eslint-enable @typescript-eslint/no-non-null-assertion */\n      yield {\n        index,\n        item,\n        location\n      };\n    }\n  }\n}\nvar Combinator;\n(function (Combinator) {\n  Combinator[Combinator[\"DESCENDANT\"] = 1] = \"DESCENDANT\";\n  Combinator[Combinator[\"CHILD\"] = 2] = \"CHILD\";\n  Combinator[Combinator[\"ADJACENT_SIBLING\"] = 3] = \"ADJACENT_SIBLING\";\n  Combinator[Combinator[\"GENERAL_SIBLING\"] = 4] = \"GENERAL_SIBLING\";\n  /* special cases */\n  Combinator[Combinator[\"SCOPE\"] = 5] = \"SCOPE\";\n})(Combinator || (Combinator = {}));\nfunction parseCombinator(combinator, pattern) {\n  /* special case, when pattern is :scope [[Selector]] will handle this\n   * \"combinator\" to match itself instead of descendants */\n  if (pattern === \":scope\") {\n    return Combinator.SCOPE;\n  }\n  switch (combinator) {\n    case undefined:\n    case null:\n    case \"\":\n      return Combinator.DESCENDANT;\n    case \">\":\n      return Combinator.CHILD;\n    case \"+\":\n      return Combinator.ADJACENT_SIBLING;\n    case \"~\":\n      return Combinator.GENERAL_SIBLING;\n    default:\n      throw new Error(\"Unknown combinator \\\"\".concat(combinator, \"\\\"\"));\n  }\n}\nfunction firstChild(node) {\n  return node.previousSibling === null;\n}\nfunction lastChild(node) {\n  return node.nextSibling === null;\n}\nconst cache = {};\nfunction getNthChild(node) {\n  if (!node.parent) {\n    return -1;\n  }\n  if (!cache[node.unique]) {\n    const parent = node.parent;\n    const index = parent.childElements.findIndex(cur => {\n      return cur.unique === node.unique;\n    });\n    cache[node.unique] = index + 1; /* nthChild starts at 1 */\n  }\n\n  return cache[node.unique];\n}\nfunction nthChild(node, args) {\n  if (!args) {\n    throw new Error(\"Missing argument to nth-child\");\n  }\n  const n = parseInt(args.trim(), 10);\n  const cur = getNthChild(node);\n  return cur === n;\n}\nfunction scope(node) {\n  return node.isSameNode(this.scope);\n}\nconst table = {\n  \"first-child\": firstChild,\n  \"last-child\": lastChild,\n  \"nth-child\": nthChild,\n  scope: scope\n};\nfunction factory(name, context) {\n  const fn = table[name];\n  if (fn) {\n    return fn.bind(context);\n  } else {\n    throw new Error(\"Pseudo-class \\\"\".concat(name, \"\\\" is not implemented\"));\n  }\n}\n\n/**\n * Homage to PHP: unescapes slashes.\n *\n * E.g. \"foo\\:bar\" becomes \"foo:bar\"\n */\nfunction stripslashes(value) {\n  return value.replace(/\\\\(.)/g, \"$1\");\n}\nfunction escapeSelectorComponent(text) {\n  return text.toString().replace(/([:[\\] ])/g, \"\\\\$1\");\n}\nclass Matcher {}\nclass ClassMatcher extends Matcher {\n  constructor(classname) {\n    super();\n    this.classname = classname;\n  }\n  match(node) {\n    return node.classList.contains(this.classname);\n  }\n}\nclass IdMatcher extends Matcher {\n  constructor(id) {\n    super();\n    this.id = stripslashes(id);\n  }\n  match(node) {\n    return node.id === this.id;\n  }\n}\nclass AttrMatcher extends Matcher {\n  constructor(attr) {\n    super();\n    const [, key, op, value] = attr.match(/^(.+?)(?:([~^$*|]?=)\"([^\"]+?)\")?$/);\n    this.key = key;\n    this.op = op;\n    this.value = value;\n  }\n  match(node) {\n    const attr = node.getAttribute(this.key, true) || [];\n    return attr.some(cur => {\n      switch (this.op) {\n        case undefined:\n          return true;\n        /* attribute exists */\n        case \"=\":\n          return cur.value === this.value;\n        default:\n          throw new Error(\"Attribute selector operator \".concat(this.op, \" is not implemented yet\"));\n      }\n    });\n  }\n}\nclass PseudoClassMatcher extends Matcher {\n  constructor(pseudoclass, context) {\n    super();\n    const match = pseudoclass.match(/^([^(]+)(?:\\((.*)\\))?$/);\n    if (!match) {\n      throw new Error(\"Missing pseudo-class after colon in selector pattern \\\"\".concat(context, \"\\\"\"));\n    }\n    const [, name, args] = match;\n    this.name = name;\n    this.args = args;\n  }\n  match(node, context) {\n    const fn = factory(this.name, context);\n    return fn(node, this.args);\n  }\n}\nclass Pattern {\n  constructor(pattern) {\n    const match = pattern.match(/^([~+\\->]?)((?:[*]|[^.#[:]+)?)(.*)$/);\n    match.shift(); /* remove full matched string */\n    this.selector = pattern;\n    this.combinator = parseCombinator(match.shift(), pattern);\n    this.tagName = match.shift() || \"*\";\n    const p = match[0] ? match[0].split(/(?=(?<!\\\\)[.#[:])/) : [];\n    this.pattern = p.map(cur => this.createMatcher(cur));\n  }\n  match(node, context) {\n    return node.is(this.tagName) && this.pattern.every(cur => cur.match(node, context));\n  }\n  createMatcher(pattern) {\n    switch (pattern[0]) {\n      case \".\":\n        return new ClassMatcher(pattern.slice(1));\n      case \"#\":\n        return new IdMatcher(pattern.slice(1));\n      case \"[\":\n        return new AttrMatcher(pattern.slice(1, -1));\n      case \":\":\n        return new PseudoClassMatcher(pattern.slice(1), this.selector);\n      default:\n        /* istanbul ignore next: fallback solution, the switch cases should cover\n         * everything and there is no known way to trigger this fallback */\n        throw new Error(\"Failed to create matcher for \\\"\".concat(pattern, \"\\\"\"));\n    }\n  }\n}\n/**\n * DOM Selector.\n */\nclass Selector {\n  constructor(selector) {\n    this.pattern = Selector.parse(selector);\n  }\n  /**\n   * Match this selector against a HtmlElement.\n   *\n   * @param root - Element to match against.\n   * @returns Iterator with matched elements.\n   */\n  *match(root) {\n    const context = {\n      scope: root\n    };\n    yield* this.matchInternal(root, 0, context);\n  }\n  *matchInternal(root, level, context) {\n    if (level >= this.pattern.length) {\n      yield root;\n      return;\n    }\n    const pattern = this.pattern[level];\n    const matches = Selector.findCandidates(root, pattern);\n    for (const node of matches) {\n      if (!pattern.match(node, context)) {\n        continue;\n      }\n      yield* this.matchInternal(node, level + 1, context);\n    }\n  }\n  static parse(selector) {\n    /* strip whitespace before combinators, \"ul > li\" becomes \"ul >li\", for\n     * easier parsing */\n    selector = selector.replace(/([+~>]) /g, \"$1\");\n    const pattern = selector.split(/(?:(?<!\\\\) )+/);\n    return pattern.map(part => new Pattern(part));\n  }\n  static findCandidates(root, pattern) {\n    switch (pattern.combinator) {\n      case Combinator.DESCENDANT:\n        return root.getElementsByTagName(pattern.tagName);\n      case Combinator.CHILD:\n        return root.childElements.filter(node => node.is(pattern.tagName));\n      case Combinator.ADJACENT_SIBLING:\n        return Selector.findAdjacentSibling(root);\n      case Combinator.GENERAL_SIBLING:\n        return Selector.findGeneralSibling(root);\n      case Combinator.SCOPE:\n        return [root];\n    }\n    /* istanbul ignore next: fallback solution, the switch cases should cover\n     * everything and there is no known way to trigger this fallback */\n    return [];\n  }\n  static findAdjacentSibling(node) {\n    let adjacent = false;\n    return node.siblings.filter(cur => {\n      if (adjacent) {\n        adjacent = false;\n        return true;\n      }\n      if (cur === node) {\n        adjacent = true;\n      }\n      return false;\n    });\n  }\n  static findGeneralSibling(node) {\n    let after = false;\n    return node.siblings.filter(cur => {\n      if (after) {\n        return true;\n      }\n      if (cur === node) {\n        after = true;\n      }\n      return false;\n    });\n  }\n}\nconst TEXT_NODE_NAME = \"#text\";\n/**\n * Returns true if the node is a text node.\n *\n * @public\n */\nfunction isTextNode(node) {\n  return Boolean(node && node.nodeType === NodeType.TEXT_NODE);\n}\n/**\n * Represents a text in the HTML document.\n *\n * Text nodes are appended as children of `HtmlElement` and cannot have childen\n * of its own.\n *\n * @public\n */\nclass TextNode extends DOMNode {\n  /**\n   * @param text - Text to add. When a `DynamicValue` is used the expression is\n   * used as \"text\".\n   * @param location - Source code location of this node.\n   */\n  constructor(text, location) {\n    super(NodeType.TEXT_NODE, TEXT_NODE_NAME, location);\n    this.text = text;\n  }\n  /**\n   * Get the text from node.\n   */\n  get textContent() {\n    return this.text.toString();\n  }\n  /**\n   * Flag set to true if the attribute value is static.\n   */\n  get isStatic() {\n    return !this.isDynamic;\n  }\n  /**\n   * Flag set to true if the attribute value is dynamic.\n   */\n  get isDynamic() {\n    return this.text instanceof DynamicValue;\n  }\n}\n\n/**\n * @public\n */\nexports.NodeClosed = void 0;\n(function (NodeClosed) {\n  NodeClosed[NodeClosed[\"Open\"] = 0] = \"Open\";\n  NodeClosed[NodeClosed[\"EndTag\"] = 1] = \"EndTag\";\n  NodeClosed[NodeClosed[\"VoidOmitted\"] = 2] = \"VoidOmitted\";\n  NodeClosed[NodeClosed[\"VoidSelfClosed\"] = 3] = \"VoidSelfClosed\";\n  NodeClosed[NodeClosed[\"ImplicitClosed\"] = 4] = \"ImplicitClosed\";\n})(exports.NodeClosed || (exports.NodeClosed = {}));\nfunction isElement(node) {\n  return node.nodeType === NodeType.ELEMENT_NODE;\n}\nfunction isValidTagName(tagName) {\n  return Boolean(tagName !== \"\" && tagName !== \"*\");\n}\n/**\n * @public\n */\nclass HtmlElement extends DOMNode {\n  constructor(tagName, parent, closed, meta, location) {\n    const nodeType = tagName ? NodeType.ELEMENT_NODE : NodeType.DOCUMENT_NODE;\n    super(nodeType, tagName, location);\n    if (!isValidTagName(tagName)) {\n      throw new Error(\"The tag name provided ('\".concat(tagName || \"\", \"') is not a valid name\"));\n    }\n    this.tagName = tagName || \"#document\";\n    this.parent = parent !== null && parent !== void 0 ? parent : null;\n    this.attr = {};\n    this.metaElement = meta !== null && meta !== void 0 ? meta : null;\n    this.closed = closed;\n    this.voidElement = meta ? Boolean(meta.void) : false;\n    this.depth = 0;\n    this.annotation = null;\n    if (parent) {\n      parent.childNodes.push(this);\n      /* calculate depth in domtree */\n      let cur = parent;\n      while (cur.parent) {\n        this.depth++;\n        cur = cur.parent;\n      }\n    }\n  }\n  /**\n   * @internal\n   */\n  static rootNode(location) {\n    return new HtmlElement(undefined, null, exports.NodeClosed.EndTag, null, location);\n  }\n  /**\n   * @internal\n   */\n  static fromTokens(startToken, endToken, parent, metaTable) {\n    const tagName = startToken.data[2];\n    if (!tagName) {\n      throw new Error(\"tagName cannot be empty\");\n    }\n    const meta = metaTable ? metaTable.getMetaFor(tagName) : null;\n    const open = startToken.data[1] !== \"/\";\n    const closed = isClosed(endToken, meta);\n    /* location contains position of '<' so strip it out */\n    const location = sliceLocation(startToken.location, 1);\n    return new HtmlElement(tagName, open ? parent : null, closed, meta, location);\n  }\n  /**\n   * Returns annotated name if set or defaults to `<tagName>`.\n   *\n   * E.g. `my-annotation` or `<div>`.\n   */\n  get annotatedName() {\n    if (this.annotation) {\n      return this.annotation;\n    } else {\n      return \"<\".concat(this.tagName, \">\");\n    }\n  }\n  /**\n   * Similar to childNodes but only elements.\n   */\n  get childElements() {\n    return this.childNodes.filter(isElement);\n  }\n  /**\n   * Find the first ancestor matching a selector.\n   *\n   * Implementation of DOM specification of Element.closest(selectors).\n   */\n  closest(selectors) {\n    /* eslint-disable-next-line @typescript-eslint/no-this-alias */\n    let node = this;\n    while (node) {\n      if (node.matches(selectors)) {\n        return node;\n      }\n      node = node.parent;\n    }\n    return null;\n  }\n  /**\n   * Generate a DOM selector for this element. The returned selector will be\n   * unique inside the current document.\n   */\n  generateSelector() {\n    /* root element cannot have a selector as it isn't a proper element */\n    if (this.isRootElement()) {\n      return null;\n    }\n    const parts = [];\n    let root;\n    for (root = this; root.parent; root = root.parent) {\n      /* .. */\n    }\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    for (let cur = this; cur.parent; cur = cur.parent) {\n      /* if a unique id is present, use it and short-circuit */\n      if (cur.id) {\n        const escaped = escapeSelectorComponent(cur.id);\n        const matches = root.querySelectorAll(\"#\".concat(escaped));\n        if (matches.length === 1) {\n          parts.push(\"#\".concat(escaped));\n          break;\n        }\n      }\n      const parent = cur.parent;\n      const child = parent.childElements;\n      const index = child.findIndex(it => it.unique === cur.unique);\n      const numOfType = child.filter(it => it.is(cur.tagName)).length;\n      const solo = numOfType === 1;\n      /* if this is the only tagName in this level of siblings nth-child isn't needed */\n      if (solo) {\n        parts.push(cur.tagName.toLowerCase());\n        continue;\n      }\n      /* this will generate the worst kind of selector but at least it will be accurate (optimizations welcome) */\n      parts.push(\"\".concat(cur.tagName.toLowerCase(), \":nth-child(\").concat(index + 1, \")\"));\n    }\n    return parts.reverse().join(\" > \");\n  }\n  /**\n   * Tests if this element has given tagname.\n   *\n   * If passing \"*\" this test will pass if any tagname is set.\n   */\n  is(tagName) {\n    return tagName === \"*\" || this.tagName.toLowerCase() === tagName.toLowerCase();\n  }\n  /**\n   * Load new element metadata onto this element.\n   *\n   * Do note that semantics such as `void` cannot be changed (as the element has\n   * already been created). In addition the element will still \"be\" the same\n   * element, i.e. even if loading meta for a `<p>` tag upon a `<div>` tag it\n   * will still be a `<div>` as far as the rest of the validator is concerned.\n   *\n   * In fact only certain properties will be copied onto the element:\n   *\n   * - content categories (flow, phrasing, etc)\n   * - required attributes\n   * - attribute allowed values\n   * - permitted/required elements\n   *\n   * Properties *not* loaded:\n   *\n   * - inherit\n   * - deprecated\n   * - foreign\n   * - void\n   * - implicitClosed\n   * - scriptSupporting\n   * - deprecatedAttributes\n   *\n   * Changes to element metadata will only be visible after `element:ready` (and\n   * the subsequent `dom:ready` event).\n   */\n  loadMeta(meta) {\n    if (!this.metaElement) {\n      this.metaElement = {};\n    }\n    for (const key of MetaCopyableProperty) {\n      const value = meta[key];\n      if (typeof value !== \"undefined\") {\n        setMetaProperty(this.metaElement, key, value);\n      } else {\n        delete this.metaElement[key];\n      }\n    }\n  }\n  /**\n   * Match this element against given selectors. Returns true if any selector\n   * matches.\n   *\n   * Implementation of DOM specification of Element.matches(selectors).\n   */\n  matches(selector) {\n    /* find root element */\n    /* eslint-disable-next-line @typescript-eslint/no-this-alias */\n    let root = this;\n    while (root.parent) {\n      root = root.parent;\n    }\n    /* a bit slow implementation as it finds all candidates for the selector and\n     * then tests if any of them are the current element. A better\n     * implementation would be to walk the selector right-to-left and test\n     * ancestors. */\n    for (const match of root.querySelectorAll(selector)) {\n      if (match.unique === this.unique) {\n        return true;\n      }\n    }\n    return false;\n  }\n  get meta() {\n    return this.metaElement;\n  }\n  /**\n   * Set annotation for this element.\n   */\n  setAnnotation(text) {\n    this.annotation = text;\n  }\n  /**\n   * Set attribute. Stores all attributes set even with the same name.\n   *\n   * @param key - Attribute name\n   * @param value - Attribute value. Use `null` if no value is present.\n   * @param keyLocation - Location of the attribute name.\n   * @param valueLocation - Location of the attribute value (excluding quotation)\n   * @param originalAttribute - If attribute is an alias for another attribute\n   * (dynamic attributes) set this to the original attribute name.\n   */\n  setAttribute(key, value, keyLocation, valueLocation, originalAttribute) {\n    key = key.toLowerCase();\n    if (!this.attr[key]) {\n      this.attr[key] = [];\n    }\n    this.attr[key].push(new Attribute(key, value, keyLocation, valueLocation, originalAttribute));\n  }\n  /**\n   * Get a list of all attributes on this node.\n   */\n  get attributes() {\n    return Object.values(this.attr).reduce((result, cur) => {\n      return result.concat(cur);\n    }, []);\n  }\n  hasAttribute(key) {\n    key = key.toLowerCase();\n    return key in this.attr;\n  }\n  getAttribute(key) {\n    let all = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    key = key.toLowerCase();\n    if (key in this.attr) {\n      const matches = this.attr[key];\n      return all ? matches : matches[0];\n    } else {\n      return null;\n    }\n  }\n  /**\n   * Get attribute value.\n   *\n   * Returns the attribute value if present.\n   *\n   * - Missing attributes return `null`.\n   * - Boolean attributes return `null`.\n   * - `DynamicValue` returns attribute expression.\n   *\n   * @param key - Attribute name\n   * @returns Attribute value or null.\n   */\n  getAttributeValue(key) {\n    const attr = this.getAttribute(key);\n    if (attr) {\n      return attr.value !== null ? attr.value.toString() : null;\n    } else {\n      return null;\n    }\n  }\n  /**\n   * Add text as a child node to this element.\n   *\n   * @param text - Text to add.\n   * @param location - Source code location of this text.\n   */\n  appendText(text, location) {\n    this.childNodes.push(new TextNode(text, location));\n  }\n  /**\n   * Return a list of all known classes on the element. Dynamic values are\n   * ignored.\n   */\n  get classList() {\n    if (!this.hasAttribute(\"class\")) {\n      return new DOMTokenList(null, null);\n    }\n    const classes = this.getAttribute(\"class\", true).filter(attr => attr.isStatic).map(attr => attr.value).join(\" \");\n    return new DOMTokenList(classes, null);\n  }\n  /**\n   * Get element ID if present.\n   */\n  get id() {\n    return this.getAttributeValue(\"id\");\n  }\n  /**\n   * Returns the first child element or null if there are no child elements.\n   */\n  get firstElementChild() {\n    const children = this.childElements;\n    return children.length > 0 ? children[0] : null;\n  }\n  /**\n   * Returns the last child element or null if there are no child elements.\n   */\n  get lastElementChild() {\n    const children = this.childElements;\n    return children.length > 0 ? children[children.length - 1] : null;\n  }\n  get siblings() {\n    return this.parent ? this.parent.childElements : [this];\n  }\n  get previousSibling() {\n    const i = this.siblings.findIndex(node => node.unique === this.unique);\n    return i >= 1 ? this.siblings[i - 1] : null;\n  }\n  get nextSibling() {\n    const i = this.siblings.findIndex(node => node.unique === this.unique);\n    return i <= this.siblings.length - 2 ? this.siblings[i + 1] : null;\n  }\n  getElementsByTagName(tagName) {\n    return this.childElements.reduce((matches, node) => {\n      return matches.concat(node.is(tagName) ? [node] : [], node.getElementsByTagName(tagName));\n    }, []);\n  }\n  querySelector(selector) {\n    const it = this.querySelectorImpl(selector);\n    return it.next().value || null;\n  }\n  querySelectorAll(selector) {\n    const it = this.querySelectorImpl(selector);\n    const unique = new Set(it);\n    return Array.from(unique.values());\n  }\n  *querySelectorImpl(selectorList) {\n    if (!selectorList) {\n      return;\n    }\n    for (const selector of selectorList.split(/,\\s*/)) {\n      const pattern = new Selector(selector);\n      yield* pattern.match(this);\n    }\n  }\n  /**\n   * Visit all nodes from this node and down. Depth first.\n   *\n   * @internal\n   */\n  visitDepthFirst(callback) {\n    function visit(node) {\n      node.childElements.forEach(visit);\n      if (!node.isRootElement()) {\n        callback(node);\n      }\n    }\n    visit(this);\n  }\n  /**\n   * Evaluates callbackk on all descendants, returning true if any are true.\n   *\n   * @internal\n   */\n  someChildren(callback) {\n    return this.childElements.some(visit);\n    function visit(node) {\n      if (callback(node)) {\n        return true;\n      } else {\n        return node.childElements.some(visit);\n      }\n    }\n  }\n  /**\n   * Evaluates callbackk on all descendants, returning true if all are true.\n   *\n   * @internal\n   */\n  everyChildren(callback) {\n    return this.childElements.every(visit);\n    function visit(node) {\n      if (!callback(node)) {\n        return false;\n      }\n      return node.childElements.every(visit);\n    }\n  }\n  /**\n   * Visit all nodes from this node and down. Breadth first.\n   *\n   * The first node for which the callback evaluates to true is returned.\n   *\n   * @internal\n   */\n  find(callback) {\n    function visit(node) {\n      if (callback(node)) {\n        return node;\n      }\n      for (const child of node.childElements) {\n        const match = child.find(callback);\n        if (match) {\n          return match;\n        }\n      }\n      return null;\n    }\n    return visit(this);\n  }\n}\nfunction isClosed(endToken, meta) {\n  let closed = exports.NodeClosed.Open;\n  if (meta && meta.void) {\n    closed = exports.NodeClosed.VoidOmitted;\n  }\n  if (endToken.data[0] === \"/>\") {\n    closed = exports.NodeClosed.VoidSelfClosed;\n  }\n  return closed;\n}\nclass DOMTree {\n  constructor(location) {\n    this.root = HtmlElement.rootNode(location);\n    this.active = this.root;\n    this.doctype = null;\n  }\n  pushActive(node) {\n    this.active = node;\n  }\n  popActive() {\n    if (this.active.isRootElement()) {\n      /* root element should never be popped, continue as if nothing happened */\n      return;\n    }\n    this.active = this.active.parent || this.root;\n  }\n  getActive() {\n    return this.active;\n  }\n  /**\n   * Resolve dynamic meta expressions.\n   */\n  resolveMeta(table) {\n    this.visitDepthFirst(node => table.resolve(node));\n  }\n  getElementsByTagName(tagName) {\n    return this.root.getElementsByTagName(tagName);\n  }\n  visitDepthFirst(callback) {\n    this.root.visitDepthFirst(callback);\n  }\n  find(callback) {\n    return this.root.find(callback);\n  }\n  querySelector(selector) {\n    return this.root.querySelector(selector);\n  }\n  querySelectorAll(selector) {\n    return this.root.querySelectorAll(selector);\n  }\n}\nconst allowedKeys = [\"exclude\"];\n/**\n * Helper class to validate elements against metadata rules.\n */\nclass Validator {\n  /**\n   * Test if element is used in a proper context.\n   *\n   * @param node - Element to test.\n   * @param rules - List of rules.\n   * @returns `true` if element passes all tests.\n   */\n  static validatePermitted(node, rules) {\n    if (!rules) {\n      return true;\n    }\n    return rules.some(rule => {\n      return Validator.validatePermittedRule(node, rule);\n    });\n  }\n  /**\n   * Test if an element is used the correct amount of times.\n   *\n   * For instance, a `<table>` element can only contain a single `<tbody>`\n   * child. If multiple `<tbody>` exists this test will fail both nodes.\n   *\n   * @param node - Element to test.\n   * @param rules - List of rules.\n   * @param numSiblings - How many siblings of the same type as the element\n   * exists (including the element itself)\n   * @returns `true` if the element passes the test.\n   */\n  static validateOccurrences(node, rules, numSiblings) {\n    if (!rules) {\n      return true;\n    }\n    const category = rules.find(cur => {\n      /** @todo handle complex rules and not just plain arrays (but as of now\n       * there is no use-case for it) */\n      // istanbul ignore next\n      if (typeof cur !== \"string\") {\n        return false;\n      }\n      const match = cur.match(/^(.*?)[?*]?$/);\n      return match && match[1] === node.tagName;\n    });\n    const limit = parseAmountQualifier(category);\n    return limit === null || numSiblings <= limit;\n  }\n  /**\n   * Validate elements order.\n   *\n   * Given a parent element with children and metadata containing permitted\n   * order it will validate each children and ensure each one exists in the\n   * specified order.\n   *\n   * For instance, for a `<table>` element the `<caption>` element must come\n   * before a `<thead>` which must come before `<tbody>`.\n   *\n   * @param children - Array of children to validate.\n   */\n  static validateOrder(children, rules, cb) {\n    if (!rules) {\n      return true;\n    }\n    let i = 0;\n    let prev = null;\n    for (const node of children) {\n      const old = i;\n      while (rules[i] && !Validator.validatePermittedCategory(node, rules[i], true)) {\n        i++;\n      }\n      if (i >= rules.length) {\n        /* Second check is if the order is specified for this element at all. It\n         * will be unspecified in two cases:\n         * - disallowed elements\n         * - elements where the order doesn't matter\n         * In both of these cases no error should be reported. */\n        const orderSpecified = rules.find(cur => Validator.validatePermittedCategory(node, cur, true));\n        if (orderSpecified) {\n          cb(node, prev);\n          return false;\n        }\n        /* if this element has unspecified order the index is restored so new\n         * elements of the same type can be specified again */\n        i = old;\n      }\n      prev = node;\n    }\n    return true;\n  }\n  /**\n   * Validate element ancestors.\n   *\n   * Check if an element has the required set of elements. At least one of the\n   * selectors must match.\n   */\n  static validateAncestors(node, rules) {\n    if (!rules || rules.length === 0) {\n      return true;\n    }\n    return rules.some(rule => node.closest(rule));\n  }\n  /**\n   * Validate element required content.\n   *\n   * Check if an element has the required set of elements. At least one of the\n   * selectors must match.\n   *\n   * Returns [] when valid or a list of tagNames missing as content.\n   */\n  static validateRequiredContent(node, rules) {\n    if (!rules || rules.length === 0) {\n      return [];\n    }\n    return rules.filter(tagName => {\n      const haveMatchingChild = node.childElements.some(child => child.is(tagName));\n      return !haveMatchingChild;\n    });\n  }\n  /**\n   * Test if an attribute has an allowed value and/or format.\n   *\n   * @param attr - Attribute to test.\n   * @param rules - Element attribute metadta.\n   * @returns `true` if attribute passes all tests.\n   */\n  /* eslint-disable-next-line complexity */\n  static validateAttribute(attr, rules) {\n    const rule = rules[attr.key];\n    if (!rule) {\n      return true;\n    }\n    /* consider dynamic values as valid as there is no way to properly test them\n     * while using transformed sources, i.e. it must be tested when running in a\n     * browser instead */\n    const value = attr.value;\n    if (value instanceof DynamicValue) {\n      return true;\n    }\n    const empty = value === null || value === \"\";\n    /* if boolean is set the value can be either null, empty string or the\n     * attribute key (attribute-boolean-style regulates style) */\n    if (rule.boolean) {\n      return empty || value === attr.key;\n    }\n    /* if omit is set the value can be either null or empty string\n     * (attribute-empty style regulates style) */\n    if (rule.omit && empty) {\n      return true;\n    }\n    /* validate each token when using list, all tokens must be valid */\n    if (rule.list) {\n      const tokens = new DOMTokenList(value, attr.valueLocation);\n      return tokens.every(token => {\n        return this.validateAttributeValue(token, rule);\n      });\n    }\n    return this.validateAttributeValue(value, rule);\n  }\n  static validateAttributeValue(value, rule) {\n    /* skip attribute if it not have enumerated list */\n    if (!rule.enum) {\n      return true;\n    }\n    if (value === null || value === undefined) {\n      return false;\n    }\n    return rule.enum.some(entry => {\n      if (entry instanceof RegExp) {\n        return !!value.match(entry);\n      } else {\n        return value === entry;\n      }\n    });\n  }\n  static validatePermittedRule(node, rule) {\n    let isExclude = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (typeof rule === \"string\") {\n      return Validator.validatePermittedCategory(node, rule, !isExclude);\n    } else if (Array.isArray(rule)) {\n      return rule.every(inner => {\n        return Validator.validatePermittedRule(node, inner, isExclude);\n      });\n    } else {\n      validateKeys(rule);\n      if (rule.exclude) {\n        if (Array.isArray(rule.exclude)) {\n          return !rule.exclude.some(inner => {\n            return Validator.validatePermittedRule(node, inner, true);\n          });\n        } else {\n          return !Validator.validatePermittedRule(node, rule.exclude, true);\n        }\n      } else {\n        return true;\n      }\n    }\n  }\n  /**\n   * Validate node against a content category.\n   *\n   * When matching parent nodes against permitted parents use the superset\n   * parameter to also match for `@flow`. E.g. if a node expects a `@phrasing`\n   * parent it should also allow `@flow` parent since `@phrasing` is a subset of\n   * `@flow`.\n   *\n   * @param node - The node to test against\n   * @param category - Name of category with `@` prefix or tag name.\n   * @param defaultMatch - The default return value when node categories is not known.\n   */\n  // eslint-disable-next-line complexity\n  static validatePermittedCategory(node, category, defaultMatch) {\n    /* match tagName when an explicit name is given */\n    if (category[0] !== \"@\") {\n      const [, tagName] = category.match(/^(.*?)[?*]?$/);\n      return node.tagName === tagName;\n    }\n    /* if the meta entry is missing assume any content model would match */\n    if (!node.meta) {\n      return defaultMatch;\n    }\n    switch (category) {\n      case \"@meta\":\n        return node.meta.metadata;\n      case \"@flow\":\n        return node.meta.flow;\n      case \"@sectioning\":\n        return node.meta.sectioning;\n      case \"@heading\":\n        return node.meta.heading;\n      case \"@phrasing\":\n        return node.meta.phrasing;\n      case \"@embedded\":\n        return node.meta.embedded;\n      case \"@interactive\":\n        return node.meta.interactive;\n      case \"@script\":\n        return node.meta.scriptSupporting;\n      case \"@form\":\n        return node.meta.form;\n      default:\n        throw new Error(\"Invalid content category \\\"\".concat(category, \"\\\"\"));\n    }\n  }\n}\nfunction validateKeys(rule) {\n  for (const key of Object.keys(rule)) {\n    if (!allowedKeys.includes(key)) {\n      const str = JSON.stringify(rule);\n      throw new Error(\"Permitted rule \\\"\".concat(str, \"\\\" contains unknown property \\\"\").concat(key, \"\\\"\"));\n    }\n  }\n}\nfunction parseAmountQualifier(category) {\n  if (!category) {\n    /* content not allowed, catched by another rule so just assume unlimited\n     * usage for this purpose */\n    return null;\n  }\n  const [, qualifier] = category.match(/^.*?([?*]?)$/);\n  switch (qualifier) {\n    case \"?\":\n      return 1;\n    case \"\":\n      return null;\n    case \"*\":\n      return null;\n    /* istanbul ignore next */\n    default:\n      throw new Error(\"Invalid amount qualifier \\\"\".concat(qualifier, \"\\\" used\"));\n  }\n}\nconst $schema = \"http://json-schema.org/draft-06/schema#\";\nconst $id = \"https://html-validate.org/schemas/config.json\";\nconst type = \"object\";\nconst additionalProperties = false;\nconst properties = {\n  $schema: {\n    type: \"string\"\n  },\n  root: {\n    type: \"boolean\",\n    title: \"Mark as root configuration\",\n    description: \"If this is set to true no further configurations will be searched.\",\n    \"default\": false\n  },\n  \"extends\": {\n    type: \"array\",\n    items: {\n      type: \"string\"\n    },\n    title: \"Configurations to extend\",\n    description: \"Array of shareable or builtin configurations to extend.\"\n  },\n  elements: {\n    type: \"array\",\n    items: {\n      anyOf: [{\n        type: \"string\"\n      }, {\n        type: \"object\"\n      }]\n    },\n    title: \"Element metadata to load\",\n    description: \"Array of modules, plugins or files to load element metadata from. Use <rootDir> to refer to the folder with the package.json file.\",\n    examples: [[\"html-validate:recommended\", \"plugin:recommended\", \"module\", \"./local-file.json\"]]\n  },\n  plugins: {\n    type: \"array\",\n    items: {\n      type: \"string\"\n    },\n    title: \"Plugins to load\",\n    description: \"Array of plugins load. Use <rootDir> to refer to the folder with the package.json file.\",\n    examples: [[\"my-plugin\", \"./local-plugin\"]]\n  },\n  transform: {\n    type: \"object\",\n    additionalProperties: {\n      type: \"string\"\n    },\n    title: \"File transformations to use.\",\n    description: \"Object where key is regular expression to match filename and value is name of transformer.\",\n    examples: [{\n      \"^.*\\\\.foo$\": \"my-transformer\",\n      \"^.*\\\\.bar$\": \"my-plugin\",\n      \"^.*\\\\.baz$\": \"my-plugin:named\"\n    }]\n  },\n  rules: {\n    type: \"object\",\n    patternProperties: {\n      \".*\": {\n        anyOf: [{\n          \"enum\": [0, 1, 2, \"off\", \"warn\", \"error\"]\n        }, {\n          type: \"array\",\n          minItems: 1,\n          maxItems: 1,\n          items: [{\n            \"enum\": [0, 1, 2, \"off\", \"warn\", \"error\"]\n          }]\n        }, {\n          type: \"array\",\n          minItems: 2,\n          maxItems: 2,\n          items: [{\n            \"enum\": [0, 1, 2, \"off\", \"warn\", \"error\"]\n          }, {}]\n        }]\n      }\n    },\n    title: \"Rule configuration.\",\n    description: \"Enable/disable rules, set severity. Some rules have additional configuration like style or patterns to use.\",\n    examples: [{\n      foo: \"error\",\n      bar: \"off\",\n      baz: [\"error\", {\n        style: \"camelcase\"\n      }]\n    }]\n  }\n};\nvar configurationSchema = {\n  $schema: $schema,\n  $id: $id,\n  type: type,\n  additionalProperties: additionalProperties,\n  properties: properties\n};\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nconst espree = legacyRequire(\"espree\");\nconst walk = legacyRequire(\"acorn-walk\");\nfunction joinTemplateLiteral(nodes) {\n  let offset = nodes[0].start + 1;\n  let output = \"\";\n  for (const node of nodes) {\n    output += \" \".repeat(node.start + 1 - offset);\n    output += node.value.raw;\n    offset = node.end - 2;\n  }\n  return output;\n}\n/**\n * Compute source offset from line and column and the given markup.\n *\n * @param position - Line and column.\n * @param data - Source markup.\n * @returns The byte offset into the markup which line and column corresponds to.\n */\nfunction computeOffset(position, data) {\n  let line = position.line;\n  let column = position.column + 1;\n  for (let i = 0; i < data.length; i++) {\n    if (line > 1) {\n      /* not yet on the correct line */\n      if (data[i] === \"\\n\") {\n        line--;\n      }\n    } else if (column > 1) {\n      /* not yet on the correct column */\n      column--;\n    } else {\n      /* line/column found, return current position */\n      return i;\n    }\n  }\n  /* istanbul ignore next: should never reach this line unless espree passes bad\n   * positions, no sane way to test */\n  throw new Error(\"Failed to compute location offset from position\");\n}\nfunction extractLiteral(node, filename, data) {\n  switch (node.type) {\n    /* ignored nodes */\n    case \"FunctionExpression\":\n    case \"Identifier\":\n      return null;\n    case \"Literal\":\n      if (typeof node.value !== \"string\") {\n        return null;\n      }\n      return {\n        data: node.value.toString(),\n        filename,\n        line: node.loc.start.line,\n        column: node.loc.start.column + 1,\n        offset: computeOffset(node.loc.start, data) + 1\n      };\n    case \"TemplateLiteral\":\n      return {\n        data: joinTemplateLiteral(node.quasis),\n        filename,\n        line: node.loc.start.line,\n        column: node.loc.start.column + 1,\n        offset: computeOffset(node.loc.start, data) + 1\n      };\n    case \"TaggedTemplateExpression\":\n      return {\n        data: joinTemplateLiteral(node.quasi.quasis),\n        filename,\n        line: node.quasi.loc.start.line,\n        column: node.quasi.loc.start.column + 1,\n        offset: computeOffset(node.quasi.loc.start, data) + 1\n      };\n    case \"ArrowFunctionExpression\":\n      {\n        const whitelist = [\"Literal\", \"TemplateLiteral\"];\n        if (whitelist.includes(node.body.type)) {\n          return extractLiteral(node.body, filename, data);\n        } else {\n          return null;\n        }\n      }\n    /* istanbul ignore next: this only provides a better error, all currently known nodes are tested */\n    default:\n      {\n        const loc = node.loc.start;\n        const context = \"\".concat(filename, \":\").concat(loc.line, \":\").concat(loc.column);\n        throw new Error(\"Unhandled node type \\\"\".concat(node.type, \"\\\" at \\\"\").concat(context, \"\\\" in extractLiteral\"));\n      }\n  }\n}\nfunction compareKey(node, key, filename) {\n  switch (node.type) {\n    case \"Identifier\":\n      return node.name === key;\n    case \"Literal\":\n      return node.value === key;\n    /* istanbul ignore next: this only provides a better error, all currently known nodes are tested */\n    default:\n      {\n        const loc = node.loc.start;\n        const context = \"\".concat(filename, \":\").concat(loc.line, \":\").concat(loc.column);\n        throw new Error(\"Unhandled node type \\\"\".concat(node.type, \"\\\" at \\\"\").concat(context, \"\\\" in compareKey\"));\n      }\n  }\n}\n/**\n * @public\n */\nclass TemplateExtractor {\n  constructor(ast, filename, data) {\n    this.ast = ast;\n    this.filename = filename;\n    this.data = data;\n  }\n  static fromFilename(filename) {\n    const source = fs__default[\"default\"].readFileSync(filename, \"utf-8\");\n    const ast = espree.parse(source, {\n      ecmaVersion: 2017,\n      sourceType: \"module\",\n      loc: true\n    });\n    return new TemplateExtractor(ast, filename, source);\n  }\n  /**\n   * Create a new [[TemplateExtractor]] from javascript source code.\n   *\n   * `Source` offsets will be relative to the string, i.e. offset 0 is the first\n   * character of the string. If the string is only a subset of a larger string\n   * the offsets must be adjusted manually.\n   *\n   * @param source - Source code.\n   * @param filename - Optional filename to set in the resulting\n   * `Source`. Defauls to `\"inline\"`.\n   */\n  static fromString(source, filename) {\n    const ast = espree.parse(source, {\n      ecmaVersion: 2017,\n      sourceType: \"module\",\n      loc: true\n    });\n    return new TemplateExtractor(ast, filename || \"inline\", source);\n  }\n  /**\n   * Convenience function to create a [[Source]] instance from an existing file.\n   *\n   * @param filename - Filename with javascript source code. The file must exist\n   * and be readable by the user.\n   * @returns An array of Source's suitable for passing to [[Engine]] linting\n   * functions.\n   */\n  static createSource(filename) {\n    const data = fs__default[\"default\"].readFileSync(filename, \"utf-8\");\n    return [{\n      column: 1,\n      data,\n      filename,\n      line: 1,\n      offset: 0\n    }];\n  }\n  /**\n   * Extract object properties.\n   *\n   * Given a key `\"template\"` this method finds all objects literals with a\n   * `\"template\"` property and creates a [[Source]] instance with proper offsets\n   * with the value of the property. For instance:\n   *\n   * ```\n   * const myObj = {\n   *   foo: 'bar',\n   * };\n   * ```\n   *\n   * The above snippet would yield a `Source` with the content `bar`.\n   *\n   */\n  extractObjectProperty(key) {\n    const result = [];\n    const {\n      filename,\n      data\n    } = this;\n    walk.simple(this.ast, {\n      Property(node) {\n        if (compareKey(node.key, key, filename)) {\n          const source = extractLiteral(node.value, filename, data);\n          if (source) {\n            source.filename = filename;\n            result.push(source);\n          }\n        }\n      }\n    });\n    return result;\n  }\n}\nvar TRANSFORMER_API;\n(function (TRANSFORMER_API) {\n  TRANSFORMER_API[TRANSFORMER_API[\"VERSION\"] = 1] = \"VERSION\";\n})(TRANSFORMER_API || (TRANSFORMER_API = {}));\n\n/* generated file, changes will be overwritten */\n/** @public */\nconst name = \"html-validate\";\n/** @public */\nconst version = \"6.5.0\";\n/** @public */\nconst homepage = \"https://html-validate.org\";\n/** @public */\nconst bugs = \"https://gitlab.com/html-validate/html-validate/issues/new\";\n\n/**\n * @public\n */\nexports.Severity = void 0;\n(function (Severity) {\n  Severity[Severity[\"DISABLED\"] = 0] = \"DISABLED\";\n  Severity[Severity[\"WARN\"] = 1] = \"WARN\";\n  Severity[Severity[\"ERROR\"] = 2] = \"ERROR\";\n})(exports.Severity || (exports.Severity = {}));\n/**\n * @internal\n */\nfunction parseSeverity(value) {\n  switch (value) {\n    case 0:\n    case \"off\":\n      return exports.Severity.DISABLED;\n    /* istanbul ignore next: deprecated code which will be removed later */\n    case \"disable\":\n      // eslint-disable-next-line no-console\n      console.warn(\"Deprecated alias \\\"disabled\\\" will be removed, replace with severity \\\"off\\\"\");\n      return exports.Severity.DISABLED;\n    case 1:\n    case \"warn\":\n      return exports.Severity.WARN;\n    case 2:\n    case \"error\":\n      return exports.Severity.ERROR;\n    default:\n      throw new Error(\"Invalid severity \\\"\".concat(value, \"\\\"\"));\n  }\n}\nfunction escape(value) {\n  return value.replace(/'/g, \"\\\\'\");\n}\nfunction format(value) {\n  let quote = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  if (value === null) {\n    return \"null\";\n  }\n  if (typeof value === \"number\") {\n    return value.toString();\n  }\n  if (typeof value === \"string\") {\n    return quote ? \"'\".concat(escape(value), \"'\") : value;\n  }\n  if (Array.isArray(value)) {\n    const content = value.map(it => format(it, true)).join(\", \");\n    return \"[ \".concat(content, \" ]\");\n  }\n  if (typeof value === \"object\") {\n    const content = Object.entries(value).map(_ref7 => {\n      let [key, nested] = _ref7;\n      return \"\".concat(key, \": \").concat(format(nested, true));\n    }).join(\", \");\n    return \"{ \".concat(content, \" }\");\n  }\n  return String(value);\n}\n/**\n * Replaces placeholder `{{ ... }}` with values from given object.\n *\n * @internal\n */\nfunction interpolate(text, data) {\n  return text.replace(/{{\\s*([^\\s]+)\\s*}}/g, (match, key) => {\n    return typeof data[key] !== \"undefined\" ? format(data[key]) : match;\n  });\n}\nconst remapEvents = {\n  \"tag:open\": \"tag:start\",\n  \"tag:close\": \"tag:end\"\n};\nconst ajv$1 = new Ajv__default[\"default\"]({\n  strict: true,\n  strictTuples: true,\n  strictTypes: true\n});\najv$1.addMetaSchema(ajvSchemaDraft);\n/**\n * Get (cached) schema validator for rule options.\n *\n * @param ruleId - Rule ID used as key for schema lookups.\n * @param properties - Uncompiled schema.\n */\nfunction getSchemaValidator(ruleId, properties) {\n  const $id = \"rule/\".concat(ruleId);\n  const cached = ajv$1.getSchema($id);\n  if (cached) {\n    return cached;\n  }\n  const schema = {\n    $id,\n    type: \"object\",\n    additionalProperties: false,\n    properties\n  };\n  return ajv$1.compile(schema);\n}\n/**\n * @public\n */\nclass Rule {\n  constructor(options) {\n    /* faux initialization, properly initialized by init(). This is to keep TS happy without adding null-checks everywhere */\n    this.reporter = null;\n    this.parser = null;\n    this.meta = null;\n    this.event = null;\n    this.options = options;\n    this.enabled = true;\n    this.severity = 0;\n    this.name = \"\";\n  }\n  getSeverity() {\n    return this.severity;\n  }\n  setServerity(severity) {\n    this.severity = severity;\n  }\n  setEnabled(enabled) {\n    this.enabled = enabled;\n  }\n  /**\n   * Returns `true` if rule is deprecated.\n   *\n   * Overridden by subclasses.\n   */\n  get deprecated() {\n    return false;\n  }\n  /**\n   * Test if rule is enabled.\n   *\n   * To be considered enabled the enabled flag must be true and the severity at\n   * least warning.\n   */\n  isEnabled() {\n    return this.enabled && this.severity >= exports.Severity.WARN;\n  }\n  /**\n   * Check if keyword is being ignored by the current rule configuration.\n   *\n   * This method requires the [[RuleOption]] type to include two properties:\n   *\n   * - include: string[] | null\n   * - exclude: string[] | null\n   *\n   * This methods checks if the given keyword is included by \"include\" but not\n   * excluded by \"exclude\". If any property is unset it is skipped by the\n   * condition. Usually the user would use either one but not both but there is\n   * no limitation to use both but the keyword must satisfy both conditions. If\n   * either condition fails `true` is returned.\n   *\n   * For instance, given `{ include: [\"foo\"] }` the keyword `\"foo\"` would match\n   * but not `\"bar\"`.\n   *\n   * Similarly, given `{ exclude: [\"foo\"] }` the keyword `\"bar\"` would match but\n   * not `\"foo\"`.\n   *\n   * @param keyword - Keyword to match against `include` and `exclude` options.\n   * @returns `true` if keyword is not present in `include` or is present in\n   * `exclude`.\n   */\n  isKeywordIgnored(keyword) {\n    const {\n      include,\n      exclude\n    } = this.options;\n    /* ignore keyword if not present in \"include\" */\n    if (include && !include.includes(keyword)) {\n      return true;\n    }\n    /* ignore keyword if present in \"excludes\" */\n    if (exclude && exclude.includes(keyword)) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Find all tags which has enabled given property.\n   */\n  getTagsWithProperty(propName) {\n    return this.meta.getTagsWithProperty(propName);\n  }\n  /**\n   * Find tag matching tagName or inheriting from it.\n   */\n  getTagsDerivedFrom(tagName) {\n    return this.meta.getTagsDerivedFrom(tagName);\n  }\n  /**\n   * JSON schema for rule options.\n   *\n   * Rules should override this to return an object with JSON schema to validate\n   * rule options. If `null` or `undefined` is returned no validation is\n   * performed.\n   */\n  static schema() {\n    return null;\n  }\n  /**\n   * Report a new error.\n   *\n   * Rule must be enabled both globally and on the specific node for this to\n   * have any effect.\n   */\n  report(node, message, location, context) {\n    if (this.isEnabled() && (!node || node.ruleEnabled(this.name))) {\n      const where = this.findLocation({\n        node,\n        location,\n        event: this.event\n      });\n      const interpolated = interpolate(message, context !== null && context !== void 0 ? context : {});\n      this.reporter.add(this, interpolated, this.severity, node, where, context);\n    }\n  }\n  findLocation(src) {\n    if (src.location) {\n      return src.location;\n    }\n    if (src.event && src.event.location) {\n      return src.event.location;\n    }\n    if (src.node && src.node.location) {\n      return src.node.location;\n    }\n    return {};\n  }\n  on(event) {\n    var _a;\n    /* handle deprecated aliases */\n    const remap = remapEvents[event];\n    if (remap) {\n      event = remap;\n    }\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    const callback = args.pop();\n    const filter = (_a = args.pop()) !== null && _a !== void 0 ? _a : () => true;\n    return this.parser.on(event, (_event, data) => {\n      if (this.isEnabled() && filter(data)) {\n        this.event = data;\n        callback(data);\n      }\n    });\n  }\n  /**\n   * Called by [[Engine]] when initializing the rule.\n   *\n   * Do not override this, use the `setup` callback instead.\n   *\n   * @internal\n   */\n  init(parser, reporter, severity, meta) {\n    this.parser = parser;\n    this.reporter = reporter;\n    this.severity = severity;\n    this.meta = meta;\n  }\n  /**\n   * Validate rule options against schema. Throws error if object does not validate.\n   *\n   * For rules without schema this function does nothing.\n   *\n   * @throws {@link SchemaValidationError}\n   * Thrown when provided options does not validate against rule schema.\n   *\n   * @param cls - Rule class (constructor)\n   * @param ruleId - Rule identifier\n   * @param jsonPath - JSON path from which [[options]] can be found in [[config]]\n   * @param options - User configured options to be validated\n   * @param filename - Filename from which options originated\n   * @param config - Configuration from which options originated\n   *\n   * @internal\n   */\n  static validateOptions(cls, ruleId, jsonPath, options, filename, config) {\n    var _a;\n    if (!cls) {\n      return;\n    }\n    const schema = cls.schema();\n    if (!schema) {\n      return;\n    }\n    const isValid = getSchemaValidator(ruleId, schema);\n    if (!isValid(options)) {\n      /* istanbul ignore next: it is always set when validation fails */\n      const errors = (_a = isValid.errors) !== null && _a !== void 0 ? _a : [];\n      const mapped = errors.map(error => {\n        error.instancePath = \"\".concat(jsonPath).concat(error.instancePath);\n        return error;\n      });\n      throw new SchemaValidationError(filename, \"Rule configuration error\", config, schema, mapped);\n    }\n  }\n  /**\n   * Rule documentation callback.\n   *\n   * Called when requesting additional documentation for a rule. Some rules\n   * provide additional context to provide context-aware suggestions.\n   *\n   * @param context - Error context given by a reported error.\n   * @returns Rule documentation and url with additional details or `null` if no\n   * additional documentation is available.\n   */\n  /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\n  documentation(context) {\n    return null;\n  }\n}\n/**\n * @internal\n */\nfunction ruleDocumentationUrl(filename) {\n  /* during bundling all \"@/rule.ts\"'s are converted to paths relative to the src\n   * folder and with the @/ prefix, by replacing the @ with the dist folder we\n   * can resolve the path properly */\n  filename = filename.replace(\"@\", distFolder);\n  const p = path__default[\"default\"].parse(filename);\n  const root = path__default[\"default\"].join(distFolder, \"rules\");\n  const rel = path__default[\"default\"].relative(root, path__default[\"default\"].join(p.dir, p.name));\n  const normalized = rel.replace(/\\\\/g, \"/\");\n  return \"\".concat(homepage, \"/rules/\").concat(normalized, \".html\");\n}\nconst defaults$p = {\n  allowExternal: true,\n  allowRelative: true,\n  allowAbsolute: true,\n  allowBase: true\n};\nconst mapping$1 = {\n  a: \"href\",\n  img: \"src\",\n  link: \"href\",\n  script: \"src\"\n};\nconst description = {\n  [\"external\" /* EXTERNAL */]: \"External links are not allowed by current configuration.\",\n  [\"relative-base\" /* RELATIVE_BASE */]: \"Links relative to <base> are not allowed by current configuration.\",\n  [\"relative-path\" /* RELATIVE_PATH */]: \"Relative links are not allowed by current configuration.\",\n  [\"absolute\" /* ABSOLUTE */]: \"Absolute links are not allowed by current configuration.\",\n  [\"anchor\" /* ANCHOR */]: null\n};\nfunction parseAllow(value) {\n  if (typeof value === \"boolean\") {\n    return value;\n  }\n  return {\n    /* eslint-disable security/detect-non-literal-regexp */\n    include: value.include ? value.include.map(it => new RegExp(it)) : null,\n    exclude: value.exclude ? value.exclude.map(it => new RegExp(it)) : null\n    /* eslint-enable security/detect-non-literal-regexp */\n  };\n}\n/**\n * @internal\n */\nfunction matchList(value, list) {\n  if (list.include && !list.include.some(it => it.test(value))) {\n    return false;\n  }\n  if (list.exclude && list.exclude.some(it => it.test(value))) {\n    return false;\n  }\n  return true;\n}\nclass AllowedLinks extends Rule {\n  constructor(options) {\n    super({\n      ...defaults$p,\n      ...options\n    });\n    this.allowExternal = parseAllow(this.options.allowExternal);\n    this.allowRelative = parseAllow(this.options.allowRelative);\n    this.allowAbsolute = parseAllow(this.options.allowAbsolute);\n  }\n  static schema() {\n    const booleanOrObject = {\n      anyOf: [{\n        type: \"boolean\"\n      }, {\n        type: \"object\",\n        properties: {\n          include: {\n            type: \"array\",\n            items: {\n              type: \"string\"\n            }\n          },\n          exclude: {\n            type: \"array\",\n            items: {\n              type: \"string\"\n            }\n          }\n        }\n      }]\n    };\n    return {\n      allowExternal: {\n        ...booleanOrObject\n      },\n      allowRelative: {\n        ...booleanOrObject\n      },\n      allowAbsolute: {\n        ...booleanOrObject\n      },\n      allowBase: {\n        type: \"boolean\"\n      }\n    };\n  }\n  documentation(context) {\n    const message = description[context] || \"This link type is not allowed by current configuration\";\n    return {\n      description: message,\n      url: ruleDocumentationUrl(\"@/rules/allowed-links.ts\")\n    };\n  }\n  setup() {\n    this.on(\"attr\", event => {\n      if (!event.value || !this.isRelevant(event)) {\n        return;\n      }\n      const link = event.value.toString();\n      const style = this.getStyle(link);\n      switch (style) {\n        case \"anchor\" /* ANCHOR */:\n          /* anchor links are always allowed by this rule */\n          break;\n        case \"absolute\" /* ABSOLUTE */:\n          this.handleAbsolute(link, event, style);\n          break;\n        case \"external\" /* EXTERNAL */:\n          this.handleExternal(link, event, style);\n          break;\n        case \"relative-base\" /* RELATIVE_BASE */:\n          this.handleRelativeBase(link, event, style);\n          break;\n        case \"relative-path\" /* RELATIVE_PATH */:\n          this.handleRelativePath(link, event, style);\n          break;\n      }\n    });\n  }\n  isRelevant(event) {\n    const {\n      target,\n      key,\n      value\n    } = event;\n    /* don't check links with dynamic values */\n    if (value instanceof DynamicValue) {\n      return false;\n    }\n    const attr = mapping$1[target.tagName];\n    return Boolean(attr && attr === key);\n  }\n  getStyle(value) {\n    /* http://example.net or //example.net */\n    if (value.match(/^([a-z]+:)?\\/\\//g)) {\n      return \"external\" /* EXTERNAL */;\n    }\n\n    switch (value[0]) {\n      /* /foo/bar */\n      case \"/\":\n        return \"absolute\" /* ABSOLUTE */;\n      /* ../foo/bar */\n      case \".\":\n        return \"relative-path\" /* RELATIVE_PATH */;\n      /* #foo */\n      case \"#\":\n        return \"anchor\" /* ANCHOR */;\n      /* foo/bar */\n      default:\n        return \"relative-base\" /* RELATIVE_BASE */;\n    }\n  }\n\n  handleAbsolute(target, event, style) {\n    const {\n      allowAbsolute\n    } = this;\n    if (allowAbsolute === true) {\n      return;\n    } else if (allowAbsolute === false) {\n      this.report(event.target, \"Link destination must not be absolute url\", event.valueLocation, style);\n    } else if (!matchList(target, allowAbsolute)) {\n      this.report(event.target, \"Absolute link to this destination is not allowed by current configuration\", event.valueLocation, style);\n    }\n  }\n  handleExternal(target, event, style) {\n    const {\n      allowExternal\n    } = this;\n    if (allowExternal === true) {\n      return;\n    } else if (allowExternal === false) {\n      this.report(event.target, \"Link destination must not be external url\", event.valueLocation, style);\n    } else if (!matchList(target, allowExternal)) {\n      this.report(event.target, \"External link to this destination is not allowed by current configuration\", event.valueLocation, style);\n    }\n  }\n  handleRelativePath(target, event, style) {\n    const {\n      allowRelative\n    } = this;\n    if (allowRelative === true) {\n      return false;\n    } else if (allowRelative === false) {\n      this.report(event.target, \"Link destination must not be relative url\", event.valueLocation, style);\n      return true;\n    } else if (!matchList(target, allowRelative)) {\n      this.report(event.target, \"Relative link to this destination is not allowed by current configuration\", event.valueLocation, style);\n      return true;\n    }\n    return false;\n  }\n  handleRelativeBase(target, event, style) {\n    const {\n      allowBase\n    } = this.options;\n    if (this.handleRelativePath(target, event, style)) {\n      return;\n    } else if (!allowBase) {\n      this.report(event.target, \"Relative links must be relative to current folder\", event.valueLocation, style);\n    }\n  }\n}\nclass AriaHiddenBody extends Rule {\n  documentation() {\n    return {\n      description: \"`aria-hidden` must not be used on the `<body>` element as it makes the page inaccessible to assistive technology such as screenreaders\",\n      url: ruleDocumentationUrl(\"@/rules/aria-hidden-body.ts\")\n    };\n  }\n  setup() {\n    this.on(\"tag:ready\", this.isRelevant, event => {\n      const {\n        target\n      } = event;\n      const attr = target.getAttribute(\"aria-hidden\");\n      if (!attr || !attr.valueMatches(\"true\", true)) {\n        return;\n      }\n      this.report(target, \"aria-hidden must not be used on <body>\", attr.keyLocation);\n    });\n  }\n  isRelevant(event) {\n    return event.target.is(\"body\");\n  }\n}\nconst whitelisted = [\"main\", \"nav\", \"table\", \"td\", \"th\", \"aside\", \"header\", \"footer\", \"section\", \"article\", \"form\", \"img\", \"area\", \"fieldset\", \"summary\", \"figure\"];\nclass AriaLabelMisuse extends Rule {\n  documentation() {\n    const valid = [\"Interactive elements\", \"Labelable elements\", \"Landmark elements\", \"Elements with roles inheriting from widget\", \"`<area>`\", \"`<form>` and `<fieldset>`\", \"`<iframe>`\", \"`<img>` and `<figure>`\", \"`<summary>`\", \"`<table>`, `<td>` and `<th>`\"];\n    const lines = valid.map(it => \"- \".concat(it, \"\\n\")).join(\"\");\n    return {\n      description: \"`aria-label` can only be used on:\\n\\n\".concat(lines),\n      url: ruleDocumentationUrl(\"@/rules/aria-label-misuse.ts\")\n    };\n  }\n  setup() {\n    this.on(\"dom:ready\", event => {\n      const {\n        document\n      } = event;\n      for (const target of document.querySelectorAll(\"[aria-label]\")) {\n        this.validateElement(target);\n      }\n    });\n  }\n  validateElement(target) {\n    const attr = target.getAttribute(\"aria-label\");\n    if (!attr || !attr.value || attr.valueMatches(\"\", false)) {\n      return;\n    }\n    /* ignore elements without meta */\n    const meta = target.meta;\n    if (!meta) {\n      return;\n    }\n    /* ignore landmark and other whitelisted elements */\n    if (whitelisted.includes(target.tagName)) {\n      return;\n    }\n    /* ignore elements with role, @todo check if the role is widget or landmark */\n    if (target.hasAttribute(\"role\")) {\n      return;\n    }\n    /* ignore elements with tabindex (implicit interactive) */\n    if (target.hasAttribute(\"tabindex\")) {\n      return;\n    }\n    /* ignore interactive and labelable elements */\n    if (meta.interactive || meta.labelable) {\n      return;\n    }\n    this.report(target, \"\\\"aria-label\\\" cannot be used on this element\", attr.keyLocation);\n  }\n}\n\n/**\n * @public\n */\nclass ConfigError extends UserError {}\n\n/**\n * Represents casing for a name, e.g. lowercase, uppercase, etc.\n */\nclass CaseStyle {\n  /**\n   * @param style - Name of a valid case style.\n   */\n  constructor(style, ruleId) {\n    if (!Array.isArray(style)) {\n      style = [style];\n    }\n    if (style.length === 0) {\n      throw new ConfigError(\"Missing style for \".concat(ruleId, \" rule\"));\n    }\n    this.styles = this.parseStyle(style, ruleId);\n  }\n  /**\n   * Test if a text matches this case style.\n   */\n  match(text) {\n    return this.styles.some(style => text.match(style.pattern));\n  }\n  get name() {\n    const names = this.styles.map(style => style.name);\n    switch (this.styles.length) {\n      case 1:\n        return names[0];\n      case 2:\n        return names.join(\" or \");\n      default:\n        {\n          const last = names.slice(-1);\n          const rest = names.slice(0, -1);\n          return \"\".concat(rest.join(\", \"), \" or \").concat(last);\n        }\n    }\n  }\n  parseStyle(style, ruleId) {\n    return style.map(cur => {\n      switch (cur.toLowerCase()) {\n        case \"lowercase\":\n          return {\n            pattern: /^[a-z]*$/,\n            name: \"lowercase\"\n          };\n        case \"uppercase\":\n          return {\n            pattern: /^[A-Z]*$/,\n            name: \"uppercase\"\n          };\n        case \"pascalcase\":\n          return {\n            pattern: /^[A-Z][A-Za-z]*$/,\n            name: \"PascalCase\"\n          };\n        case \"camelcase\":\n          return {\n            pattern: /^[a-z][A-Za-z]*$/,\n            name: \"camelCase\"\n          };\n        default:\n          throw new ConfigError(\"Invalid style \\\"\".concat(style, \"\\\" for \").concat(ruleId, \" rule\"));\n      }\n    });\n  }\n}\nconst defaults$o = {\n  style: \"lowercase\",\n  ignoreForeign: true\n};\nclass AttrCase extends Rule {\n  constructor(options) {\n    super({\n      ...defaults$o,\n      ...options\n    });\n    this.style = new CaseStyle(this.options.style, \"attr-case\");\n  }\n  static schema() {\n    const styleEnum = [\"lowercase\", \"uppercase\", \"pascalcase\", \"camelcase\"];\n    return {\n      ignoreForeign: {\n        type: \"boolean\"\n      },\n      style: {\n        anyOf: [{\n          enum: styleEnum,\n          type: \"string\"\n        }, {\n          items: {\n            enum: styleEnum,\n            type: \"string\"\n          },\n          type: \"array\"\n        }]\n      }\n    };\n  }\n  documentation() {\n    return {\n      description: \"Attribute name must be \".concat(this.options.style, \".\"),\n      url: ruleDocumentationUrl(\"@/rules/attr-case.ts\")\n    };\n  }\n  setup() {\n    this.on(\"attr\", event => {\n      if (this.isIgnored(event.target)) {\n        return;\n      }\n      /* ignore case for dynamic attributes, the original attributes will be\n       * checked instead (this prevents duplicated errors for the same source\n       * attribute) */\n      if (event.originalAttribute) {\n        return;\n      }\n      const letters = event.key.replace(/[^a-z]+/gi, \"\");\n      if (!this.style.match(letters)) {\n        this.report(event.target, \"Attribute \\\"\".concat(event.key, \"\\\" should be \").concat(this.style.name), event.keyLocation);\n      }\n    });\n  }\n  isIgnored(node) {\n    if (this.options.ignoreForeign) {\n      return Boolean(node.meta && node.meta.foreign);\n    } else {\n      return false;\n    }\n  }\n}\nexports.TokenType = void 0;\n(function (TokenType) {\n  TokenType[TokenType[\"UNICODE_BOM\"] = 1] = \"UNICODE_BOM\";\n  TokenType[TokenType[\"WHITESPACE\"] = 2] = \"WHITESPACE\";\n  TokenType[TokenType[\"DOCTYPE_OPEN\"] = 3] = \"DOCTYPE_OPEN\";\n  TokenType[TokenType[\"DOCTYPE_VALUE\"] = 4] = \"DOCTYPE_VALUE\";\n  TokenType[TokenType[\"DOCTYPE_CLOSE\"] = 5] = \"DOCTYPE_CLOSE\";\n  TokenType[TokenType[\"TAG_OPEN\"] = 6] = \"TAG_OPEN\";\n  TokenType[TokenType[\"TAG_CLOSE\"] = 7] = \"TAG_CLOSE\";\n  TokenType[TokenType[\"ATTR_NAME\"] = 8] = \"ATTR_NAME\";\n  TokenType[TokenType[\"ATTR_VALUE\"] = 9] = \"ATTR_VALUE\";\n  TokenType[TokenType[\"TEXT\"] = 10] = \"TEXT\";\n  TokenType[TokenType[\"TEMPLATING\"] = 11] = \"TEMPLATING\";\n  TokenType[TokenType[\"SCRIPT\"] = 12] = \"SCRIPT\";\n  TokenType[TokenType[\"STYLE\"] = 13] = \"STYLE\";\n  TokenType[TokenType[\"COMMENT\"] = 14] = \"COMMENT\";\n  TokenType[TokenType[\"CONDITIONAL\"] = 15] = \"CONDITIONAL\";\n  TokenType[TokenType[\"DIRECTIVE\"] = 16] = \"DIRECTIVE\";\n  TokenType[TokenType[\"EOF\"] = 17] = \"EOF\";\n})(exports.TokenType || (exports.TokenType = {}));\n\n/* eslint-disable no-useless-escape */\nconst MATCH_UNICODE_BOM = /^\\uFEFF/;\nconst MATCH_WHITESPACE = /^(?:\\r\\n|\\r|\\n|[ \\t]+(?:\\r\\n|\\r|\\n)?)/;\nconst MATCH_DOCTYPE_OPEN = /^<!(DOCTYPE)\\s/i;\nconst MATCH_DOCTYPE_VALUE = /^[^>]+/;\nconst MATCH_DOCTYPE_CLOSE = /^>/;\nconst MATCH_XML_TAG = /^<\\?xml.*?\\?>\\s+/;\nconst MATCH_TAG_OPEN = /^<(\\/?)([a-zA-Z0-9\\-:]+)/; // https://www.w3.org/TR/html/syntax.html#start-tags\nconst MATCH_TAG_CLOSE = /^\\/?>/;\nconst MATCH_TEXT = /^[^]*?(?=(?:[ \\t]*(?:\\r\\n|\\r|\\n)|<[^ ]|$))/;\nconst MATCH_TEMPLATING = /^(?:<%.*?%>|<\\?.*?\\?>|<\\$.*?\\$>)/s;\nconst MATCH_TAG_LOOKAHEAD = /^[^]*?(?=<|$)/;\nconst MATCH_ATTR_START = /^([^\\t\\r\\n\\f \\/><\"'=]+)/; // https://www.w3.org/TR/html/syntax.html#elements-attributes\nconst MATCH_ATTR_SINGLE = /^(\\s*=\\s*)'([^']*?)(')/;\nconst MATCH_ATTR_DOUBLE = /^(\\s*=\\s*)\"([^\"]*?)(\")/;\nconst MATCH_ATTR_UNQUOTED = /^(\\s*=\\s*)([^\\t\\r\\n\\f \"'<>][^\\t\\r\\n\\f <>]*)/;\nconst MATCH_CDATA_BEGIN = /^<!\\[CDATA\\[/;\nconst MATCH_CDATA_END = /^[^]*?]]>/;\nconst MATCH_SCRIPT_DATA = /^[^]*?(?=<\\/script)/;\nconst MATCH_SCRIPT_END = /^<(\\/)(script)/;\nconst MATCH_STYLE_DATA = /^[^]*?(?=<\\/style)/;\nconst MATCH_STYLE_END = /^<(\\/)(style)/;\nconst MATCH_DIRECTIVE = /^<!--\\s*(\\[)html-validate-([a-z0-9-]+)\\s*(.*?)(]?)\\s*-->/;\nconst MATCH_COMMENT = /^<!--([^]*?)-->/;\nconst MATCH_CONDITIONAL = /^<!\\[([^\\]]*?)\\]>/;\nclass InvalidTokenError extends Error {\n  constructor(location, message) {\n    super(message);\n    this.location = location;\n  }\n}\nclass Lexer {\n  // eslint-disable-next-line complexity\n  *tokenize(source) {\n    const context = new Context(source);\n    /* for sanity check */\n    let previousState = context.state;\n    let previousLength = context.string.length;\n    while (context.string.length > 0) {\n      switch (context.state) {\n        case State.INITIAL:\n          yield* this.tokenizeInitial(context);\n          break;\n        case State.DOCTYPE:\n          yield* this.tokenizeDoctype(context);\n          break;\n        case State.TAG:\n          yield* this.tokenizeTag(context);\n          break;\n        case State.ATTR:\n          yield* this.tokenizeAttr(context);\n          break;\n        case State.TEXT:\n          yield* this.tokenizeText(context);\n          break;\n        case State.CDATA:\n          yield* this.tokenizeCDATA(context);\n          break;\n        case State.SCRIPT:\n          yield* this.tokenizeScript(context);\n          break;\n        case State.STYLE:\n          yield* this.tokenizeStyle(context);\n          break;\n        /* istanbul ignore next: sanity check: should not happen unless adding new states */\n        default:\n          this.unhandled(context);\n      }\n      /* sanity check: state or string must change, if both are intact\n       * we are stuck in an endless loop. */\n      /* istanbul ignore next: no easy way to test this as it is a condition which should never happen */\n      if (context.state === previousState && context.string.length === previousLength) {\n        this.errorStuck(context);\n      }\n      previousState = context.state;\n      previousLength = context.string.length;\n    }\n    yield this.token(context, exports.TokenType.EOF, []);\n  }\n  token(context, type, data) {\n    const size = data.length > 0 ? data[0].length : 0;\n    const location = context.getLocation(size);\n    return {\n      type,\n      location,\n      data: Array.from(data)\n    };\n  }\n  /* istanbul ignore next: used to provide a better error when an unhandled state happens */\n  unhandled(context) {\n    const truncated = JSON.stringify(context.string.length > 13 ? \"\".concat(context.string.slice(0, 15), \"...\") : context.string);\n    const state = State[context.state];\n    const message = \"failed to tokenize \".concat(truncated, \", unhandled state \").concat(state, \".\");\n    throw new InvalidTokenError(context.getLocation(1), message);\n  }\n  /* istanbul ignore next: used to provide a better error when lexer is detected to be stuck, no known way to reproduce */\n  errorStuck(context) {\n    const state = State[context.state];\n    const message = \"failed to tokenize \".concat(context.getTruncatedLine(), \", state \").concat(state, \" failed to consume data or change state.\");\n    throw new InvalidTokenError(context.getLocation(1), message);\n  }\n  evalNextState(nextState, token) {\n    if (typeof nextState === \"function\") {\n      return nextState(token);\n    } else {\n      return nextState;\n    }\n  }\n  *match(context, tests, error) {\n    const n = tests.length;\n    for (let i = 0; i < n; i++) {\n      const [regex, nextState, tokenType] = tests[i];\n      const match = regex ? context.string.match(regex) : [\"\"];\n      if (match) {\n        let token = null;\n        if (tokenType !== false) {\n          token = this.token(context, tokenType, match);\n          yield token;\n        }\n        const state = this.evalNextState(nextState, token);\n        context.consume(match, state);\n        this.enter(context, state, match);\n        return;\n      }\n    }\n    const message = \"failed to tokenize \".concat(context.getTruncatedLine(), \", \").concat(error, \".\");\n    throw new InvalidTokenError(context.getLocation(1), message);\n  }\n  /**\n   * Called when entering a new state.\n   */\n  enter(context, state, data) {\n    /* script/style tags require a different content model */\n    if (state === State.TAG && data && data[0][0] === \"<\") {\n      if (data[0] === \"<script\") {\n        context.contentModel = ContentModel.SCRIPT;\n      } else if (data[0] === \"<style\") {\n        context.contentModel = ContentModel.STYLE;\n      } else {\n        context.contentModel = ContentModel.TEXT;\n      }\n    }\n  }\n  *tokenizeInitial(context) {\n    yield* this.match(context, [[MATCH_UNICODE_BOM, State.INITIAL, exports.TokenType.UNICODE_BOM], [MATCH_XML_TAG, State.INITIAL, false], [MATCH_DOCTYPE_OPEN, State.DOCTYPE, exports.TokenType.DOCTYPE_OPEN], [MATCH_WHITESPACE, State.INITIAL, exports.TokenType.WHITESPACE], [MATCH_DIRECTIVE, State.INITIAL, exports.TokenType.DIRECTIVE], [MATCH_CONDITIONAL, State.INITIAL, exports.TokenType.CONDITIONAL], [MATCH_COMMENT, State.INITIAL, exports.TokenType.COMMENT], [false, State.TEXT, false]], \"expected doctype\");\n  }\n  *tokenizeDoctype(context) {\n    yield* this.match(context, [[MATCH_WHITESPACE, State.DOCTYPE, exports.TokenType.WHITESPACE], [MATCH_DOCTYPE_VALUE, State.DOCTYPE, exports.TokenType.DOCTYPE_VALUE], [MATCH_DOCTYPE_CLOSE, State.TEXT, exports.TokenType.DOCTYPE_CLOSE]], \"expected doctype name\");\n  }\n  *tokenizeTag(context) {\n    /* eslint-disable-next-line consistent-return -- exhaustive switch handled by typescript */\n    function nextState(token) {\n      const tagCloseToken = token;\n      switch (context.contentModel) {\n        case ContentModel.TEXT:\n          return State.TEXT;\n        case ContentModel.SCRIPT:\n          if (tagCloseToken && tagCloseToken.data[0][0] !== \"/\") {\n            return State.SCRIPT;\n          } else {\n            return State.TEXT; /* <script/> (not legal but handle it anyway so the lexer doesn't choke on it) */\n          }\n\n        case ContentModel.STYLE:\n          if (tagCloseToken && tagCloseToken.data[0][0] !== \"/\") {\n            return State.STYLE;\n          } else {\n            return State.TEXT; /* <style/> */\n          }\n      }\n    }\n\n    yield* this.match(context, [[MATCH_TAG_CLOSE, nextState, exports.TokenType.TAG_CLOSE], [MATCH_ATTR_START, State.ATTR, exports.TokenType.ATTR_NAME], [MATCH_WHITESPACE, State.TAG, exports.TokenType.WHITESPACE]], 'expected attribute, \">\" or \"/>\"');\n  }\n  *tokenizeAttr(context) {\n    yield* this.match(context, [[MATCH_ATTR_SINGLE, State.TAG, exports.TokenType.ATTR_VALUE], [MATCH_ATTR_DOUBLE, State.TAG, exports.TokenType.ATTR_VALUE], [MATCH_ATTR_UNQUOTED, State.TAG, exports.TokenType.ATTR_VALUE], [false, State.TAG, false]], 'expected attribute, \">\" or \"/>\"');\n  }\n  *tokenizeText(context) {\n    yield* this.match(context, [[MATCH_WHITESPACE, State.TEXT, exports.TokenType.WHITESPACE], [MATCH_CDATA_BEGIN, State.CDATA, false], [MATCH_DIRECTIVE, State.TEXT, exports.TokenType.DIRECTIVE], [MATCH_CONDITIONAL, State.TEXT, exports.TokenType.CONDITIONAL], [MATCH_COMMENT, State.TEXT, exports.TokenType.COMMENT], [MATCH_TEMPLATING, State.TEXT, exports.TokenType.TEMPLATING], [MATCH_TAG_OPEN, State.TAG, exports.TokenType.TAG_OPEN], [MATCH_TEXT, State.TEXT, exports.TokenType.TEXT], [MATCH_TAG_LOOKAHEAD, State.TEXT, exports.TokenType.TEXT]], 'expected text or \"<\"');\n  }\n  *tokenizeCDATA(context) {\n    yield* this.match(context, [[MATCH_CDATA_END, State.TEXT, false]], \"expected ]]>\");\n  }\n  *tokenizeScript(context) {\n    yield* this.match(context, [[MATCH_SCRIPT_END, State.TAG, exports.TokenType.TAG_OPEN], [MATCH_SCRIPT_DATA, State.SCRIPT, exports.TokenType.SCRIPT]], \"expected </script>\");\n  }\n  *tokenizeStyle(context) {\n    yield* this.match(context, [[MATCH_STYLE_END, State.TAG, exports.TokenType.TAG_OPEN], [MATCH_STYLE_DATA, State.STYLE, exports.TokenType.STYLE]], \"expected </style>\");\n  }\n}\nconst whitespace = /(\\s+)/;\nfunction isRelevant$3(event) {\n  return event.type === exports.TokenType.ATTR_VALUE;\n}\nclass AttrDelimiter extends Rule {\n  documentation() {\n    return {\n      description: \"Attribute value should be separated by \",\n      url: ruleDocumentationUrl(\"@/rules/attr-delimiter.ts\")\n    };\n  }\n  setup() {\n    this.on(\"token\", isRelevant$3, event => {\n      const delimiter = event.data[1];\n      const match = whitespace.exec(delimiter);\n      if (match) {\n        const location = sliceLocation(event.location, 0, delimiter.length);\n        this.report(null, \"Attribute value must not be delimited by whitespace\", location);\n      }\n    });\n  }\n}\nconst DEFAULT_PATTERN = \"[a-z0-9-:]+\";\nconst defaults$n = {\n  pattern: DEFAULT_PATTERN,\n  ignoreForeign: true\n};\nfunction generateRegexp(pattern) {\n  if (Array.isArray(pattern)) {\n    /* eslint-disable-next-line security/detect-non-literal-regexp */\n    return new RegExp(\"^(\".concat(pattern.join(\"|\"), \")$\"), \"i\");\n  } else {\n    /* eslint-disable-next-line security/detect-non-literal-regexp */\n    return new RegExp(\"^\".concat(pattern, \"$\"), \"i\");\n  }\n}\nfunction generateMessage(name, pattern) {\n  if (Array.isArray(pattern)) {\n    const patterns = pattern.map(it => \"/\".concat(it, \"/\")).join(\", \");\n    return \"Attribute \\\"\".concat(name, \"\\\" should match one of [\").concat(patterns, \"]\");\n  } else {\n    return \"Attribute \\\"\".concat(name, \"\\\" should match /\").concat(pattern, \"/\");\n  }\n}\nfunction generateDescription(name, pattern) {\n  if (Array.isArray(pattern)) {\n    return [\"Attribute \\\"\".concat(name, \"\\\" should match one of the configured regular expressions:\"), \"\", ...pattern.map(it => \"- `/\".concat(it, \"/`\"))].join(\"\\n\");\n  } else {\n    return \"Attribute \\\"\".concat(name, \"\\\" should match the regular expression `/\").concat(pattern, \"/`\");\n  }\n}\nclass AttrPattern extends Rule {\n  constructor(options) {\n    super({\n      ...defaults$n,\n      ...options\n    });\n    this.pattern = generateRegexp(this.options.pattern);\n  }\n  static schema() {\n    return {\n      pattern: {\n        oneOf: [{\n          type: \"array\",\n          items: {\n            type: \"string\"\n          },\n          minItems: 1\n        }, {\n          type: \"string\"\n        }]\n      },\n      ignoreForeign: {\n        type: \"boolean\"\n      }\n    };\n  }\n  documentation(context) {\n    let description;\n    if (context) {\n      description = generateDescription(context.attr, context.pattern);\n    } else {\n      description = \"Attribute should match configured pattern\";\n    }\n    return {\n      description,\n      url: ruleDocumentationUrl(\"@/rules/attr-pattern.ts\")\n    };\n  }\n  setup() {\n    this.on(\"attr\", event => {\n      if (this.isIgnored(event.target)) {\n        return;\n      }\n      /* ignore case for dynamic attributes, the original attributes will be\n       * checked instead (this prevents duplicated errors for the same source\n       * attribute) */\n      if (event.originalAttribute) {\n        return;\n      }\n      if (this.pattern.test(event.key)) {\n        return;\n      }\n      const message = generateMessage(event.key, this.options.pattern);\n      this.report(event.target, message, event.keyLocation);\n    });\n  }\n  isIgnored(node) {\n    if (this.options.ignoreForeign) {\n      return Boolean(node.meta && node.meta.foreign);\n    } else {\n      return false;\n    }\n  }\n}\nvar QuoteStyle;\n(function (QuoteStyle) {\n  QuoteStyle[\"SINGLE_QUOTE\"] = \"'\";\n  QuoteStyle[\"DOUBLE_QUOTE\"] = \"\\\"\";\n  QuoteStyle[\"AUTO_QUOTE\"] = \"auto\";\n})(QuoteStyle || (QuoteStyle = {}));\nconst defaults$m = {\n  style: \"auto\",\n  unquoted: false\n};\nclass AttrQuotes extends Rule {\n  constructor(options) {\n    super({\n      ...defaults$m,\n      ...options\n    });\n    this.style = parseStyle$4(this.options.style);\n  }\n  static schema() {\n    return {\n      style: {\n        enum: [\"auto\", \"double\", \"single\"],\n        type: \"string\"\n      },\n      unquoted: {\n        type: \"boolean\"\n      }\n    };\n  }\n  documentation() {\n    if (this.options.style === \"auto\") {\n      return {\n        description: \"Attribute values are required to be quoted with doublequotes unless the attribute value itself contains doublequotes in which case singlequotes should be used.\",\n        url: ruleDocumentationUrl(\"@/rules/attr-quotes.ts\")\n      };\n    } else {\n      return {\n        description: \"Attribute values are required to be quoted with \".concat(this.options.style, \"quotes.\"),\n        url: ruleDocumentationUrl(\"@/rules/attr-quotes.ts\")\n      };\n    }\n  }\n  setup() {\n    this.on(\"attr\", event => {\n      /* ignore attributes with no value */\n      if (event.value === null) {\n        return;\n      }\n      if (!event.quote) {\n        if (this.options.unquoted === false) {\n          this.report(event.target, \"Attribute \\\"\".concat(event.key, \"\\\" using unquoted value\"));\n        }\n        return;\n      }\n      const expected = this.resolveQuotemark(event.value.toString(), this.style);\n      if (event.quote !== expected) {\n        this.report(event.target, \"Attribute \\\"\".concat(event.key, \"\\\" used \").concat(event.quote, \" instead of expected \").concat(expected));\n      }\n    });\n  }\n  resolveQuotemark(value, style) {\n    if (style === QuoteStyle.AUTO_QUOTE) {\n      return value.includes('\"') ? \"'\" : '\"';\n    } else {\n      return style;\n    }\n  }\n}\nfunction parseStyle$4(style) {\n  switch (style.toLowerCase()) {\n    case \"auto\":\n      return QuoteStyle.AUTO_QUOTE;\n    case \"double\":\n      return QuoteStyle.DOUBLE_QUOTE;\n    case \"single\":\n      return QuoteStyle.SINGLE_QUOTE;\n    /* istanbul ignore next: covered by schema validation */\n    default:\n      throw new ConfigError(\"Invalid style \\\"\".concat(style, \"\\\" for \\\"attr-quotes\\\" rule\"));\n  }\n}\nclass AttrSpacing extends Rule {\n  documentation() {\n    return {\n      description: \"No space between attributes. At least one whitespace character (commonly space) must be used to separate attributes.\",\n      url: ruleDocumentationUrl(\"@/rules/attr-spacing.ts\")\n    };\n  }\n  setup() {\n    let previousToken;\n    this.on(\"token\", event => {\n      if (event.type === exports.TokenType.ATTR_NAME && previousToken !== exports.TokenType.WHITESPACE) {\n        this.report(null, \"No space between attributes\", event.location);\n      }\n      previousToken = event.type;\n    });\n  }\n}\nclass AttributeAllowedValues extends Rule {\n  documentation(context) {\n    const docs = {\n      description: \"Attribute has invalid value.\",\n      url: ruleDocumentationUrl(\"@/rules/attribute-allowed-values.ts\")\n    };\n    if (!context) {\n      return docs;\n    }\n    const {\n      allowed,\n      attribute,\n      element,\n      value\n    } = context;\n    if (allowed.enum) {\n      const allowedList = allowed.enum.map(value => {\n        if (typeof value === \"string\") {\n          return \"- `\\\"\".concat(value, \"\\\"`\");\n        } else {\n          return \"- `\".concat(value.toString(), \"`\");\n        }\n      });\n      docs.description = [\"The `<\".concat(element, \">` element does not allow the attribute `\").concat(attribute, \"` to have the value `\\\"\").concat(value, \"\\\"`.\"), \"\", \"It must match one of the following:\", \"\", ...allowedList].join(\"\\n\");\n    } else if (allowed.boolean) {\n      docs.description = \"The `<\".concat(context.element, \">` attribute `\").concat(context.attribute, \"` must be a boolean attribute, e.g. `<\").concat(context.element, \" \").concat(context.attribute, \">`\");\n    }\n    return docs;\n  }\n  setup() {\n    this.on(\"dom:ready\", event => {\n      const doc = event.document;\n      doc.visitDepthFirst(node => {\n        const meta = node.meta;\n        /* ignore rule if element has no meta or meta does not specify attribute\n         * allowed values */\n        if (!meta || !meta.attributes) return;\n        for (const attr of node.attributes) {\n          if (Validator.validateAttribute(attr, meta.attributes)) {\n            continue;\n          }\n          const value = attr.value ? attr.value.toString() : \"\";\n          const context = {\n            element: node.tagName,\n            attribute: attr.key,\n            value,\n            allowed: meta.attributes[attr.key]\n          };\n          const message = this.getMessage(attr);\n          const location = this.getLocation(attr);\n          this.report(node, message, location, context);\n        }\n      });\n    });\n  }\n  getMessage(attr) {\n    const {\n      key,\n      value\n    } = attr;\n    if (value !== null) {\n      return \"Attribute \\\"\".concat(key, \"\\\" has invalid value \\\"\").concat(value.toString(), \"\\\"\");\n    } else {\n      return \"Attribute \\\"\".concat(key, \"\\\" is missing value\");\n    }\n  }\n  getLocation(attr) {\n    if (attr.value !== null) {\n      return attr.valueLocation;\n    } else {\n      return attr.keyLocation;\n    }\n  }\n}\nconst defaults$l = {\n  style: \"omit\"\n};\nclass AttributeBooleanStyle extends Rule {\n  constructor(options) {\n    super({\n      ...defaults$l,\n      ...options\n    });\n    this.hasInvalidStyle = parseStyle$3(this.options.style);\n  }\n  static schema() {\n    return {\n      style: {\n        enum: [\"empty\", \"name\", \"omit\"],\n        type: \"string\"\n      }\n    };\n  }\n  documentation() {\n    return {\n      description: \"Require a specific style when writing boolean attributes.\",\n      url: ruleDocumentationUrl(\"@/rules/attribute-boolean-style.ts\")\n    };\n  }\n  setup() {\n    this.on(\"dom:ready\", event => {\n      const doc = event.document;\n      doc.visitDepthFirst(node => {\n        const meta = node.meta;\n        /* ignore rule if element has no meta or meta does not specify attribute\n         * allowed values */\n        if (!meta || !meta.attributes) return;\n        /* check all boolean attributes */\n        for (const attr of node.attributes) {\n          if (!this.isBoolean(attr, meta.attributes)) continue;\n          /* ignore attribute if it is aliased by a dynamic value,\n           * e.g. ng-required or v-bind:required, since it will probably have a\n           * value despite the target attribute is a boolean. The framework is\n           * assumed to handle it properly */\n          if (attr.originalAttribute) {\n            continue;\n          }\n          if (this.hasInvalidStyle(attr)) {\n            this.report(node, reportMessage$1(attr, this.options.style), attr.keyLocation);\n          }\n        }\n      });\n    });\n  }\n  isBoolean(attr, rules) {\n    var _a;\n    return Boolean((_a = rules[attr.key]) === null || _a === void 0 ? void 0 : _a.boolean);\n  }\n}\nfunction parseStyle$3(style) {\n  switch (style.toLowerCase()) {\n    case \"omit\":\n      return attr => attr.value !== null;\n    case \"empty\":\n      return attr => attr.value !== \"\";\n    case \"name\":\n      return attr => attr.value !== attr.key;\n    /* istanbul ignore next: covered by schema validation */\n    default:\n      throw new Error(\"Invalid style \\\"\".concat(style, \"\\\" for \\\"attribute-boolean-style\\\" rule\"));\n  }\n}\nfunction reportMessage$1(attr, style) {\n  const key = attr.key;\n  switch (style.toLowerCase()) {\n    case \"omit\":\n      return \"Attribute \\\"\".concat(key, \"\\\" should omit value\");\n    case \"empty\":\n      return \"Attribute \\\"\".concat(key, \"\\\" value should be empty string\");\n    case \"name\":\n      return \"Attribute \\\"\".concat(key, \"\\\" should be set to \").concat(key, \"=\\\"\").concat(key, \"\\\"\");\n  }\n  /* istanbul ignore next: the above switch should cover all cases */\n  return \"\";\n}\nconst defaults$k = {\n  style: \"omit\"\n};\nclass AttributeEmptyStyle extends Rule {\n  constructor(options) {\n    super({\n      ...defaults$k,\n      ...options\n    });\n    this.hasInvalidStyle = parseStyle$2(this.options.style);\n  }\n  static schema() {\n    return {\n      style: {\n        enum: [\"empty\", \"omit\"],\n        type: \"string\"\n      }\n    };\n  }\n  documentation() {\n    return {\n      description: \"Require a specific style for attributes with empty values.\",\n      url: ruleDocumentationUrl(\"@/rules/attribute-empty-style.ts\")\n    };\n  }\n  setup() {\n    this.on(\"dom:ready\", event => {\n      const doc = event.document;\n      doc.visitDepthFirst(node => {\n        const meta = node.meta;\n        /* ignore rule if element has no meta or meta does not specify attribute\n         * allowed values */\n        if (!meta || !meta.attributes) return;\n        /* check all boolean attributes */\n        for (const attr of node.attributes) {\n          /* only handle attributes which allows empty values */\n          if (!allowsEmpty(attr, meta.attributes)) {\n            continue;\n          }\n          /* skip attribute if the attribute is set to non-empty value\n           * (attribute-allowed-values deals with non-empty values)*/\n          if (!isEmptyValue(attr)) {\n            continue;\n          }\n          /* skip attribute if the style is valid */\n          if (!this.hasInvalidStyle(attr)) {\n            continue;\n          }\n          /* report error */\n          this.report(node, reportMessage(attr, this.options.style), attr.keyLocation);\n        }\n      });\n    });\n  }\n}\nfunction allowsEmpty(attr, rules) {\n  var _a;\n  return Boolean((_a = rules[attr.key]) === null || _a === void 0 ? void 0 : _a.omit);\n}\nfunction isEmptyValue(attr) {\n  /* dynamic values are ignored, assumed to contain a value */\n  if (attr.isDynamic) {\n    return false;\n  }\n  return attr.value === null || attr.value === \"\";\n}\nfunction parseStyle$2(style) {\n  switch (style.toLowerCase()) {\n    case \"omit\":\n      return attr => attr.value !== null;\n    case \"empty\":\n      return attr => attr.value !== \"\";\n    /* istanbul ignore next: covered by schema validation */\n    default:\n      throw new Error(\"Invalid style \\\"\".concat(style, \"\\\" for \\\"attribute-empty-style\\\" rule\"));\n  }\n}\nfunction reportMessage(attr, style) {\n  const key = attr.key;\n  switch (style.toLowerCase()) {\n    case \"omit\":\n      return \"Attribute \\\"\".concat(key, \"\\\" should omit value\");\n    case \"empty\":\n      return \"Attribute \\\"\".concat(key, \"\\\" value should be empty string\");\n  }\n  /* istanbul ignore next: the above switch should cover all cases */\n  return \"\";\n}\nfunction parsePattern(pattern) {\n  switch (pattern) {\n    case \"kebabcase\":\n      return /^[a-z0-9-]+$/;\n    case \"camelcase\":\n      return /^[a-z][a-zA-Z0-9]+$/;\n    case \"underscore\":\n      return /^[a-z0-9_]+$/;\n    default:\n      // eslint-disable-next-line security/detect-non-literal-regexp\n      return new RegExp(pattern);\n  }\n}\nfunction describePattern(pattern) {\n  const regexp = parsePattern(pattern).toString();\n  switch (pattern) {\n    case \"kebabcase\":\n    case \"camelcase\":\n    case \"underscore\":\n      {\n        return \"\".concat(regexp, \" (\").concat(pattern, \")\");\n      }\n    default:\n      return regexp;\n  }\n}\nconst defaults$j = {\n  pattern: \"kebabcase\"\n};\nclass ClassPattern extends Rule {\n  constructor(options) {\n    super({\n      ...defaults$j,\n      ...options\n    });\n    this.pattern = parsePattern(this.options.pattern);\n  }\n  static schema() {\n    return {\n      pattern: {\n        type: \"string\"\n      }\n    };\n  }\n  documentation() {\n    const pattern = describePattern(this.options.pattern);\n    return {\n      description: \"For consistency all classes are required to match the pattern \".concat(pattern, \".\"),\n      url: ruleDocumentationUrl(\"@/rules/class-pattern.ts\")\n    };\n  }\n  setup() {\n    this.on(\"attr\", event => {\n      if (event.key.toLowerCase() !== \"class\") {\n        return;\n      }\n      const classes = new DOMTokenList(event.value, event.valueLocation);\n      classes.forEach((cur, index) => {\n        if (!cur.match(this.pattern)) {\n          const location = classes.location(index);\n          this.report(event.target, \"Class \\\"\".concat(cur, \"\\\" does not match required pattern \\\"\").concat(this.pattern, \"\\\"\"), location);\n        }\n      });\n    });\n  }\n}\nclass CloseAttr extends Rule {\n  documentation() {\n    return {\n      description: \"HTML disallows end tags to have attributes.\",\n      url: ruleDocumentationUrl(\"@/rules/close-attr.ts\")\n    };\n  }\n  setup() {\n    this.on(\"tag:end\", event => {\n      /* handle unclosed tags */\n      if (!event.target) {\n        return;\n      }\n      /* ignore self-closed and void */\n      if (event.previous === event.target) {\n        return;\n      }\n      const node = event.target;\n      if (Object.keys(node.attributes).length > 0) {\n        const first = node.attributes[0];\n        this.report(null, \"Close tags cannot have attributes\", first.keyLocation);\n      }\n    });\n  }\n}\nclass CloseOrder extends Rule {\n  documentation() {\n    return {\n      description: \"HTML requires elements to be closed in the same order as they were opened.\",\n      url: ruleDocumentationUrl(\"@/rules/close-order.ts\")\n    };\n  }\n  setup() {\n    this.on(\"tag:end\", event => {\n      const current = event.target; // The current element being closed\n      const active = event.previous; // The current active element (that is, the current element on the stack)\n      /* handle unclosed tags */\n      if (!current) {\n        this.report(null, \"Missing close-tag, expected '</\".concat(active.tagName, \">' but document ended before it was found.\"), event.location);\n        return;\n      }\n      /* void elements are always closed in correct order but if the markup contains\n       * an end-tag for it it should be ignored here since the void element is\n       * implicitly closed in the right order, so the current active element is the\n       * parent. */\n      if (current.voidElement) {\n        return;\n      }\n      /* if the active element is implicitly closed when the parent is closed\n       * (such as a <li> by </ul>) no error should be reported. */\n      if (active.closed === exports.NodeClosed.ImplicitClosed) {\n        return;\n      }\n      /* handle unopened tags */\n      if (!active || active.isRootElement()) {\n        const location = {\n          filename: current.location.filename,\n          line: current.location.line,\n          column: current.location.column,\n          offset: current.location.offset,\n          size: current.tagName.length + 1\n        };\n        this.report(null, \"Unexpected close-tag, expected opening tag.\", location);\n        return;\n      }\n      /* check for matching tagnames */\n      if (current.tagName !== active.tagName) {\n        this.report(null, \"Mismatched close-tag, expected '</\".concat(active.tagName, \">' but found '</\").concat(current.tagName, \">'.\"), current.location);\n      }\n    });\n  }\n}\nconst defaults$i = {\n  include: null,\n  exclude: null\n};\nclass Deprecated extends Rule {\n  constructor(options) {\n    super({\n      ...defaults$i,\n      ...options\n    });\n  }\n  static schema() {\n    return {\n      exclude: {\n        anyOf: [{\n          items: {\n            type: \"string\"\n          },\n          type: \"array\"\n        }, {\n          type: \"null\"\n        }]\n      },\n      include: {\n        anyOf: [{\n          items: {\n            type: \"string\"\n          },\n          type: \"array\"\n        }, {\n          type: \"null\"\n        }]\n      }\n    };\n  }\n  documentation(context) {\n    const doc = {\n      description: \"This element is deprecated and should not be used in new code.\",\n      url: ruleDocumentationUrl(\"@/rules/deprecated.ts\")\n    };\n    if (context) {\n      const text = [];\n      if (context.source) {\n        const source = prettySource(context.source);\n        const message = \"The `<$tagname>` element is deprecated \".concat(source, \" and should not be used in new code.\");\n        text.push(message);\n      } else {\n        const message = \"The `<$tagname>` element is deprecated and should not be used in new code.\";\n        text.push(message);\n      }\n      if (context.documentation) {\n        text.push(context.documentation);\n      }\n      doc.description = text.map(cur => cur.replace(/\\$tagname/g, context.tagName)).join(\"\\n\\n\");\n    }\n    return doc;\n  }\n  setup() {\n    this.on(\"tag:start\", event => {\n      const node = event.target;\n      /* cannot validate if meta isn't known */\n      if (node.meta === null) {\n        return;\n      }\n      /* ignore if element is not deprecated */\n      const deprecated = node.meta.deprecated;\n      if (!deprecated) {\n        return;\n      }\n      /* ignore if element is ignored by used configuration */\n      if (this.isKeywordIgnored(node.tagName)) {\n        return;\n      }\n      const location = sliceLocation(event.location, 1);\n      if (typeof deprecated === \"string\") {\n        this.reportString(deprecated, node, location);\n      } else if (typeof deprecated === \"boolean\") {\n        this.reportBoolean(node, location);\n      } else {\n        this.reportObject(deprecated, node, location);\n      }\n    });\n  }\n  reportString(deprecated, node, location) {\n    const context = {\n      tagName: node.tagName\n    };\n    const message = \"<\".concat(node.tagName, \"> is deprecated: \").concat(deprecated);\n    this.report(node, message, location, context);\n  }\n  reportBoolean(node, location) {\n    const context = {\n      tagName: node.tagName\n    };\n    const message = \"<\".concat(node.tagName, \"> is deprecated\");\n    this.report(node, message, location, context);\n  }\n  reportObject(deprecated, node, location) {\n    const context = {\n      ...deprecated,\n      tagName: node.tagName\n    };\n    const notice = deprecated.message ? \": \".concat(deprecated.message) : \"\";\n    const message = \"<\".concat(node.tagName, \"> is deprecated\").concat(notice);\n    this.report(node, message, location, context);\n  }\n}\nfunction prettySource(source) {\n  const match = source.match(/html(\\d)(\\d)?/);\n  if (match) {\n    const [, ...parts] = match;\n    const version = parts.filter(Boolean).join(\".\");\n    return \"in HTML \".concat(version);\n  }\n  switch (source) {\n    case \"whatwg\":\n      return \"in HTML Living Standard\";\n    case \"non-standard\":\n      return \"and non-standard\";\n    default:\n      return \"by \".concat(source);\n  }\n}\nclass DeprecatedRule extends Rule {\n  documentation(context) {\n    const preamble = context ? \"The rule \\\"\".concat(context, \"\\\"\") : \"This rule\";\n    return {\n      description: \"\".concat(preamble, \" is deprecated and should not be used any longer, consult documentation for further information.\"),\n      url: ruleDocumentationUrl(\"@/rules/deprecated-rule.ts\")\n    };\n  }\n  setup() {\n    this.on(\"config:ready\", event => {\n      for (const rule of this.getDeprecatedRules(event)) {\n        if (rule.getSeverity() > exports.Severity.DISABLED) {\n          this.report(null, \"Usage of deprecated rule \\\"\".concat(rule.name, \"\\\"\"), null, rule.name);\n        }\n      }\n    });\n  }\n  getDeprecatedRules(event) {\n    const rules = Object.values(event.rules);\n    return rules.filter(rule => rule.deprecated);\n  }\n}\nclass NoStyleTag$1 extends Rule {\n  documentation() {\n    return {\n      description: ['HTML5 documents should use the \"html\" doctype (short `form`, not legacy string):', \"\", \"```html\", \"<!DOCTYPE html>\", \"```\"].join(\"\\n\"),\n      url: ruleDocumentationUrl(\"@/rules/doctype-html.ts\")\n    };\n  }\n  setup() {\n    this.on(\"doctype\", event => {\n      const doctype = event.value.toLowerCase();\n      if (doctype !== \"html\") {\n        this.report(null, 'doctype should be \"html\"', event.valueLocation);\n      }\n    });\n  }\n}\nconst defaults$h = {\n  style: \"uppercase\"\n};\nclass DoctypeStyle extends Rule {\n  constructor(options) {\n    super({\n      ...defaults$h,\n      ...options\n    });\n  }\n  static schema() {\n    return {\n      style: {\n        enum: [\"lowercase\", \"uppercase\"],\n        type: \"string\"\n      }\n    };\n  }\n  documentation(context) {\n    const doc = {\n      description: \"While DOCTYPE is case-insensitive in the standard the current configuration requires a specific style.\",\n      url: ruleDocumentationUrl(\"@/rules/doctype-style.ts\")\n    };\n    if (context) {\n      doc.description = \"While DOCTYPE is case-insensitive in the standard the current configuration requires it to be \".concat(context.style);\n    }\n    return doc;\n  }\n  setup() {\n    this.on(\"doctype\", event => {\n      if (this.options.style === \"uppercase\" && event.tag !== \"DOCTYPE\") {\n        this.report(null, \"DOCTYPE should be uppercase\", event.location, this.options);\n      }\n      if (this.options.style === \"lowercase\" && event.tag !== \"doctype\") {\n        this.report(null, \"DOCTYPE should be lowercase\", event.location, this.options);\n      }\n    });\n  }\n}\nconst defaults$g = {\n  style: \"lowercase\"\n};\nclass ElementCase extends Rule {\n  constructor(options) {\n    super({\n      ...defaults$g,\n      ...options\n    });\n    this.style = new CaseStyle(this.options.style, \"element-case\");\n  }\n  static schema() {\n    const styleEnum = [\"lowercase\", \"uppercase\", \"pascalcase\", \"camelcase\"];\n    return {\n      style: {\n        anyOf: [{\n          enum: styleEnum,\n          type: \"string\"\n        }, {\n          items: {\n            enum: styleEnum,\n            type: \"string\"\n          },\n          type: \"array\"\n        }]\n      }\n    };\n  }\n  documentation() {\n    return {\n      description: \"Element tagname must be \".concat(this.options.style, \".\"),\n      url: ruleDocumentationUrl(\"@/rules/element-case.ts\")\n    };\n  }\n  setup() {\n    this.on(\"tag:start\", event => {\n      const {\n        target,\n        location\n      } = event;\n      this.validateCase(target, location);\n    });\n    this.on(\"tag:end\", event => {\n      const {\n        target,\n        previous\n      } = event;\n      this.validateMatchingCase(previous, target);\n    });\n  }\n  validateCase(target, targetLocation) {\n    const letters = target.tagName.replace(/[^a-z]+/gi, \"\");\n    if (!this.style.match(letters)) {\n      const location = sliceLocation(targetLocation, 1);\n      this.report(target, \"Element \\\"\".concat(target.tagName, \"\\\" should be \").concat(this.style.name), location);\n    }\n  }\n  validateMatchingCase(start, end) {\n    /* handle when elements have have missing start or end tag */\n    if (!start || !end || !start.tagName || !end.tagName) {\n      return;\n    }\n    /* only check case if the names are a lowercase match to each other or it\n     * will yield false positives when elements are closed in wrong order or\n     * otherwise mismatched */\n    if (start.tagName.toLowerCase() !== end.tagName.toLowerCase()) {\n      return;\n    }\n    if (start.tagName !== end.tagName) {\n      this.report(start, \"Start and end tag must not differ in casing\", end.location);\n    }\n  }\n}\nconst defaults$f = {\n  pattern: \"^[a-z][a-z0-9\\\\-._]*-[a-z0-9\\\\-._]*$\",\n  whitelist: [],\n  blacklist: []\n};\nclass ElementName extends Rule {\n  constructor(options) {\n    super({\n      ...defaults$f,\n      ...options\n    });\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    this.pattern = new RegExp(this.options.pattern);\n  }\n  static schema() {\n    return {\n      blacklist: {\n        items: {\n          type: \"string\"\n        },\n        type: \"array\"\n      },\n      pattern: {\n        type: \"string\"\n      },\n      whitelist: {\n        items: {\n          type: \"string\"\n        },\n        type: \"array\"\n      }\n    };\n  }\n  documentation(context) {\n    return {\n      description: this.documentationMessages(context).join(\"\\n\"),\n      url: ruleDocumentationUrl(\"@/rules/element-name.ts\")\n    };\n  }\n  documentationMessages(context) {\n    if (!context) {\n      return [\"This is not a valid element name.\"];\n    }\n    if (context.blacklist.includes(context.tagName)) {\n      return [\"<\".concat(context.tagName, \"> is blacklisted by the project configuration.\"), \"\", \"The following names are blacklisted:\", ...context.blacklist.map(cur => \"- \".concat(cur))];\n    }\n    if (context.pattern !== defaults$f.pattern) {\n      return [\"<\".concat(context.tagName, \"> is not a valid element name. This project is configured to only allow names matching the following regular expression:\"), \"\", \"- `\".concat(context.pattern, \"`\")];\n    }\n    return [\"<\".concat(context.tagName, \"> is not a valid element name. If this is a custom element HTML requires the name to follow these rules:\"), \"\", \"- The name must begin with `a-z`\", \"- The name must include a hyphen `-`\", \"- It may include alphanumerical characters `a-z0-9` or hyphens `-`, dots `.` or underscores `_`.\"];\n  }\n  setup() {\n    const xmlns = /^(.+):.+$/;\n    this.on(\"tag:start\", event => {\n      const target = event.target;\n      const tagName = target.tagName;\n      const location = sliceLocation(event.location, 1);\n      const context = {\n        tagName,\n        pattern: this.options.pattern,\n        blacklist: this.options.blacklist\n      };\n      /* check if element is blacklisted */\n      if (this.options.blacklist.includes(tagName)) {\n        this.report(target, \"<\".concat(tagName, \"> element is blacklisted\"), location, context);\n      }\n      /* assume that an element with meta has valid name as it is a builtin\n       * element */\n      if (target.meta) {\n        return;\n      }\n      /* ignore elements in xml namespaces, they should be validated against a\n       * DTD instead */\n      if (tagName.match(xmlns)) {\n        return;\n      }\n      /* check if element is whitelisted */\n      if (this.options.whitelist.includes(tagName)) {\n        return;\n      }\n      if (!tagName.match(this.pattern)) {\n        this.report(target, \"<\".concat(tagName, \"> is not a valid element name\"), location, context);\n      }\n    });\n  }\n}\nfunction getTransparentChildren(node, transparent) {\n  if (typeof transparent === \"boolean\") {\n    return node.childElements;\n  } else {\n    /* only return children which matches one of the given content categories */\n    return node.childElements.filter(it => {\n      return transparent.some(category => {\n        return Validator.validatePermittedCategory(it, category, false);\n      });\n    });\n  }\n}\nclass ElementPermittedContent extends Rule {\n  documentation() {\n    return {\n      description: \"Some elements has restrictions on what content is allowed. This can include both direct children or descendant elements.\",\n      url: ruleDocumentationUrl(\"@/rules/element-permitted-content.ts\")\n    };\n  }\n  setup() {\n    this.on(\"dom:ready\", event => {\n      const doc = event.document;\n      doc.visitDepthFirst(node => {\n        const parent = node.parent;\n        /* dont verify root element, assume any element is allowed */\n        if (!parent || parent.isRootElement()) {\n          return;\n        }\n        /* Run each validation step, stop as soon as any errors are\n         * reported. This is to prevent multiple similar errors on the same\n         * element, such as \"<dd> is not permitted content under <span>\" and\n         * \"<dd> has no permitted ancestors\". */\n        [() => this.validatePermittedContent(node, parent), () => this.validatePermittedDescendant(node, parent), () => this.validatePermittedAncestors(node)].some(fn => fn());\n      });\n    });\n  }\n  validatePermittedContent(cur, parent) {\n    var _a;\n    /* if parent doesn't have metadata (unknown element) skip checking permitted\n     * content */\n    if (!parent.meta) {\n      return false;\n    }\n    const rules = (_a = parent.meta.permittedContent) !== null && _a !== void 0 ? _a : null;\n    return this.validatePermittedContentImpl(cur, parent, rules);\n  }\n  validatePermittedContentImpl(cur, parent, rules) {\n    if (!Validator.validatePermitted(cur, rules)) {\n      this.report(cur, \"Element <\".concat(cur.tagName, \"> is not permitted as content in \").concat(parent.annotatedName));\n      return true;\n    }\n    /* for transparent elements all/listed children must be validated against\n     * the (this elements) parent, i.e. if this node was removed from the DOM it\n     * should still be valid. */\n    if (cur.meta && cur.meta.transparent) {\n      const children = getTransparentChildren(cur, cur.meta.transparent);\n      return children.map(child => {\n        return this.validatePermittedContentImpl(child, parent, rules);\n      }).some(Boolean);\n    }\n    return false;\n  }\n  validatePermittedDescendant(node, parent) {\n    var _a;\n    for (let cur = parent; cur && !cur.isRootElement(); cur = /* istanbul ignore next */(_a = cur === null || cur === void 0 ? void 0 : cur.parent) !== null && _a !== void 0 ? _a : null) {\n      const meta = cur.meta;\n      /* ignore checking parent without meta */\n      if (!meta) {\n        continue;\n      }\n      const rules = meta.permittedDescendants;\n      if (!rules) {\n        continue;\n      }\n      if (Validator.validatePermitted(node, rules)) {\n        continue;\n      }\n      this.report(node, \"Element <\".concat(node.tagName, \"> is not permitted as descendant of \").concat(cur.annotatedName));\n      return true;\n    }\n    return false;\n  }\n  validatePermittedAncestors(node) {\n    if (!node.meta) {\n      return false;\n    }\n    const rules = node.meta.requiredAncestors;\n    if (!rules) {\n      return false;\n    }\n    if (!Validator.validateAncestors(node, rules)) {\n      this.report(node, \"Element <\".concat(node.tagName, \"> requires an \\\"\").concat(rules[0], \"\\\" ancestor\"));\n      return true;\n    }\n    return false;\n  }\n}\nclass ElementPermittedOccurrences extends Rule {\n  documentation() {\n    return {\n      description: \"Some elements may only be used a fixed amount of times in given context.\",\n      url: ruleDocumentationUrl(\"@/rules/element-permitted-occurrences.ts\")\n    };\n  }\n  setup() {\n    this.on(\"dom:ready\", event => {\n      const doc = event.document;\n      doc.visitDepthFirst(node => {\n        const parent = node.parent;\n        if (!parent || !parent.meta) {\n          return;\n        }\n        const rules = parent.meta.permittedContent;\n        if (!rules) {\n          return;\n        }\n        const siblings = parent.childElements.filter(cur => cur.tagName === node.tagName);\n        const first = node.unique === siblings[0].unique;\n        /* the first occurrence should not trigger any errors, only the\n         * subsequent occurrences should. */\n        if (first) {\n          return;\n        }\n        if (parent.meta && !Validator.validateOccurrences(node, rules, siblings.length)) {\n          this.report(node, \"Element <\".concat(node.tagName, \"> can only appear once under \").concat(parent.annotatedName));\n        }\n      });\n    });\n  }\n}\nclass ElementPermittedOrder extends Rule {\n  documentation() {\n    return {\n      description: \"Some elements has a specific order the children must use.\",\n      url: ruleDocumentationUrl(\"@/rules/element-permitted-order.ts\")\n    };\n  }\n  setup() {\n    this.on(\"dom:ready\", event => {\n      const doc = event.document;\n      doc.visitDepthFirst(node => {\n        if (!node.meta) {\n          return;\n        }\n        const rules = node.meta.permittedOrder;\n        if (!rules) {\n          return;\n        }\n        Validator.validateOrder(node.childElements, rules, (child, prev) => {\n          this.report(child, \"Element <\".concat(child.tagName, \"> must be used before <\").concat(prev.tagName, \"> in this context\"));\n        });\n      });\n    });\n  }\n}\nclass ElementRequiredAttributes extends Rule {\n  documentation(context) {\n    const docs = {\n      description: \"Element is missing a required attribute\",\n      url: ruleDocumentationUrl(\"@/rules/element-required-attributes.ts\")\n    };\n    if (context) {\n      docs.description = \"The <\".concat(context.element, \"> element is required to have a \\\"\").concat(context.attribute, \"\\\" attribute.\");\n    }\n    return docs;\n  }\n  setup() {\n    this.on(\"tag:end\", event => {\n      const node = event.previous;\n      const meta = node.meta;\n      /* handle missing metadata and missing attributes */\n      if (!meta || !meta.attributes) {\n        return;\n      }\n      for (const [key, attr] of Object.entries(meta.attributes)) {\n        if (!attr.required) {\n          continue;\n        }\n        if (node.hasAttribute(key)) continue;\n        const context = {\n          element: node.tagName,\n          attribute: key\n        };\n        this.report(node, \"\".concat(node.annotatedName, \" is missing required \\\"\").concat(key, \"\\\" attribute\"), node.location, context);\n      }\n    });\n  }\n}\nclass ElementRequiredContent extends Rule {\n  documentation(context) {\n    if (context) {\n      const {\n        element,\n        missing\n      } = context;\n      return {\n        description: \"The `\".concat(element, \"` element requires a `\").concat(missing, \"` to be present as content.\"),\n        url: ruleDocumentationUrl(\"@/rules/element-required-content.ts\")\n      };\n    } else {\n      return {\n        description: \"Some elements has requirements on content that must be present.\",\n        url: ruleDocumentationUrl(\"@/rules/element-required-content.ts\")\n      };\n    }\n  }\n  setup() {\n    this.on(\"dom:ready\", event => {\n      const doc = event.document;\n      doc.visitDepthFirst(node => {\n        /* if element doesn't have metadata (unknown element) skip checking\n         * required content */\n        if (!node.meta) {\n          return;\n        }\n        const rules = node.meta.requiredContent;\n        if (!rules) {\n          return;\n        }\n        for (const missing of Validator.validateRequiredContent(node, rules)) {\n          const context = {\n            element: node.annotatedName,\n            missing: \"<\".concat(missing, \">\")\n          };\n          const message = \"\".concat(node.annotatedName, \" element must have <\").concat(missing, \"> as content\");\n          this.report(node, message, null, context);\n        }\n      });\n    });\n  }\n}\nconst CACHE_KEY = Symbol(classifyNodeText.name);\nvar TextClassification;\n(function (TextClassification) {\n  TextClassification[TextClassification[\"EMPTY_TEXT\"] = 0] = \"EMPTY_TEXT\";\n  TextClassification[TextClassification[\"DYNAMIC_TEXT\"] = 1] = \"DYNAMIC_TEXT\";\n  TextClassification[TextClassification[\"STATIC_TEXT\"] = 2] = \"STATIC_TEXT\";\n})(TextClassification || (TextClassification = {}));\n/**\n * Checks text content of an element.\n *\n * Any text is considered including text from descendant elements. Whitespace is\n * ignored.\n *\n * If any text is dynamic `TextClassification.DYNAMIC_TEXT` is returned.\n */\nfunction classifyNodeText(node) {\n  if (node.cacheExists(CACHE_KEY)) {\n    return node.cacheGet(CACHE_KEY);\n  }\n  const text = findTextNodes(node);\n  /* if any text is dynamic classify as dynamic */\n  if (text.some(cur => cur.isDynamic)) {\n    return node.cacheSet(CACHE_KEY, TextClassification.DYNAMIC_TEXT);\n  }\n  /* if any text has non-whitespace character classify as static */\n  if (text.some(cur => cur.textContent.match(/\\S/) !== null)) {\n    return node.cacheSet(CACHE_KEY, TextClassification.STATIC_TEXT);\n  }\n  /* default to empty */\n  return node.cacheSet(CACHE_KEY, TextClassification.EMPTY_TEXT);\n}\nfunction findTextNodes(node) {\n  let text = [];\n  for (const child of node.childNodes) {\n    switch (child.nodeType) {\n      case NodeType.TEXT_NODE:\n        text.push(child);\n        break;\n      case NodeType.ELEMENT_NODE:\n        text = text.concat(findTextNodes(child));\n        break;\n    }\n  }\n  return text;\n}\nconst selector = [\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"].join(\",\");\nclass EmptyHeading extends Rule {\n  documentation() {\n    return {\n      description: \"Assistive technology such as screen readers require textual content in headings. Whitespace only is considered empty.\",\n      url: ruleDocumentationUrl(\"@/rules/empty-heading.ts\")\n    };\n  }\n  setup() {\n    this.on(\"dom:ready\", _ref8 => {\n      let {\n        document\n      } = _ref8;\n      const headings = document.querySelectorAll(selector);\n      for (const heading of headings) {\n        switch (classifyNodeText(heading)) {\n          case TextClassification.DYNAMIC_TEXT:\n          case TextClassification.STATIC_TEXT:\n            /* have some text content, consider ok */\n            break;\n          case TextClassification.EMPTY_TEXT:\n            /* no content or whitespace only */\n            this.report(heading, \"<\".concat(heading.tagName, \"> cannot be empty, must have text content\"));\n            break;\n        }\n      }\n    });\n  }\n}\nclass EmptyTitle extends Rule {\n  documentation() {\n    return {\n      description: [\"The `<title>` element cannot be empty, it must have textual content.\", \"\", \"It is used to describe the document and is shown in the browser tab and titlebar.\", \"WCAG and SEO requires a descriptive title and preferably unique within the site.\", \"\", \"Whitespace is ignored.\"].join(\"\\n\"),\n      url: ruleDocumentationUrl(\"@/rules/empty-title.ts\")\n    };\n  }\n  setup() {\n    this.on(\"tag:end\", event => {\n      const node = event.previous;\n      if (node.tagName !== \"title\") return;\n      switch (classifyNodeText(node)) {\n        case TextClassification.DYNAMIC_TEXT:\n        case TextClassification.STATIC_TEXT:\n          /* have some text content, consider ok */\n          break;\n        case TextClassification.EMPTY_TEXT:\n          /* no content or whitespace only */\n          {\n            const message = \"<\".concat(node.tagName, \"> cannot be empty, must have text content\");\n            this.report(node, message, node.location);\n          }\n          break;\n      }\n    });\n  }\n}\nconst defaults$e = {\n  allowMultipleH1: false,\n  minInitialRank: \"h1\",\n  sectioningRoots: [\"dialog\", '[role=\"dialog\"]']\n};\nfunction isRelevant$2(event) {\n  const node = event.target;\n  return Boolean(node.meta && node.meta.heading);\n}\nfunction extractLevel(node) {\n  const match = node.tagName.match(/^[hH](\\d)$/);\n  if (match) {\n    return parseInt(match[1], 10);\n  } else {\n    return null;\n  }\n}\nfunction parseMaxInitial(value) {\n  if (value === false || value === \"any\") {\n    return 6;\n  }\n  const match = value.match(/^h(\\d)$/);\n  /* istanbul ignore next: should never happen, schema validation should catch invalid values */\n  if (!match) {\n    return 1;\n  }\n  return parseInt(match[1], 10);\n}\nclass HeadingLevel extends Rule {\n  constructor(options) {\n    super({\n      ...defaults$e,\n      ...options\n    });\n    this.stack = [];\n    this.minInitialRank = parseMaxInitial(this.options.minInitialRank);\n    this.sectionRoots = this.options.sectioningRoots.map(it => new Pattern(it));\n    /* add a global sectioning root used by default */\n    this.stack.push({\n      node: null,\n      current: 0,\n      h1Count: 0\n    });\n  }\n  static schema() {\n    return {\n      allowMultipleH1: {\n        type: \"boolean\"\n      },\n      minInitialRank: {\n        enum: [\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"any\", false]\n      },\n      sectioningRoots: {\n        items: {\n          type: \"string\"\n        },\n        type: \"array\"\n      }\n    };\n  }\n  documentation() {\n    const text = [];\n    const modality = this.minInitialRank > 1 ? \"should\" : \"must\";\n    text.push(\"Headings \".concat(modality, \" start at <h1> and can only increase one level at a time.\"));\n    text.push(\"The headings should form a table of contents and make sense on its own.\");\n    if (!this.options.allowMultipleH1) {\n      text.push(\"\");\n      text.push(\"Under the current configuration only a single <h1> can be present at a time in the document.\");\n    }\n    return {\n      description: text.join(\"\\n\"),\n      url: ruleDocumentationUrl(\"@/rules/heading-level.ts\")\n    };\n  }\n  setup() {\n    this.on(\"tag:start\", isRelevant$2, event => this.onTagStart(event));\n    this.on(\"tag:ready\", event => this.onTagReady(event));\n    this.on(\"tag:close\", event => this.onTagClose(event));\n  }\n  onTagStart(event) {\n    /* extract heading level from tagName (e.g \"h1\" -> 1)*/\n    const level = extractLevel(event.target);\n    if (!level) return;\n    /* fetch the current sectioning root */\n    const root = this.getCurrentRoot();\n    /* do not allow multiple h1 */\n    if (!this.options.allowMultipleH1 && level === 1) {\n      if (root.h1Count >= 1) {\n        const location = sliceLocation(event.location, 1);\n        this.report(event.target, \"Multiple <h1> are not allowed\", location);\n        return;\n      }\n      root.h1Count++;\n    }\n    /* allow same level or decreasing to any level (e.g. from h4 to h2) */\n    if (level <= root.current) {\n      root.current = level;\n      return;\n    }\n    this.checkLevelIncrementation(root, event, level);\n    root.current = level;\n  }\n  /**\n   * Validate heading level was only incremented by one.\n   */\n  checkLevelIncrementation(root, event, level) {\n    const expected = root.current + 1;\n    /* check if the new level is the expected one (headings with higher ranks\n     * are skipped already) */\n    if (level === expected) {\n      return;\n    }\n    /* if this is the initial heading of the document it is compared to the\n     * minimal allowed (default h1) */\n    const isInitial = this.stack.length === 1 && expected === 1;\n    if (isInitial && level <= this.minInitialRank) {\n      return;\n    }\n    /* if we reach this far the heading level is not accepted */\n    const location = sliceLocation(event.location, 1);\n    if (root.current > 0) {\n      const msg = \"Heading level can only increase by one, expected <h\".concat(expected, \"> but got <h\").concat(level, \">\");\n      this.report(event.target, msg, location);\n    } else {\n      this.checkInitialLevel(event, location, level, expected);\n    }\n  }\n  checkInitialLevel(event, location, level, expected) {\n    if (this.stack.length === 1) {\n      const msg = this.minInitialRank > 1 ? \"Initial heading level must be <h\".concat(this.minInitialRank, \"> or higher rank but got <h\").concat(level, \">\") : \"Initial heading level must be <h\".concat(expected, \"> but got <h\").concat(level, \">\");\n      this.report(event.target, msg, location);\n    } else {\n      const prevRoot = this.getPrevRoot();\n      const prevRootExpected = prevRoot.current + 1;\n      if (level > prevRootExpected) {\n        if (expected === prevRootExpected) {\n          const msg = \"Initial heading level for sectioning root must be <h\".concat(expected, \"> but got <h\").concat(level, \">\");\n          this.report(event.target, msg, location);\n        } else {\n          const msg = \"Initial heading level for sectioning root must be between <h\".concat(expected, \"> and <h\").concat(prevRootExpected, \"> but got <h\").concat(level, \">\");\n          this.report(event.target, msg, location);\n        }\n      }\n    }\n  }\n  /**\n   * Check if the current element is a sectioning root and push a new root entry\n   * on the stack if it is.\n   */\n  onTagReady(event) {\n    const {\n      target\n    } = event;\n    if (this.isSectioningRoot(target)) {\n      this.stack.push({\n        node: target.unique,\n        current: 0,\n        h1Count: 0\n      });\n    }\n  }\n  /**\n   * Check if the current element being closed is the element which opened the\n   * current sectioning root, in which case the entry is popped from the stack.\n   */\n  onTagClose(event) {\n    const {\n      previous: target\n    } = event;\n    const root = this.getCurrentRoot();\n    if (target.unique !== root.node) {\n      return;\n    }\n    this.stack.pop();\n  }\n  getPrevRoot() {\n    return this.stack[this.stack.length - 2];\n  }\n  getCurrentRoot() {\n    return this.stack[this.stack.length - 1];\n  }\n  isSectioningRoot(node) {\n    const context = {\n      scope: node\n    };\n    return this.sectionRoots.some(it => it.match(node, context));\n  }\n}\nconst defaults$d = {\n  pattern: \"kebabcase\"\n};\nclass IdPattern extends Rule {\n  constructor(options) {\n    super({\n      ...defaults$d,\n      ...options\n    });\n    this.pattern = parsePattern(this.options.pattern);\n  }\n  static schema() {\n    return {\n      pattern: {\n        type: \"string\"\n      }\n    };\n  }\n  documentation() {\n    const pattern = describePattern(this.options.pattern);\n    return {\n      description: \"For consistency all IDs are required to match the pattern \".concat(pattern, \".\"),\n      url: ruleDocumentationUrl(\"@/rules/id-pattern.ts\")\n    };\n  }\n  setup() {\n    this.on(\"attr\", event => {\n      if (event.key.toLowerCase() !== \"id\") {\n        return;\n      }\n      /* consider dynamic value as always matching the pattern */\n      if (event.value instanceof DynamicValue) {\n        return;\n      }\n      if (!event.value || !event.value.match(this.pattern)) {\n        this.report(event.target, \"ID \\\"\".concat(event.value, \"\\\" does not match required pattern \\\"\").concat(this.pattern, \"\\\"\"), event.valueLocation);\n      }\n    });\n  }\n}\n\n/* eslint-disable sonarjs/no-duplicate-string */\nconst restricted = new Map([[\"accept\", [\"file\"]], [\"alt\", [\"image\"]], [\"autocomplete\", [\"hidden\", \"text\", \"search\", \"url\", \"tel\", \"email\", \"password\", \"date\", \"month\", \"week\", \"time\", \"datetime-local\", \"number\", \"range\", \"color\"]], [\"capture\", [\"file\"]], [\"checked\", [\"checkbox\", \"radio\"]], [\"dirname\", [\"text\", \"search\"]], [\"formaction\", [\"submit\", \"image\"]], [\"formenctype\", [\"submit\", \"image\"]], [\"formmethod\", [\"submit\", \"image\"]], [\"formnovalidate\", [\"submit\", \"image\"]], [\"formtarget\", [\"submit\", \"image\"]], [\"height\", [\"image\"]], [\"list\", [\"text\", \"search\", \"url\", \"tel\", \"email\", \"date\", \"month\", \"week\", \"time\", \"datetime-local\", \"number\", \"range\", \"color\"]], [\"max\", [\"date\", \"month\", \"week\", \"time\", \"datetime-local\", \"number\", \"range\"]], [\"maxlength\", [\"text\", \"search\", \"url\", \"tel\", \"email\", \"password\"]], [\"min\", [\"date\", \"month\", \"week\", \"time\", \"datetime-local\", \"number\", \"range\"]], [\"minlength\", [\"text\", \"search\", \"url\", \"tel\", \"email\", \"password\"]], [\"multiple\", [\"email\", \"file\"]], [\"pattern\", [\"text\", \"search\", \"url\", \"tel\", \"email\", \"password\"]], [\"placeholder\", [\"text\", \"search\", \"url\", \"tel\", \"email\", \"password\", \"number\"]], [\"readonly\", [\"text\", \"search\", \"url\", \"tel\", \"email\", \"password\", \"date\", \"month\", \"week\", \"time\", \"datetime-local\", \"number\"]], [\"required\", [\"text\", \"search\", \"url\", \"tel\", \"email\", \"password\", \"date\", \"month\", \"week\", \"time\", \"datetime-local\", \"number\", \"checkbox\", \"radio\", \"file\"]], [\"size\", [\"text\", \"search\", \"url\", \"tel\", \"email\", \"password\"]], [\"src\", [\"image\"]], [\"step\", [\"date\", \"month\", \"week\", \"time\", \"datetime-local\", \"number\", \"range\"]], [\"width\", [\"image\"]]]);\nfunction isInput(event) {\n  const {\n    target\n  } = event;\n  return target.is(\"input\");\n}\nclass InputAttributes extends Rule {\n  documentation(context) {\n    var _a, _b;\n    if (context) {\n      const {\n        attribute,\n        type\n      } = context;\n      const summary = \"Attribute `\".concat(attribute, \"` is not allowed on `<input type=\\\"\").concat(type, \"\\\">`\\n\");\n      const details = \"`\".concat(attribute, \"` can only be used when `type` is:\");\n      const list = (_b = (_a = restricted.get(attribute)) === null || _a === void 0 ? void 0 : _a.map(it => \"- `\".concat(it, \"`\"))) !== null && _b !== void 0 ? _b : [];\n      return {\n        description: [summary, details, ...list].join(\"\\n\"),\n        url: ruleDocumentationUrl(\"@/rules/input-attributes.ts\")\n      };\n    } else {\n      return {\n        description: \"This attribute cannot be used with this input type.\",\n        url: ruleDocumentationUrl(\"@/rules/input-attributes.ts\")\n      };\n    }\n  }\n  setup() {\n    this.on(\"tag:ready\", isInput, event => {\n      const {\n        target\n      } = event;\n      const type = target.getAttribute(\"type\");\n      if (!type || type.isDynamic || !type.value) {\n        return;\n      }\n      const typeValue = type.value.toString();\n      for (const attr of target.attributes) {\n        const validTypes = restricted.get(attr.key);\n        if (!validTypes) {\n          continue;\n        }\n        if (validTypes.includes(typeValue)) {\n          continue;\n        }\n        const context = {\n          attribute: attr.key,\n          type: typeValue\n        };\n        const message = \"Attribute \\\"\".concat(attr.key, \"\\\" is not allowed on <input type=\\\"\").concat(typeValue, \"\\\">\");\n        this.report(target, message, attr.keyLocation, context);\n      }\n    });\n  }\n}\nconst ARIA_HIDDEN_CACHE = Symbol(isAriaHidden.name);\nconst HTML_HIDDEN_CACHE = Symbol(isHTMLHidden.name);\nconst ROLE_PRESENTATION_CACHE = Symbol(isPresentation.name);\n/**\n * Tests if this element is present in the accessibility tree.\n *\n * In practice it tests whenever the element or its parents has\n * `role=\"presentation\"` or `aria-hidden=\"false\"`. Dynamic values counts as\n * visible since the element might be in the visibility tree sometimes.\n */\nfunction inAccessibilityTree(node) {\n  return !isAriaHidden(node) && !isPresentation(node);\n}\n/**\n * Tests if this element or an ancestor have `aria-hidden=\"true\"`.\n *\n * Dynamic values yields `false` since the element will conditionally be in the\n * accessibility tree and must fulfill it's conditions.\n */\nfunction isAriaHidden(node) {\n  if (node.cacheExists(ARIA_HIDDEN_CACHE)) {\n    return Boolean(node.cacheGet(ARIA_HIDDEN_CACHE));\n  }\n  let cur = node;\n  do {\n    const ariaHidden = cur.getAttribute(\"aria-hidden\");\n    /* aria-hidden=\"true\" */\n    if (ariaHidden && ariaHidden.value === \"true\") {\n      return cur.cacheSet(ARIA_HIDDEN_CACHE, true);\n    }\n    /* sanity check: break if no parent is present, normally not an issue as the\n     * root element should be found first */\n    if (!cur.parent) {\n      break;\n    }\n    /* check parents */\n    cur = cur.parent;\n  } while (!cur.isRootElement());\n  return node.cacheSet(ARIA_HIDDEN_CACHE, false);\n}\n/**\n * Tests if this element or an ancestor have `hidden` attribute.\n *\n * Dynamic values yields `false` since the element will conditionally be in the\n * DOM tree and must fulfill it's conditions.\n */\nfunction isHTMLHidden(node) {\n  if (node.cacheExists(HTML_HIDDEN_CACHE)) {\n    return Boolean(node.cacheGet(HTML_HIDDEN_CACHE));\n  }\n  let cur = node;\n  do {\n    const hidden = cur.getAttribute(\"hidden\");\n    /* hidden present */\n    if (hidden !== null && hidden.isStatic) {\n      return cur.cacheSet(HTML_HIDDEN_CACHE, true);\n    }\n    /* sanity check: break if no parent is present, normally not an issue as the\n     * root element should be found first */\n    if (!cur.parent) {\n      break;\n    }\n    /* check parents */\n    cur = cur.parent;\n  } while (!cur.isRootElement());\n  return node.cacheSet(HTML_HIDDEN_CACHE, false);\n}\n/**\n * Tests if this element or a parent element has role=\"presentation\".\n *\n * Dynamic values yields `false` just as if the attribute wasn't present.\n */\nfunction isPresentation(node) {\n  if (node.cacheExists(ROLE_PRESENTATION_CACHE)) {\n    return Boolean(node.cacheGet(ROLE_PRESENTATION_CACHE));\n  }\n  let cur = node;\n  do {\n    const role = cur.getAttribute(\"role\");\n    /* role=\"presentation\" */\n    if (role && role.value === \"presentation\") {\n      return cur.cacheSet(ROLE_PRESENTATION_CACHE, true);\n    }\n    /* sanity check: break if no parent is present, normally not an issue as the\n     * root element should be found first */\n    if (!cur.parent) {\n      break;\n    }\n    /* check parents */\n    cur = cur.parent;\n  } while (!cur.isRootElement());\n  return node.cacheSet(ROLE_PRESENTATION_CACHE, false);\n}\nclass InputMissingLabel extends Rule {\n  documentation() {\n    return {\n      description: \"Labels are associated with the input element and is required for a17y.\",\n      url: ruleDocumentationUrl(\"@/rules/input-missing-label.ts\")\n    };\n  }\n  setup() {\n    this.on(\"dom:ready\", event => {\n      const root = event.document;\n      for (const elem of root.querySelectorAll(\"input, textarea, select\")) {\n        this.validateInput(root, elem);\n      }\n    });\n  }\n  validateInput(root, elem) {\n    if (isHTMLHidden(elem) || isAriaHidden(elem)) {\n      return;\n    }\n    /* <input type=\"hidden\"> should not have label */\n    if (elem.is(\"input\")) {\n      const type = elem.getAttributeValue(\"type\");\n      if (type && type.toLowerCase() === \"hidden\") {\n        return;\n      }\n    }\n    let label = [];\n    /* try to find label by id */\n    if ((label = findLabelById(root, elem.id)).length > 0) {\n      this.validateLabel(elem, label);\n      return;\n    }\n    /* try to find parent label (input nested in label) */\n    if ((label = findLabelByParent(elem)).length > 0) {\n      this.validateLabel(elem, label);\n      return;\n    }\n    this.report(elem, \"<\".concat(elem.tagName, \"> element does not have a <label>\"));\n  }\n  /**\n   * Reports error if none of the labels are accessible.\n   */\n  validateLabel(elem, labels) {\n    const visible = labels.filter(isVisible);\n    if (visible.length === 0) {\n      this.report(elem, \"<\".concat(elem.tagName, \"> element has label but <label> element is hidden\"));\n    }\n  }\n}\nfunction isVisible(elem) {\n  const hidden = isHTMLHidden(elem) || isAriaHidden(elem);\n  return !hidden;\n}\nfunction findLabelById(root, id) {\n  if (!id) return [];\n  return root.querySelectorAll(\"label[for=\\\"\".concat(id, \"\\\"]\"));\n}\nfunction findLabelByParent(el) {\n  let cur = el.parent;\n  while (cur) {\n    if (cur.is(\"label\")) {\n      return [cur];\n    }\n    cur = cur.parent;\n  }\n  return [];\n}\nconst defaults$c = {\n  maxlength: 70\n};\nclass LongTitle extends Rule {\n  constructor(options) {\n    super({\n      ...defaults$c,\n      ...options\n    });\n    this.maxlength = this.options.maxlength;\n  }\n  static schema() {\n    return {\n      maxlength: {\n        type: \"number\"\n      }\n    };\n  }\n  documentation() {\n    return {\n      description: \"Search engines truncates titles with long text, possibly down-ranking the page in the process.\",\n      url: ruleDocumentationUrl(\"@/rules/long-title.ts\")\n    };\n  }\n  setup() {\n    this.on(\"tag:end\", event => {\n      const node = event.previous;\n      if (node.tagName !== \"title\") return;\n      const text = node.textContent;\n      if (text.length > this.maxlength) {\n        this.report(node, \"title text cannot be longer than \".concat(this.maxlength, \" characters\"));\n      }\n    });\n  }\n}\nclass MetaRefresh extends Rule {\n  documentation() {\n    return {\n      description: \"Meta refresh directive must use the `0;url=...` format. Non-zero values for time interval is disallowed as people with assistive technology might be unable to read and understand the page content before automatically reloading. For the same reason skipping the url is disallowed as it would put the browser in an infinite loop reloading the same page over and over again.\",\n      url: ruleDocumentationUrl(\"@/rules/meta-refresh.ts\")\n    };\n  }\n  setup() {\n    this.on(\"element:ready\", _ref9 => {\n      let {\n        target\n      } = _ref9;\n      /* only handle <meta> */\n      if (!target.is(\"meta\")) {\n        return;\n      }\n      /* only handle refresh */\n      const httpEquiv = target.getAttributeValue(\"http-equiv\");\n      if (httpEquiv !== \"refresh\") {\n        return;\n      }\n      /* ensure content attribute is set */\n      const content = target.getAttribute(\"content\");\n      if (!content || !content.value || content.isDynamic) {\n        return;\n      }\n      /* ensure content attribute is valid */\n      const location = content.valueLocation;\n      const value = parseContent(content.value.toString());\n      if (!value) {\n        this.report(target, \"Malformed meta refresh directive\", location);\n        return;\n      }\n      /* ensure a url is set */\n      if (!value.url) {\n        this.report(target, \"Don't use meta refresh to reload the page\", location);\n      }\n      /* ensure delay is exactly 0 seconds */\n      if (value.delay !== 0) {\n        this.report(target, \"Meta refresh must use 0 second delay\", location);\n      }\n    });\n  }\n}\nfunction parseContent(text) {\n  const match = text.match(/^(\\d+)(?:\\s*;\\s*url=(.*))?/);\n  if (match) {\n    return {\n      delay: parseInt(match[1], 10),\n      url: match[2]\n    };\n  } else {\n    return null;\n  }\n}\nclass MissingDoctype extends Rule {\n  documentation() {\n    return {\n      description: \"Requires that the document contains a doctype.\",\n      url: ruleDocumentationUrl(\"@/rules/missing-doctype.ts\")\n    };\n  }\n  setup() {\n    this.on(\"dom:ready\", event => {\n      const dom = event.document;\n      if (!dom.doctype) {\n        this.report(dom.root, \"Document is missing doctype\");\n      }\n    });\n  }\n}\nclass MultipleLabeledControls extends Rule {\n  constructor() {\n    super(...arguments);\n    this.labelable = \"\";\n  }\n  documentation() {\n    return {\n      description: \"A `<label>` element can only be associated with one control at a time.\",\n      url: ruleDocumentationUrl(\"@/rules/multiple-labeled-controls.ts\")\n    };\n  }\n  setup() {\n    this.labelable = this.getTagsWithProperty(\"labelable\").join(\",\");\n    this.on(\"element:ready\", event => {\n      const {\n        target\n      } = event;\n      /* only handle <label> */\n      if (target.tagName !== \"label\") {\n        return;\n      }\n      /* no error if it references 0 or 1 controls */\n      const numControls = this.getNumLabledControls(target);\n      if (numControls <= 1) {\n        return;\n      }\n      this.report(target, \"<label> is associated with multiple controls\", target.location);\n    });\n  }\n  getNumLabledControls(src) {\n    /* get all controls wrapped by label element */\n    const controls = src.querySelectorAll(this.labelable).map(node => node.id);\n    /* only count wrapped controls if the \"for\" attribute is missing or static,\n     * for dynamic \"for\" attributes it is better to run in document mode later */\n    const attr = src.getAttribute(\"for\");\n    if (!attr || attr.isDynamic || !attr.value) {\n      return controls.length;\n    }\n    /* if \"for\" attribute references a wrapped element it should not be counted\n     * multiple times */\n    const redundant = controls.includes(attr.value.toString());\n    if (redundant) {\n      return controls.length;\n    }\n    /* has \"for\" attribute pointing to element outside wrapped controls */\n    return controls.length + 1;\n  }\n}\nconst defaults$b = {\n  include: null,\n  exclude: null\n};\nclass NoAutoplay extends Rule {\n  constructor(options) {\n    super({\n      ...defaults$b,\n      ...options\n    });\n  }\n  documentation(context) {\n    const tagName = context ? \" on <\".concat(context.tagName, \">\") : \"\";\n    return {\n      description: [\"The autoplay attribute is not allowed\".concat(tagName, \".\"), \"Autoplaying content can be disruptive for users and has accessibilty concerns.\", \"Prefer to let the user control playback.\"].join(\"\\n\"),\n      url: ruleDocumentationUrl(\"@/rules/no-autoplay.ts\")\n    };\n  }\n  static schema() {\n    return {\n      exclude: {\n        anyOf: [{\n          items: {\n            type: \"string\"\n          },\n          type: \"array\"\n        }, {\n          type: \"null\"\n        }]\n      },\n      include: {\n        anyOf: [{\n          items: {\n            type: \"string\"\n          },\n          type: \"array\"\n        }, {\n          type: \"null\"\n        }]\n      }\n    };\n  }\n  setup() {\n    this.on(\"attr\", event => {\n      /* only handle autoplay attribute */\n      if (event.key.toLowerCase() !== \"autoplay\") {\n        return;\n      }\n      /* ignore dynamic values */\n      if (event.value && event.value instanceof DynamicValue) {\n        return;\n      }\n      /* ignore tagnames configured to be ignored */\n      const tagName = event.target.tagName;\n      if (this.isKeywordIgnored(tagName)) {\n        return;\n      }\n      /* report error */\n      const context = {\n        tagName\n      };\n      const location = event.location;\n      this.report(event.target, \"The autoplay attribute is not allowed on <\".concat(tagName, \">\"), location, context);\n    });\n  }\n}\nclass NoConditionalComment extends Rule {\n  documentation() {\n    return {\n      description: \"Microsoft Internet Explorer previously supported using special HTML comments (conditional comments) for targeting specific versions of IE but since IE 10 it is deprecated and not supported in standards mode.\",\n      url: ruleDocumentationUrl(\"@/rules/no-conditional-comment.ts\")\n    };\n  }\n  setup() {\n    this.on(\"conditional\", event => {\n      this.report(event.parent, \"Use of conditional comments are deprecated\", event.location);\n    });\n  }\n}\nclass NoDeprecatedAttr extends Rule {\n  documentation() {\n    return {\n      description: \"HTML5 deprecated many old attributes.\",\n      url: ruleDocumentationUrl(\"@/rules/no-deprecated-attr.ts\")\n    };\n  }\n  setup() {\n    this.on(\"attr\", event => {\n      const node = event.target;\n      const meta = node.meta;\n      const attr = event.key.toLowerCase();\n      /* cannot validate if meta isn't known */\n      if (meta === null) {\n        return;\n      }\n      const metaAttribute = meta.attributes && meta.attributes[attr];\n      if (!metaAttribute) {\n        return;\n      }\n      const deprecated = metaAttribute.deprecated;\n      if (deprecated) {\n        this.report(node, \"Attribute \\\"\".concat(event.key, \"\\\" is deprecated on <\").concat(node.tagName, \"> element\"), event.keyLocation);\n      }\n    });\n  }\n}\nclass NoDupAttr extends Rule {\n  documentation() {\n    return {\n      description: \"HTML disallows two or more attributes with the same (case-insensitive) name.\",\n      url: ruleDocumentationUrl(\"@/rules/no-dup-attr.ts\")\n    };\n  }\n  setup() {\n    let attr = {};\n    this.on(\"tag:start\", () => {\n      /* reset any time a new tag is opened */\n      attr = {};\n    });\n    this.on(\"attr\", event => {\n      /* ignore dynamic attributes aliasing another, e.g class and ng-class */\n      if (event.originalAttribute) {\n        return;\n      }\n      const name = event.key.toLowerCase();\n      if (name in attr) {\n        this.report(event.target, \"Attribute \\\"\".concat(name, \"\\\" duplicated\"), event.keyLocation);\n      }\n      attr[event.key] = true;\n    });\n  }\n}\nclass NoDupClass extends Rule {\n  documentation() {\n    return {\n      description: \"Prevents unnecessary duplication of class names.\",\n      url: ruleDocumentationUrl(\"@/rules/no-dup-class.ts\")\n    };\n  }\n  setup() {\n    this.on(\"attr\", event => {\n      if (event.key.toLowerCase() !== \"class\") {\n        return;\n      }\n      const classes = new DOMTokenList(event.value, event.valueLocation);\n      const unique = new Set();\n      classes.forEach((cur, index) => {\n        if (unique.has(cur)) {\n          const location = classes.location(index);\n          this.report(event.target, \"Class \\\"\".concat(cur, \"\\\" duplicated\"), location);\n        }\n        unique.add(cur);\n      });\n    });\n  }\n}\nclass NoDupID extends Rule {\n  documentation() {\n    return {\n      description: \"The ID of an element must be unique.\",\n      url: ruleDocumentationUrl(\"@/rules/no-dup-id.ts\")\n    };\n  }\n  setup() {\n    this.on(\"dom:ready\", event => {\n      const {\n        document\n      } = event;\n      const existing = new Set();\n      const elements = document.querySelectorAll(\"[id]\");\n      const relevant = elements.filter(isRelevant$1);\n      for (const el of relevant) {\n        const attr = el.getAttribute(\"id\");\n        /* istanbul ignore next: this has already been tested in isRelevant once but for type-safety it is checked again */\n        if (!attr || !attr.value) {\n          continue;\n        }\n        const id = attr.value.toString();\n        if (existing.has(id)) {\n          this.report(el, \"Duplicate ID \\\"\".concat(id, \"\\\"\"), attr.valueLocation);\n        }\n        existing.add(id);\n      }\n    });\n  }\n}\nfunction isRelevant$1(element) {\n  const attr = element.getAttribute(\"id\");\n  /* istanbul ignore next: can not really happen as querySelector will only return elements with id present */\n  if (!attr) {\n    return false;\n  }\n  /* id without value is not relevant, e.g. <p id></p> */\n  if (!attr.value) {\n    return false;\n  }\n  /* dynamic id (interpolated or otherwise currently unknown value) is not relevant */\n  if (attr.isDynamic) {\n    return false;\n  }\n  return true;\n}\nclass NoImplicitClose extends Rule {\n  documentation() {\n    return {\n      description: \"Some elements in HTML has optional end tags. When an optional tag is omitted a browser must handle it as if the end tag was present.\\n\\nOmitted end tags can be ambigious for humans to read and many editors have trouble formatting the markup.\",\n      url: ruleDocumentationUrl(\"@/rules/no-implicit-close.ts\")\n    };\n  }\n  setup() {\n    this.on(\"tag:end\", event => {\n      const closed = event.previous;\n      const by = event.target;\n      /* not set when unclosed elements are being closed by tree, this rule does\n       * not consider such events (handled by close-order instead) */\n      if (!by) {\n        return;\n      }\n      if (closed.closed !== exports.NodeClosed.ImplicitClosed) {\n        return;\n      }\n      const closedByParent = closed.parent && closed.parent.tagName === by.tagName; /* <ul><li></ul> */\n      const sameTag = closed.tagName === by.tagName; /* <p>foo<p>bar */\n      if (closedByParent) {\n        this.report(closed, \"Element <\".concat(closed.tagName, \"> is implicitly closed by parent </\").concat(by.tagName, \">\"), closed.location);\n      } else if (sameTag) {\n        this.report(closed, \"Element <\".concat(closed.tagName, \"> is implicitly closed by sibling\"), closed.location);\n      } else {\n        this.report(closed, \"Element <\".concat(closed.tagName, \"> is implicitly closed by adjacent <\").concat(by.tagName, \">\"), closed.location);\n      }\n    });\n  }\n}\nconst defaults$a = {\n  include: null,\n  exclude: null,\n  allowedProperties: [\"display\"]\n};\nfunction getCSSDeclarations(value) {\n  return value.trim().split(\";\").filter(Boolean).map(it => {\n    const [property, value] = it.split(\":\", 2);\n    return {\n      property: property.trim(),\n      value: value ? value.trim() : undefined\n    };\n  });\n}\nclass NoInlineStyle extends Rule {\n  constructor(options) {\n    super({\n      ...defaults$a,\n      ...options\n    });\n  }\n  static schema() {\n    return {\n      exclude: {\n        anyOf: [{\n          items: {\n            type: \"string\"\n          },\n          type: \"array\"\n        }, {\n          type: \"null\"\n        }]\n      },\n      include: {\n        anyOf: [{\n          items: {\n            type: \"string\"\n          },\n          type: \"array\"\n        }, {\n          type: \"null\"\n        }]\n      },\n      allowedProperties: {\n        items: {\n          type: \"string\"\n        },\n        type: \"array\"\n      }\n    };\n  }\n  documentation() {\n    const text = [\"Inline style is not allowed.\\n\", \"Inline style is a sign of unstructured CSS. Use class or ID with a separate stylesheet.\\n\"];\n    if (this.options.allowedProperties.length > 0) {\n      text.push(\"Under the current configuration the following CSS properties are allowed:\\n\");\n      text.push(this.options.allowedProperties.map(it => \"- `\".concat(it, \"`\")).join(\"\\n\"));\n    }\n    return {\n      description: text.join(\"\\n\"),\n      url: ruleDocumentationUrl(\"@/rules/no-inline-style.ts\")\n    };\n  }\n  setup() {\n    this.on(\"attr\", event => this.isRelevant(event), event => {\n      const {\n        value\n      } = event;\n      if (this.allPropertiesAllowed(value)) {\n        return;\n      }\n      this.report(event.target, \"Inline style is not allowed\");\n    });\n  }\n  isRelevant(event) {\n    if (event.key !== \"style\") {\n      return false;\n    }\n    const {\n      include,\n      exclude\n    } = this.options;\n    const key = event.originalAttribute || event.key;\n    /* ignore attributes not present in \"include\" */\n    if (include && !include.includes(key)) {\n      return false;\n    }\n    /* ignore attributes present in \"exclude\" */\n    if (exclude && exclude.includes(key)) {\n      return false;\n    }\n    return true;\n  }\n  allPropertiesAllowed(value) {\n    if (typeof value !== \"string\") {\n      return false;\n    }\n    const allowProperties = this.options.allowedProperties;\n    /* quick path: no properties are allowed, no need to check each one individually */\n    if (allowProperties.length === 0) {\n      return false;\n    }\n    const declarations = getCSSDeclarations(value);\n    return declarations.length > 0 && declarations.every(it => {\n      return allowProperties.includes(it.property);\n    });\n  }\n}\nconst ARIA = [{\n  property: \"aria-activedescendant\",\n  isList: false\n}, {\n  property: \"aria-controls\",\n  isList: true\n}, {\n  property: \"aria-describedby\",\n  isList: true\n}, {\n  property: \"aria-details\",\n  isList: false\n}, {\n  property: \"aria-errormessage\",\n  isList: false\n}, {\n  property: \"aria-flowto\",\n  isList: true\n}, {\n  property: \"aria-labelledby\",\n  isList: true\n}, {\n  property: \"aria-owns\",\n  isList: true\n}];\nfunction idMissing(document, id) {\n  const nodes = document.querySelectorAll(\"[id=\\\"\".concat(id, \"\\\"]\"));\n  return nodes.length === 0;\n}\nclass NoMissingReferences extends Rule {\n  documentation(context) {\n    if (context) {\n      return {\n        description: \"The element ID \\\"\".concat(context.value, \"\\\" referenced by the \").concat(context.key, \" attribute must point to an existing element.\"),\n        url: ruleDocumentationUrl(\"@/rules/no-missing-references.ts\")\n      };\n    } else {\n      return {\n        description: \"The element ID referenced by the attribute must point to an existing element.\",\n        url: ruleDocumentationUrl(\"@/rules/no-missing-references.ts\")\n      };\n    }\n  }\n  setup() {\n    this.on(\"dom:ready\", event => {\n      const document = event.document;\n      /* verify <label for=\"..\"> */\n      for (const node of document.querySelectorAll(\"label[for]\")) {\n        const attr = node.getAttribute(\"for\");\n        this.validateReference(document, node, attr, false);\n      }\n      /* verify <input list=\"..\"> */\n      for (const node of document.querySelectorAll(\"input[list]\")) {\n        const attr = node.getAttribute(\"list\");\n        this.validateReference(document, node, attr, false);\n      }\n      /* verify WAI-ARIA properties */\n      for (const {\n        property,\n        isList\n      } of ARIA) {\n        for (const node of document.querySelectorAll(\"[\".concat(property, \"]\"))) {\n          const attr = node.getAttribute(property);\n          this.validateReference(document, node, attr, isList);\n        }\n      }\n    });\n  }\n  validateReference(document, node, attr, isList) {\n    /* sanity check: querySelector should never return elements without the attribute */\n    /* istanbul ignore next */\n    if (!attr) {\n      return;\n    }\n    /* skip dynamic and empty values */\n    const value = attr.value;\n    if (value instanceof DynamicValue || value === null || value === \"\") {\n      return;\n    }\n    if (isList) {\n      this.validateList(document, node, attr, value);\n    } else {\n      this.validateSingle(document, node, attr, value);\n    }\n  }\n  validateSingle(document, node, attr, id) {\n    if (idMissing(document, id)) {\n      const context = {\n        key: attr.key,\n        value: id\n      };\n      this.report(node, \"Element references missing id \\\"\".concat(id, \"\\\"\"), attr.valueLocation, context);\n    }\n  }\n  validateList(document, node, attr, values) {\n    const parsed = new DOMTokenList(values, attr.valueLocation);\n    for (const entry of parsed.iterator()) {\n      const id = entry.item;\n      if (idMissing(document, id)) {\n        const context = {\n          key: attr.key,\n          value: id\n        };\n        this.report(node, \"Element references missing id \\\"\".concat(id, \"\\\"\"), entry.location, context);\n      }\n    }\n  }\n}\nclass NoMultipleMain extends Rule {\n  documentation() {\n    return {\n      description: [\"Only a single visible `<main>` element can be present at in a document at a time.\", \"\", \"Multiple `<main>` can be present in the DOM as long the others are hidden using the HTML5 `hidden` attribute.\"].join(\"\\n\"),\n      url: ruleDocumentationUrl(\"@/rules/no-multiple-main.ts\")\n    };\n  }\n  setup() {\n    this.on(\"dom:ready\", event => {\n      const {\n        document\n      } = event;\n      const main = document.querySelectorAll(\"main\").filter(cur => !cur.hasAttribute(\"hidden\"));\n      main.shift(); /* ignore the first occurrence */\n      /* report all other occurrences */\n      for (const elem of main) {\n        this.report(elem, \"Multiple <main> elements present in document\");\n      }\n    });\n  }\n}\nconst defaults$9 = {\n  relaxed: false\n};\nconst textRegexp = /([<>]|&(?![a-zA-Z0-9#]+;))/g;\nconst unquotedAttrRegexp = /([<>\"'=`]|&(?![a-zA-Z0-9#]+;))/g;\nconst matchTemplate = /^(<%.*?%>|<\\?.*?\\?>|<\\$.*?\\$>)$/s;\nconst replacementTable = new Map([['\"', \"&quot;\"], [\"&\", \"&amp;\"], [\"'\", \"&apos;\"], [\"<\", \"&lt;\"], [\"=\", \"&equals;\"], [\">\", \"&gt;\"], [\"`\", \"&grave;\"]]);\nclass NoRawCharacters extends Rule {\n  constructor(options) {\n    super({\n      ...defaults$9,\n      ...options\n    });\n    this.relaxed = this.options.relaxed;\n  }\n  static schema() {\n    return {\n      relaxed: {\n        type: \"boolean\"\n      }\n    };\n  }\n  documentation() {\n    return {\n      description: \"Some characters such as `<`, `>` and `&` hold special meaning in HTML and must be escaped using a character reference (html entity).\",\n      url: ruleDocumentationUrl(\"@/rules/no-raw-characters.ts\")\n    };\n  }\n  setup() {\n    this.on(\"element:ready\", event => {\n      const node = event.target;\n      /* only iterate over direct descendants */\n      for (const child of node.childNodes) {\n        if (child.nodeType !== NodeType.TEXT_NODE) {\n          continue;\n        }\n        /* workaround for templating <% ... %> etc */\n        if (child.textContent.match(matchTemplate)) {\n          continue;\n        }\n        this.findRawChars(node, child.textContent, child.location, textRegexp);\n      }\n    });\n    this.on(\"attr\", event => {\n      /* boolean attributes has no value so nothing to validate */\n      if (!event.value) {\n        return;\n      }\n      /* quoted attribute values can contain most symbols except the quotemark\n       * itself but unescaped quotemarks would cause a parsing error */\n      if (event.quote) {\n        return;\n      }\n      this.findRawChars(event.target, event.value.toString(), event.valueLocation, unquotedAttrRegexp);\n    });\n  }\n  /**\n   * Find raw special characters and report as errors.\n   *\n   * @param text - The full text to find unescaped raw characters in.\n   * @param location - Location of text.\n   * @param regexp - Regexp pattern to match using.\n   * @param ignore - List of characters to ignore for this text.\n   */\n  findRawChars(node, text, location, regexp) {\n    let match;\n    do {\n      match = regexp.exec(text);\n      if (match) {\n        const char = match[0];\n        /* In relaxed mode & only needs to be encoded if it is ambiguous,\n         * however this rule will only match either non-ambiguous ampersands or\n         * ampersands part of a character reference. Whenever it is a valid\n         * character reference or not not checked by this rule */\n        if (this.relaxed && char === \"&\") {\n          continue;\n        }\n        /* determine replacement character and location */\n        const replacement = replacementTable.get(char);\n        const charLocation = sliceLocation(location, match.index, match.index + 1);\n        /* report as error */\n        this.report(node, \"Raw \\\"\".concat(char, \"\\\" must be encoded as \\\"\").concat(replacement, \"\\\"\"), charLocation);\n      }\n    } while (match);\n  }\n}\nclass NoRedundantFor extends Rule {\n  documentation() {\n    return {\n      description: \"When the `<label>` element wraps the labelable control the `for` attribute is redundant and better left out.\",\n      url: ruleDocumentationUrl(\"@/rules/no-redundant-for.ts\")\n    };\n  }\n  setup() {\n    this.on(\"element:ready\", event => {\n      const {\n        target\n      } = event;\n      /* only handle <label> */\n      if (target.tagName !== \"label\") {\n        return;\n      }\n      /* ignore label without for or dynamic value */\n      const attr = target.getAttribute(\"for\");\n      if (!attr || attr.isDynamic) {\n        return;\n      }\n      /* ignore omitted/empty values */\n      const id = attr.value;\n      if (!id) {\n        return;\n      }\n      /* try to find labeled control */\n      const escaped = escapeSelectorComponent(id);\n      const control = target.querySelector(\"[id=\\\"\".concat(escaped, \"\\\"]\"));\n      if (!control) {\n        return;\n      }\n      this.report(target, 'Redundant \"for\" attribute', attr.keyLocation);\n    });\n  }\n}\nconst mapping = {\n  article: [\"article\"],\n  header: [\"banner\"],\n  button: [\"button\"],\n  td: [\"cell\"],\n  input: [\"checkbox\", \"radio\", \"input\"],\n  aside: [\"complementary\"],\n  footer: [\"contentinfo\"],\n  figure: [\"figure\"],\n  form: [\"form\"],\n  h1: [\"heading\"],\n  h2: [\"heading\"],\n  h3: [\"heading\"],\n  h4: [\"heading\"],\n  h5: [\"heading\"],\n  h6: [\"heading\"],\n  a: [\"link\"],\n  ul: [\"list\"],\n  select: [\"listbox\"],\n  li: [\"listitem\"],\n  main: [\"main\"],\n  nav: [\"navigation\"],\n  progress: [\"progressbar\"],\n  section: [\"region\"],\n  table: [\"table\"],\n  textarea: [\"textbox\"]\n};\nclass NoRedundantRole extends Rule {\n  documentation(context) {\n    const doc = {\n      description: \"Using this role is redundant as it is already implied by the element.\",\n      url: ruleDocumentationUrl(\"@/rules/no-redundant-role.ts\")\n    };\n    if (context) {\n      doc.description = \"Using the \\\"\".concat(context.role, \"\\\" role is redundant as it is already implied by the <\").concat(context.tagname, \"> element.\");\n    }\n    return doc;\n  }\n  setup() {\n    this.on(\"attr\", event => {\n      const {\n        target\n      } = event;\n      /* ignore non-role attributes */\n      if (event.key.toLowerCase() !== \"role\") {\n        return;\n      }\n      /* ignore missing and dynamic values */\n      if (!event.value || event.value instanceof DynamicValue) {\n        return;\n      }\n      /* ignore elements without known redundant roles */\n      const redundant = mapping[target.tagName];\n      if (!redundant) {\n        return;\n      }\n      /* ignore elements with non-redundant roles */\n      if (!redundant.includes(event.value)) {\n        return;\n      }\n      /* report error */\n      const context = {\n        tagname: target.tagName,\n        role: event.value\n      };\n      this.report(event.target, \"Redundant role \\\"\".concat(event.value, \"\\\" on <\").concat(target.tagName, \">\"), event.valueLocation, context);\n    });\n  }\n}\nconst xmlns = /^(.+):.+$/;\nconst defaults$8 = {\n  ignoreForeign: true,\n  ignoreXML: true\n};\nclass NoSelfClosing extends Rule {\n  constructor(options) {\n    super({\n      ...defaults$8,\n      ...options\n    });\n  }\n  static schema() {\n    return {\n      ignoreForeign: {\n        type: \"boolean\"\n      },\n      ignoreXML: {\n        type: \"boolean\"\n      }\n    };\n  }\n  documentation(tagName) {\n    tagName = tagName || \"element\";\n    return {\n      description: \"Self-closing elements are disallowed. Use regular end tag <\".concat(tagName, \"></\").concat(tagName, \"> instead of self-closing <\").concat(tagName, \"/>.\"),\n      url: ruleDocumentationUrl(\"@/rules/no-self-closing.ts\")\n    };\n  }\n  setup() {\n    this.on(\"tag:end\", event => {\n      const active = event.previous; // The current active element (that is, the current element on the stack)\n      if (!isRelevant(active, this.options)) {\n        return;\n      }\n      this.validateElement(active);\n    });\n  }\n  validateElement(node) {\n    if (node.closed !== exports.NodeClosed.VoidSelfClosed) {\n      return;\n    }\n    this.report(node, \"<\".concat(node.tagName, \"> must not be self-closed\"), null, node.tagName);\n  }\n}\nfunction isRelevant(node, options) {\n  /* tags in XML namespaces are relevant only if ignoreXml is false, in which\n   * case assume all xml elements must not be self-closed */\n  if (node.tagName && node.tagName.match(xmlns)) {\n    return !options.ignoreXML;\n  }\n  /* nodes with missing metadata is assumed relevant */\n  if (!node.meta) {\n    return true;\n  }\n  if (node.meta.void) {\n    return false;\n  }\n  /* foreign elements are relevant only if ignoreForeign is false, in which case\n   * assume all foreign must not be self-closed */\n  if (node.meta.foreign) {\n    return !options.ignoreForeign;\n  }\n  return true;\n}\nclass NoStyleTag extends Rule {\n  documentation() {\n    return {\n      description: \"Prefer to use external stylesheets with the `<link>` tag instead of inlining the styling.\",\n      url: ruleDocumentationUrl(\"@/rules/no-style-tag.ts\")\n    };\n  }\n  setup() {\n    this.on(\"tag:start\", event => {\n      const node = event.target;\n      if (node.tagName === \"style\") {\n        this.report(node, \"Use external stylesheet with <link> instead of <style> tag\");\n      }\n    });\n  }\n}\nclass NoTrailingWhitespace extends Rule {\n  documentation() {\n    return {\n      description: \"Lines with trailing whitespace cause unnessecary diff when using version control and usually serve no special purpose in HTML.\",\n      url: ruleDocumentationUrl(\"@/rules/no-trailing-whitespace.ts\")\n    };\n  }\n  setup() {\n    this.on(\"whitespace\", event => {\n      if (event.text.match(/^[ \\t]+\\r?\\n$/)) {\n        this.report(null, \"Trailing whitespace\", event.location);\n      }\n    });\n  }\n}\nclass NoUnknownElements extends Rule {\n  documentation(context) {\n    const element = context ? \" <\".concat(context, \">\") : \"\";\n    return {\n      description: \"An unknown element\".concat(element, \" was used. If this is a Custom Element you need to supply element metadata for it.\"),\n      url: ruleDocumentationUrl(\"@/rules/no-unknown-elements.ts\")\n    };\n  }\n  setup() {\n    this.on(\"tag:start\", event => {\n      const node = event.target;\n      if (!node.meta) {\n        this.report(node, \"Unknown element <\".concat(node.tagName, \">\"), null, node.tagName);\n      }\n    });\n  }\n}\nclass NoUtf8Bom extends Rule {\n  documentation() {\n    return {\n      description: \"This file is saved with the UTF-8 byte order mark (BOM) present. It is neither required or recommended to use.\\n\\nInstead the document should be served with the `Content-Type: application/javascript; charset=utf-8` header.\",\n      url: ruleDocumentationUrl(\"@/rules/no-utf8-bom.ts\")\n    };\n  }\n  setup() {\n    const unregister = this.on(\"token\", event => {\n      if (event.type === exports.TokenType.UNICODE_BOM) {\n        this.report(null, \"File should be saved without UTF-8 BOM\", event.location);\n      }\n      /* since the BOM must be the very first thing the rule can now be disabled for the rest of the run */\n      this.setEnabled(false);\n      unregister();\n    });\n  }\n}\nconst types = [\"button\", \"submit\", \"reset\", \"image\"];\nconst replacement = {\n  button: '<button type=\"button\">',\n  submit: '<button type=\"submit\">',\n  reset: '<button type=\"reset\">',\n  image: '<button type=\"button\">'\n};\nconst defaults$7 = {\n  include: null,\n  exclude: null\n};\nclass PreferButton extends Rule {\n  constructor(options) {\n    super({\n      ...defaults$7,\n      ...options\n    });\n  }\n  static schema() {\n    return {\n      exclude: {\n        anyOf: [{\n          items: {\n            type: \"string\"\n          },\n          type: \"array\"\n        }, {\n          type: \"null\"\n        }]\n      },\n      include: {\n        anyOf: [{\n          items: {\n            type: \"string\"\n          },\n          type: \"array\"\n        }, {\n          type: \"null\"\n        }]\n      }\n    };\n  }\n  documentation(context) {\n    const doc = {\n      description: \"Prefer to use the generic `<button>` element instead of `<input>`.\",\n      url: ruleDocumentationUrl(\"@/rules/prefer-button.ts\")\n    };\n    if (context) {\n      const src = \"<input type=\\\"\".concat(context.type, \"\\\">\");\n      const dst = replacement[context.type] || \"<button>\";\n      doc.description = \"Prefer to use `\".concat(dst, \"` instead of `\\\"\").concat(src, \"`.\");\n    }\n    return doc;\n  }\n  setup() {\n    this.on(\"attr\", event => {\n      const node = event.target;\n      /* only handle input elements */\n      if (node.tagName.toLowerCase() !== \"input\") {\n        return;\n      }\n      /* only handle type attribute */\n      if (event.key.toLowerCase() !== \"type\") {\n        return;\n      }\n      /* sanity check: handle missing, boolean and dynamic attributes */\n      if (!event.value || event.value instanceof DynamicValue) {\n        return;\n      }\n      /* ignore types configured to be ignored */\n      const type = event.value.toLowerCase();\n      if (this.isKeywordIgnored(type)) {\n        return;\n      }\n      /* only values matching known type triggers error */\n      if (!types.includes(type)) {\n        return;\n      }\n      const context = {\n        type: type\n      };\n      const message = \"Prefer to use <button> instead of <input type=\\\"\".concat(type, \"\\\"> when adding buttons\");\n      this.report(node, message, event.valueLocation, context);\n    });\n  }\n}\nconst defaults$6 = {\n  mapping: {\n    article: \"article\",\n    banner: \"header\",\n    button: \"button\",\n    cell: \"td\",\n    checkbox: \"input\",\n    complementary: \"aside\",\n    contentinfo: \"footer\",\n    figure: \"figure\",\n    form: \"form\",\n    heading: \"hN\",\n    input: \"input\",\n    link: \"a\",\n    list: \"ul\",\n    listbox: \"select\",\n    listitem: \"li\",\n    main: \"main\",\n    navigation: \"nav\",\n    progressbar: \"progress\",\n    radio: \"input\",\n    region: \"section\",\n    table: \"table\",\n    textbox: \"textarea\"\n  },\n  include: null,\n  exclude: null\n};\nclass PreferNativeElement extends Rule {\n  constructor(options) {\n    super({\n      ...defaults$6,\n      ...options\n    });\n  }\n  static schema() {\n    return {\n      exclude: {\n        anyOf: [{\n          items: {\n            type: \"string\"\n          },\n          type: \"array\"\n        }, {\n          type: \"null\"\n        }]\n      },\n      include: {\n        anyOf: [{\n          items: {\n            type: \"string\"\n          },\n          type: \"array\"\n        }, {\n          type: \"null\"\n        }]\n      },\n      mapping: {\n        type: \"object\"\n      }\n    };\n  }\n  documentation(context) {\n    const doc = {\n      description: \"Instead of using WAI-ARIA roles prefer to use the native HTML elements.\",\n      url: ruleDocumentationUrl(\"@/rules/prefer-native-element.ts\")\n    };\n    if (context) {\n      doc.description = \"Instead of using the WAI-ARIA role \\\"\".concat(context.role, \"\\\" prefer to use the native <\").concat(context.replacement, \"> element.\");\n    }\n    return doc;\n  }\n  setup() {\n    const {\n      mapping\n    } = this.options;\n    this.on(\"attr\", event => {\n      /* ignore non-role attributes */\n      if (event.key.toLowerCase() !== \"role\") {\n        return;\n      }\n      /* ignore missing and dynamic values */\n      if (!event.value || event.value instanceof DynamicValue) {\n        return;\n      }\n      /* ignore roles configured to be ignored */\n      const role = event.value.toLowerCase();\n      if (this.isIgnored(role)) {\n        return;\n      }\n      /* dont report when the element is already of the right type but has a\n       * redundant role, such as <main role=\"main\"> */\n      const replacement = mapping[role];\n      if (event.target.is(replacement)) {\n        return;\n      }\n      /* report error */\n      const context = {\n        role,\n        replacement\n      };\n      const location = this.getLocation(event);\n      this.report(event.target, \"Prefer to use the native <\".concat(replacement, \"> element\"), location, context);\n    });\n  }\n  isIgnored(role) {\n    const {\n      mapping\n    } = this.options;\n    /* ignore roles not mapped to native elements */\n    const replacement = mapping[role];\n    if (!replacement) {\n      return true;\n    }\n    return this.isKeywordIgnored(role);\n  }\n  getLocation(event) {\n    const begin = event.location;\n    const end = event.valueLocation;\n    const quote = event.quote ? 1 : 0;\n    const size = end.offset + end.size - begin.offset + quote;\n    return {\n      filename: begin.filename,\n      line: begin.line,\n      column: begin.column,\n      offset: begin.offset,\n      size\n    };\n  }\n}\nclass PreferTbody extends Rule {\n  documentation() {\n    return {\n      description: \"While `<tbody>` is optional is relays semantic information about its contents. Where applicable it should also be combined with `<thead>` and `<tfoot>`.\",\n      url: ruleDocumentationUrl(\"@/rules/prefer-tbody.ts\")\n    };\n  }\n  setup() {\n    this.on(\"dom:ready\", event => {\n      const doc = event.document;\n      for (const table of doc.querySelectorAll(\"table\")) {\n        if (table.querySelector(\"> tbody\")) {\n          continue;\n        }\n        const tr = table.querySelectorAll(\"> tr\");\n        if (tr.length >= 1) {\n          this.report(tr[0], \"Prefer to wrap <tr> elements in <tbody>\");\n        }\n      }\n    });\n  }\n}\nconst defaults$5 = {\n  target: \"all\"\n};\nconst crossorigin = new RegExp(\"^(\\\\w+://|//)\"); /* e.g. https:// or // */\nconst supportSri = {\n  link: \"href\",\n  script: \"src\"\n};\nclass RequireSri extends Rule {\n  constructor(options) {\n    super({\n      ...defaults$5,\n      ...options\n    });\n    this.target = this.options.target;\n  }\n  static schema() {\n    return {\n      target: {\n        enum: [\"all\", \"crossorigin\"],\n        type: \"string\"\n      }\n    };\n  }\n  documentation() {\n    return {\n      description: \"Subresource Integrity (SRI) `integrity` attribute is required to prevent manipulation from Content Delivery Networks or other third-party hosting.\",\n      url: ruleDocumentationUrl(\"@/rules/require-sri.ts\")\n    };\n  }\n  setup() {\n    this.on(\"tag:end\", event => {\n      /* only handle thats supporting and requires sri */\n      const node = event.previous;\n      if (!(this.supportSri(node) && this.needSri(node))) return;\n      /* check if sri attribute is present */\n      if (node.hasAttribute(\"integrity\")) return;\n      this.report(node, \"SRI \\\"integrity\\\" attribute is required on <\".concat(node.tagName, \"> element\"), node.location);\n    });\n  }\n  supportSri(node) {\n    return Object.keys(supportSri).includes(node.tagName);\n  }\n  needSri(node) {\n    if (this.target === \"all\") return true;\n    const attr = this.elementSourceAttr(node);\n    if (!attr || attr.value === null || attr.isDynamic) {\n      return false;\n    }\n    const url = attr.value.toString();\n    return crossorigin.test(url);\n  }\n  elementSourceAttr(node) {\n    const key = supportSri[node.tagName];\n    return node.getAttribute(key);\n  }\n}\nclass ScriptElement extends Rule {\n  documentation() {\n    return {\n      description: \"The end tag for `<script>` is a hard requirement and must never be omitted even when using the `src` attribute.\",\n      url: ruleDocumentationUrl(\"@/rules/script-element.ts\")\n    };\n  }\n  setup() {\n    this.on(\"tag:end\", event => {\n      const node = event.target; // The current element being closed.\n      if (!node || node.tagName !== \"script\") {\n        return;\n      }\n      if (node.closed !== exports.NodeClosed.EndTag) {\n        this.report(node, \"End tag for <\".concat(node.tagName, \"> must not be omitted\"));\n      }\n    });\n  }\n}\nconst javascript = [\"\", \"application/ecmascript\", \"application/javascript\", \"text/ecmascript\", \"text/javascript\"];\nclass ScriptType extends Rule {\n  documentation() {\n    return {\n      description: \"While valid the HTML5 standard encourages authors to omit the type element for JavaScript resources.\",\n      url: ruleDocumentationUrl(\"@/rules/script-type.ts\")\n    };\n  }\n  setup() {\n    this.on(\"tag:end\", event => {\n      const node = event.previous;\n      if (!node || node.tagName !== \"script\") {\n        return;\n      }\n      const attr = node.getAttribute(\"type\");\n      if (!attr || attr.isDynamic) {\n        return;\n      }\n      const value = attr.value ? attr.value.toString() : \"\";\n      if (!this.isJavascript(value)) {\n        return;\n      }\n      this.report(node, '\"type\" attribute is unnecessary for javascript resources', attr.keyLocation);\n    });\n  }\n  isJavascript(mime) {\n    /* remove mime parameters, e.g. \";charset=utf-8\" */\n    const type = mime.replace(/;.*/, \"\");\n    return javascript.includes(type);\n  }\n}\nclass SvgFocusable extends Rule {\n  documentation() {\n    return {\n      description: \"Inline SVG elements in IE are focusable by default which may cause issues with tab-ordering. The `focusable` attribute should explicitly be set to avoid unintended behaviour.\",\n      url: ruleDocumentationUrl(\"@/rules/svg-focusable.ts\")\n    };\n  }\n  setup() {\n    this.on(\"element:ready\", event => {\n      if (event.target.is(\"svg\")) {\n        this.validate(event.target);\n      }\n    });\n  }\n  validate(svg) {\n    if (svg.hasAttribute(\"focusable\")) {\n      return;\n    }\n    this.report(svg, \"<\".concat(svg.tagName, \"> is missing required \\\"focusable\\\" attribute\"));\n  }\n}\nfunction hasAltText(image) {\n  const alt = image.getAttribute(\"alt\");\n  /* missing or boolean */\n  if (alt === null || alt.value === null) {\n    return false;\n  }\n  return alt.isDynamic || alt.value.toString() !== \"\";\n}\nfunction hasAriaLabel(node) {\n  const label = node.getAttribute(\"aria-label\");\n  /* missing or boolean */\n  if (label === null || label.value === null) {\n    return false;\n  }\n  return label.isDynamic || label.value.toString() !== \"\";\n}\n\n/**\n * Check if attribute is present and non-empty or dynamic.\n */\nfunction hasNonEmptyAttribute(node, key) {\n  const attr = node.getAttribute(key);\n  return Boolean(attr && attr.valueMatches(/.+/, true));\n}\n/**\n * Check if element has default text.\n *\n * Only <input type=\"submit\"> and <input type=\"reset\"> at the moment.\n */\nfunction hasDefaultText(node) {\n  /* only input element have default text */\n  if (!node.is(\"input\")) {\n    return false;\n  }\n  /* default text is not available if value attribute is present */\n  if (node.hasAttribute(\"value\")) {\n    return false;\n  }\n  /* default text is only present when type is submit or reset */\n  const type = node.getAttribute(\"type\");\n  return Boolean(type && type.valueMatches(/submit|reset/, false));\n}\nfunction isNonEmptyText(node) {\n  if (isTextNode(node)) {\n    return node.isDynamic || node.textContent.trim() !== \"\";\n  } else {\n    return false;\n  }\n}\n/**\n * Walk nodes (depth-first, preorder) searching for accessible text. Children\n * hidden from accessibility tree are ignored.\n *\n * For each node the current conditions satisfies as accessible text:\n *\n * - Non-empty or dynamic `aria-label`\n * - Non-empty or dynamic `aria-labelledby` (reference not validated, use [[no-missing-references]]\n * - Image with non-empty or dynamic `alt` text\n * - Elements with default text\n */\nfunction haveAccessibleText(node) {\n  if (!inAccessibilityTree(node)) {\n    return false;\n  }\n  /* check direct descendants for non-empty or dynamic text */\n  const haveText = node.childNodes.some(child => isNonEmptyText(child));\n  if (haveText) {\n    return true;\n  }\n  if (hasNonEmptyAttribute(node, \"aria-label\")) {\n    return true;\n  }\n  if (hasNonEmptyAttribute(node, \"aria-labelledby\")) {\n    return true;\n  }\n  if (node.is(\"img\") && hasNonEmptyAttribute(node, \"alt\")) {\n    return true;\n  }\n  if (hasDefaultText(node)) {\n    return true;\n  }\n  return node.childElements.some(child => {\n    return haveAccessibleText(child);\n  });\n}\nclass TextContent extends Rule {\n  documentation(context) {\n    const doc = {\n      description: \"The textual content for this element is not valid.\",\n      url: ruleDocumentationUrl(\"@/rules/text-content.ts\")\n    };\n    if (context === null || context === void 0 ? void 0 : context.textContent) {\n      switch (context.textContent) {\n        case TextContent$1.NONE:\n          doc.description = \"The `<\".concat(context.tagName, \">` element must not have textual content.\");\n          break;\n        case TextContent$1.REQUIRED:\n          doc.description = \"The `<\".concat(context.tagName, \">` element must have textual content.\");\n          break;\n        case TextContent$1.ACCESSIBLE:\n          doc.description = \"The `<\".concat(context.tagName, \">` element must have accessible text.\");\n          break;\n      }\n    }\n    return doc;\n  }\n  static filter(event) {\n    const {\n      target\n    } = event;\n    /* skip elements without metadata */\n    if (!target.meta) {\n      return false;\n    }\n    /* skip elements without explicit and default textContent */\n    const {\n      textContent\n    } = target.meta;\n    if (!textContent || textContent === TextContent$1.DEFAULT) {\n      return false;\n    }\n    return true;\n  }\n  setup() {\n    this.on(\"element:ready\", TextContent.filter, event => {\n      const target = event.target;\n      const {\n        textContent\n      } = target.meta;\n      switch (textContent) {\n        case TextContent$1.NONE:\n          this.validateNone(target);\n          break;\n        case TextContent$1.REQUIRED:\n          this.validateRequired(target);\n          break;\n        case TextContent$1.ACCESSIBLE:\n          this.validateAccessible(target);\n          break;\n      }\n    });\n  }\n  /**\n   * Validate element has empty text (inter-element whitespace is not considered text)\n   */\n  validateNone(node) {\n    if (classifyNodeText(node) === TextClassification.EMPTY_TEXT) {\n      return;\n    }\n    this.reportError(node, node.meta, \"\".concat(node.annotatedName, \" must not have text content\"));\n  }\n  /**\n   * Validate element has any text (inter-element whitespace is not considered text)\n   */\n  validateRequired(node) {\n    if (classifyNodeText(node) !== TextClassification.EMPTY_TEXT) {\n      return;\n    }\n    this.reportError(node, node.meta, \"\".concat(node.annotatedName, \" must have text content\"));\n  }\n  /**\n   * Validate element has accessible text (either regular text or text only\n   * exposed in accessibility tree via aria-label or similar)\n   */\n  validateAccessible(node) {\n    /* skip this element if the element isn't present in accessibility tree */\n    if (!inAccessibilityTree(node)) {\n      return;\n    }\n    /* if the element or a child has aria-label, alt or default text, etc the\n     * element has accessible text */\n    if (haveAccessibleText(node)) {\n      return;\n    }\n    this.reportError(node, node.meta, \"\".concat(node.annotatedName, \" must have accessible text\"));\n  }\n  reportError(node, meta, message) {\n    this.report(node, message, null, {\n      tagName: node.tagName,\n      textContent: meta.textContent\n    });\n  }\n}\nvar entities$1 = [\"&aacute;\", \"&abreve;\", \"&ac;\", \"&acd;\", \"&ace;\", \"&acirc;\", \"&acute;\", \"&acy;\", \"&aelig;\", \"&af;\", \"&afr;\", \"&agrave;\", \"&alefsym;\", \"&aleph;\", \"&alpha;\", \"&amacr;\", \"&amalg;\", \"&amp;\", \"&and;\", \"&andand;\", \"&andd;\", \"&andslope;\", \"&andv;\", \"&ang;\", \"&ange;\", \"&angle;\", \"&angmsd;\", \"&angmsdaa;\", \"&angmsdab;\", \"&angmsdac;\", \"&angmsdad;\", \"&angmsdae;\", \"&angmsdaf;\", \"&angmsdag;\", \"&angmsdah;\", \"&angrt;\", \"&angrtvb;\", \"&angrtvbd;\", \"&angsph;\", \"&angst;\", \"&angzarr;\", \"&aogon;\", \"&aopf;\", \"&ap;\", \"&apacir;\", \"&ape;\", \"&apid;\", \"&apos;\", \"&applyfunction;\", \"&approx;\", \"&approxeq;\", \"&aring;\", \"&ascr;\", \"&assign;\", \"&ast;\", \"&asymp;\", \"&asympeq;\", \"&atilde;\", \"&auml;\", \"&awconint;\", \"&awint;\", \"&backcong;\", \"&backepsilon;\", \"&backprime;\", \"&backsim;\", \"&backsimeq;\", \"&backslash;\", \"&barv;\", \"&barvee;\", \"&barwed;\", \"&barwedge;\", \"&bbrk;\", \"&bbrktbrk;\", \"&bcong;\", \"&bcy;\", \"&bdquo;\", \"&becaus;\", \"&because;\", \"&bemptyv;\", \"&bepsi;\", \"&bernou;\", \"&bernoullis;\", \"&beta;\", \"&beth;\", \"&between;\", \"&bfr;\", \"&bigcap;\", \"&bigcirc;\", \"&bigcup;\", \"&bigodot;\", \"&bigoplus;\", \"&bigotimes;\", \"&bigsqcup;\", \"&bigstar;\", \"&bigtriangledown;\", \"&bigtriangleup;\", \"&biguplus;\", \"&bigvee;\", \"&bigwedge;\", \"&bkarow;\", \"&blacklozenge;\", \"&blacksquare;\", \"&blacktriangle;\", \"&blacktriangledown;\", \"&blacktriangleleft;\", \"&blacktriangleright;\", \"&blank;\", \"&blk12;\", \"&blk14;\", \"&blk34;\", \"&block;\", \"&bne;\", \"&bnequiv;\", \"&bnot;\", \"&bopf;\", \"&bot;\", \"&bottom;\", \"&bowtie;\", \"&boxbox;\", \"&boxdl;\", \"&boxdr;\", \"&boxh;\", \"&boxhd;\", \"&boxhu;\", \"&boxminus;\", \"&boxplus;\", \"&boxtimes;\", \"&boxul;\", \"&boxur;\", \"&boxv;\", \"&boxvh;\", \"&boxvl;\", \"&boxvr;\", \"&bprime;\", \"&breve;\", \"&brvbar;\", \"&bscr;\", \"&bsemi;\", \"&bsim;\", \"&bsime;\", \"&bsol;\", \"&bsolb;\", \"&bsolhsub;\", \"&bull;\", \"&bullet;\", \"&bump;\", \"&bumpe;\", \"&bumpeq;\", \"&cacute;\", \"&cap;\", \"&capand;\", \"&capbrcup;\", \"&capcap;\", \"&capcup;\", \"&capdot;\", \"&capitaldifferentiald;\", \"&caps;\", \"&caret;\", \"&caron;\", \"&cayleys;\", \"&ccaps;\", \"&ccaron;\", \"&ccedil;\", \"&ccirc;\", \"&cconint;\", \"&ccups;\", \"&ccupssm;\", \"&cdot;\", \"&cedil;\", \"&cedilla;\", \"&cemptyv;\", \"&cent;\", \"&centerdot;\", \"&cfr;\", \"&chcy;\", \"&check;\", \"&checkmark;\", \"&chi;\", \"&cir;\", \"&circ;\", \"&circeq;\", \"&circlearrowleft;\", \"&circlearrowright;\", \"&circledast;\", \"&circledcirc;\", \"&circleddash;\", \"&circledot;\", \"&circledr;\", \"&circleds;\", \"&circleminus;\", \"&circleplus;\", \"&circletimes;\", \"&cire;\", \"&cirfnint;\", \"&cirmid;\", \"&cirscir;\", \"&clockwisecontourintegral;\", \"&closecurlydoublequote;\", \"&closecurlyquote;\", \"&clubs;\", \"&clubsuit;\", \"&colon;\", \"&colone;\", \"&coloneq;\", \"&comma;\", \"&commat;\", \"&comp;\", \"&compfn;\", \"&complement;\", \"&complexes;\", \"&cong;\", \"&congdot;\", \"&congruent;\", \"&conint;\", \"&contourintegral;\", \"&copf;\", \"&coprod;\", \"&coproduct;\", \"&copy;\", \"&copysr;\", \"&counterclockwisecontourintegral;\", \"&crarr;\", \"&cross;\", \"&cscr;\", \"&csub;\", \"&csube;\", \"&csup;\", \"&csupe;\", \"&ctdot;\", \"&cudarrl;\", \"&cudarrr;\", \"&cuepr;\", \"&cuesc;\", \"&cularr;\", \"&cularrp;\", \"&cup;\", \"&cupbrcap;\", \"&cupcap;\", \"&cupcup;\", \"&cupdot;\", \"&cupor;\", \"&cups;\", \"&curarr;\", \"&curarrm;\", \"&curlyeqprec;\", \"&curlyeqsucc;\", \"&curlyvee;\", \"&curlywedge;\", \"&curren;\", \"&curvearrowleft;\", \"&curvearrowright;\", \"&cuvee;\", \"&cuwed;\", \"&cwconint;\", \"&cwint;\", \"&cylcty;\", \"&dagger;\", \"&daleth;\", \"&darr;\", \"&dash;\", \"&dashv;\", \"&dbkarow;\", \"&dblac;\", \"&dcaron;\", \"&dcy;\", \"&dd;\", \"&ddagger;\", \"&ddarr;\", \"&ddotrahd;\", \"&ddotseq;\", \"&deg;\", \"&del;\", \"&delta;\", \"&demptyv;\", \"&dfisht;\", \"&dfr;\", \"&dhar;\", \"&dharl;\", \"&dharr;\", \"&diacriticalacute;\", \"&diacriticaldot;\", \"&diacriticaldoubleacute;\", \"&diacriticalgrave;\", \"&diacriticaltilde;\", \"&diam;\", \"&diamond;\", \"&diamondsuit;\", \"&diams;\", \"&die;\", \"&differentiald;\", \"&digamma;\", \"&disin;\", \"&div;\", \"&divide;\", \"&divideontimes;\", \"&divonx;\", \"&djcy;\", \"&dlcorn;\", \"&dlcrop;\", \"&dollar;\", \"&dopf;\", \"&dot;\", \"&dotdot;\", \"&doteq;\", \"&doteqdot;\", \"&dotequal;\", \"&dotminus;\", \"&dotplus;\", \"&dotsquare;\", \"&doublebarwedge;\", \"&doublecontourintegral;\", \"&doubledot;\", \"&doubledownarrow;\", \"&doubleleftarrow;\", \"&doubleleftrightarrow;\", \"&doublelefttee;\", \"&doublelongleftarrow;\", \"&doublelongleftrightarrow;\", \"&doublelongrightarrow;\", \"&doublerightarrow;\", \"&doublerighttee;\", \"&doubleuparrow;\", \"&doubleupdownarrow;\", \"&doubleverticalbar;\", \"&downarrow;\", \"&downarrowbar;\", \"&downarrowuparrow;\", \"&downbreve;\", \"&downdownarrows;\", \"&downharpoonleft;\", \"&downharpoonright;\", \"&downleftrightvector;\", \"&downleftteevector;\", \"&downleftvector;\", \"&downleftvectorbar;\", \"&downrightteevector;\", \"&downrightvector;\", \"&downrightvectorbar;\", \"&downtee;\", \"&downteearrow;\", \"&drbkarow;\", \"&drcorn;\", \"&drcrop;\", \"&dscr;\", \"&dscy;\", \"&dsol;\", \"&dstrok;\", \"&dtdot;\", \"&dtri;\", \"&dtrif;\", \"&duarr;\", \"&duhar;\", \"&dwangle;\", \"&dzcy;\", \"&dzigrarr;\", \"&eacute;\", \"&easter;\", \"&ecaron;\", \"&ecir;\", \"&ecirc;\", \"&ecolon;\", \"&ecy;\", \"&eddot;\", \"&edot;\", \"&ee;\", \"&efdot;\", \"&efr;\", \"&eg;\", \"&egrave;\", \"&egs;\", \"&egsdot;\", \"&el;\", \"&element;\", \"&elinters;\", \"&ell;\", \"&els;\", \"&elsdot;\", \"&emacr;\", \"&empty;\", \"&emptyset;\", \"&emptysmallsquare;\", \"&emptyv;\", \"&emptyverysmallsquare;\", \"&emsp13;\", \"&emsp14;\", \"&emsp;\", \"&eng;\", \"&ensp;\", \"&eogon;\", \"&eopf;\", \"&epar;\", \"&eparsl;\", \"&eplus;\", \"&epsi;\", \"&epsilon;\", \"&epsiv;\", \"&eqcirc;\", \"&eqcolon;\", \"&eqsim;\", \"&eqslantgtr;\", \"&eqslantless;\", \"&equal;\", \"&equals;\", \"&equaltilde;\", \"&equest;\", \"&equilibrium;\", \"&equiv;\", \"&equivdd;\", \"&eqvparsl;\", \"&erarr;\", \"&erdot;\", \"&escr;\", \"&esdot;\", \"&esim;\", \"&eta;\", \"&eth;\", \"&euml;\", \"&euro;\", \"&excl;\", \"&exist;\", \"&exists;\", \"&expectation;\", \"&exponentiale;\", \"&fallingdotseq;\", \"&fcy;\", \"&female;\", \"&ffilig;\", \"&fflig;\", \"&ffllig;\", \"&ffr;\", \"&filig;\", \"&filledsmallsquare;\", \"&filledverysmallsquare;\", \"&fjlig;\", \"&flat;\", \"&fllig;\", \"&fltns;\", \"&fnof;\", \"&fopf;\", \"&forall;\", \"&fork;\", \"&forkv;\", \"&fouriertrf;\", \"&fpartint;\", \"&frac12;\", \"&frac13;\", \"&frac14;\", \"&frac15;\", \"&frac16;\", \"&frac18;\", \"&frac23;\", \"&frac25;\", \"&frac34;\", \"&frac35;\", \"&frac38;\", \"&frac45;\", \"&frac56;\", \"&frac58;\", \"&frac78;\", \"&frasl;\", \"&frown;\", \"&fscr;\", \"&gacute;\", \"&gamma;\", \"&gammad;\", \"&gap;\", \"&gbreve;\", \"&gcedil;\", \"&gcirc;\", \"&gcy;\", \"&gdot;\", \"&ge;\", \"&gel;\", \"&geq;\", \"&geqq;\", \"&geqslant;\", \"&ges;\", \"&gescc;\", \"&gesdot;\", \"&gesdoto;\", \"&gesdotol;\", \"&gesl;\", \"&gesles;\", \"&gfr;\", \"&gg;\", \"&ggg;\", \"&gimel;\", \"&gjcy;\", \"&gl;\", \"&gla;\", \"&gle;\", \"&glj;\", \"&gnap;\", \"&gnapprox;\", \"&gne;\", \"&gneq;\", \"&gneqq;\", \"&gnsim;\", \"&gopf;\", \"&grave;\", \"&greaterequal;\", \"&greaterequalless;\", \"&greaterfullequal;\", \"&greatergreater;\", \"&greaterless;\", \"&greaterslantequal;\", \"&greatertilde;\", \"&gscr;\", \"&gsim;\", \"&gsime;\", \"&gsiml;\", \"&gt;\", \"&gtcc;\", \"&gtcir;\", \"&gtdot;\", \"&gtlpar;\", \"&gtquest;\", \"&gtrapprox;\", \"&gtrarr;\", \"&gtrdot;\", \"&gtreqless;\", \"&gtreqqless;\", \"&gtrless;\", \"&gtrsim;\", \"&gvertneqq;\", \"&gvne;\", \"&hacek;\", \"&hairsp;\", \"&half;\", \"&hamilt;\", \"&hardcy;\", \"&harr;\", \"&harrcir;\", \"&harrw;\", \"&hat;\", \"&hbar;\", \"&hcirc;\", \"&hearts;\", \"&heartsuit;\", \"&hellip;\", \"&hercon;\", \"&hfr;\", \"&hilbertspace;\", \"&hksearow;\", \"&hkswarow;\", \"&hoarr;\", \"&homtht;\", \"&hookleftarrow;\", \"&hookrightarrow;\", \"&hopf;\", \"&horbar;\", \"&horizontalline;\", \"&hscr;\", \"&hslash;\", \"&hstrok;\", \"&humpdownhump;\", \"&humpequal;\", \"&hybull;\", \"&hyphen;\", \"&iacute;\", \"&ic;\", \"&icirc;\", \"&icy;\", \"&idot;\", \"&iecy;\", \"&iexcl;\", \"&iff;\", \"&ifr;\", \"&igrave;\", \"&ii;\", \"&iiiint;\", \"&iiint;\", \"&iinfin;\", \"&iiota;\", \"&ijlig;\", \"&im;\", \"&imacr;\", \"&image;\", \"&imaginaryi;\", \"&imagline;\", \"&imagpart;\", \"&imath;\", \"&imof;\", \"&imped;\", \"&implies;\", \"&in;\", \"&incare;\", \"&infin;\", \"&infintie;\", \"&inodot;\", \"&int;\", \"&intcal;\", \"&integers;\", \"&integral;\", \"&intercal;\", \"&intersection;\", \"&intlarhk;\", \"&intprod;\", \"&invisiblecomma;\", \"&invisibletimes;\", \"&iocy;\", \"&iogon;\", \"&iopf;\", \"&iota;\", \"&iprod;\", \"&iquest;\", \"&iscr;\", \"&isin;\", \"&isindot;\", \"&isine;\", \"&isins;\", \"&isinsv;\", \"&isinv;\", \"&it;\", \"&itilde;\", \"&iukcy;\", \"&iuml;\", \"&jcirc;\", \"&jcy;\", \"&jfr;\", \"&jmath;\", \"&jopf;\", \"&jscr;\", \"&jsercy;\", \"&jukcy;\", \"&kappa;\", \"&kappav;\", \"&kcedil;\", \"&kcy;\", \"&kfr;\", \"&kgreen;\", \"&khcy;\", \"&kjcy;\", \"&kopf;\", \"&kscr;\", \"&laarr;\", \"&lacute;\", \"&laemptyv;\", \"&lagran;\", \"&lambda;\", \"&lang;\", \"&langd;\", \"&langle;\", \"&lap;\", \"&laplacetrf;\", \"&laquo;\", \"&larr;\", \"&larrb;\", \"&larrbfs;\", \"&larrfs;\", \"&larrhk;\", \"&larrlp;\", \"&larrpl;\", \"&larrsim;\", \"&larrtl;\", \"&lat;\", \"&latail;\", \"&late;\", \"&lates;\", \"&lbarr;\", \"&lbbrk;\", \"&lbrace;\", \"&lbrack;\", \"&lbrke;\", \"&lbrksld;\", \"&lbrkslu;\", \"&lcaron;\", \"&lcedil;\", \"&lceil;\", \"&lcub;\", \"&lcy;\", \"&ldca;\", \"&ldquo;\", \"&ldquor;\", \"&ldrdhar;\", \"&ldrushar;\", \"&ldsh;\", \"&le;\", \"&leftanglebracket;\", \"&leftarrow;\", \"&leftarrowbar;\", \"&leftarrowrightarrow;\", \"&leftarrowtail;\", \"&leftceiling;\", \"&leftdoublebracket;\", \"&leftdownteevector;\", \"&leftdownvector;\", \"&leftdownvectorbar;\", \"&leftfloor;\", \"&leftharpoondown;\", \"&leftharpoonup;\", \"&leftleftarrows;\", \"&leftrightarrow;\", \"&leftrightarrows;\", \"&leftrightharpoons;\", \"&leftrightsquigarrow;\", \"&leftrightvector;\", \"&lefttee;\", \"&leftteearrow;\", \"&leftteevector;\", \"&leftthreetimes;\", \"&lefttriangle;\", \"&lefttrianglebar;\", \"&lefttriangleequal;\", \"&leftupdownvector;\", \"&leftupteevector;\", \"&leftupvector;\", \"&leftupvectorbar;\", \"&leftvector;\", \"&leftvectorbar;\", \"&leg;\", \"&leq;\", \"&leqq;\", \"&leqslant;\", \"&les;\", \"&lescc;\", \"&lesdot;\", \"&lesdoto;\", \"&lesdotor;\", \"&lesg;\", \"&lesges;\", \"&lessapprox;\", \"&lessdot;\", \"&lesseqgtr;\", \"&lesseqqgtr;\", \"&lessequalgreater;\", \"&lessfullequal;\", \"&lessgreater;\", \"&lessgtr;\", \"&lessless;\", \"&lesssim;\", \"&lessslantequal;\", \"&lesstilde;\", \"&lfisht;\", \"&lfloor;\", \"&lfr;\", \"&lg;\", \"&lge;\", \"&lhar;\", \"&lhard;\", \"&lharu;\", \"&lharul;\", \"&lhblk;\", \"&ljcy;\", \"&ll;\", \"&llarr;\", \"&llcorner;\", \"&lleftarrow;\", \"&llhard;\", \"&lltri;\", \"&lmidot;\", \"&lmoust;\", \"&lmoustache;\", \"&lnap;\", \"&lnapprox;\", \"&lne;\", \"&lneq;\", \"&lneqq;\", \"&lnsim;\", \"&loang;\", \"&loarr;\", \"&lobrk;\", \"&longleftarrow;\", \"&longleftrightarrow;\", \"&longmapsto;\", \"&longrightarrow;\", \"&looparrowleft;\", \"&looparrowright;\", \"&lopar;\", \"&lopf;\", \"&loplus;\", \"&lotimes;\", \"&lowast;\", \"&lowbar;\", \"&lowerleftarrow;\", \"&lowerrightarrow;\", \"&loz;\", \"&lozenge;\", \"&lozf;\", \"&lpar;\", \"&lparlt;\", \"&lrarr;\", \"&lrcorner;\", \"&lrhar;\", \"&lrhard;\", \"&lrm;\", \"&lrtri;\", \"&lsaquo;\", \"&lscr;\", \"&lsh;\", \"&lsim;\", \"&lsime;\", \"&lsimg;\", \"&lsqb;\", \"&lsquo;\", \"&lsquor;\", \"&lstrok;\", \"&lt;\", \"&ltcc;\", \"&ltcir;\", \"&ltdot;\", \"&lthree;\", \"&ltimes;\", \"&ltlarr;\", \"&ltquest;\", \"&ltri;\", \"&ltrie;\", \"&ltrif;\", \"&ltrpar;\", \"&lurdshar;\", \"&luruhar;\", \"&lvertneqq;\", \"&lvne;\", \"&macr;\", \"&male;\", \"&malt;\", \"&maltese;\", \"&map;\", \"&mapsto;\", \"&mapstodown;\", \"&mapstoleft;\", \"&mapstoup;\", \"&marker;\", \"&mcomma;\", \"&mcy;\", \"&mdash;\", \"&mddot;\", \"&measuredangle;\", \"&mediumspace;\", \"&mellintrf;\", \"&mfr;\", \"&mho;\", \"&micro;\", \"&mid;\", \"&midast;\", \"&midcir;\", \"&middot;\", \"&minus;\", \"&minusb;\", \"&minusd;\", \"&minusdu;\", \"&minusplus;\", \"&mlcp;\", \"&mldr;\", \"&mnplus;\", \"&models;\", \"&mopf;\", \"&mp;\", \"&mscr;\", \"&mstpos;\", \"&mu;\", \"&multimap;\", \"&mumap;\", \"&nabla;\", \"&nacute;\", \"&nang;\", \"&nap;\", \"&nape;\", \"&napid;\", \"&napos;\", \"&napprox;\", \"&natur;\", \"&natural;\", \"&naturals;\", \"&nbsp;\", \"&nbump;\", \"&nbumpe;\", \"&ncap;\", \"&ncaron;\", \"&ncedil;\", \"&ncong;\", \"&ncongdot;\", \"&ncup;\", \"&ncy;\", \"&ndash;\", \"&ne;\", \"&nearhk;\", \"&nearr;\", \"&nearrow;\", \"&nedot;\", \"&negativemediumspace;\", \"&negativethickspace;\", \"&negativethinspace;\", \"&negativeverythinspace;\", \"&nequiv;\", \"&nesear;\", \"&nesim;\", \"&nestedgreatergreater;\", \"&nestedlessless;\", \"&newline;\", \"&nexist;\", \"&nexists;\", \"&nfr;\", \"&nge;\", \"&ngeq;\", \"&ngeqq;\", \"&ngeqslant;\", \"&nges;\", \"&ngg;\", \"&ngsim;\", \"&ngt;\", \"&ngtr;\", \"&ngtv;\", \"&nharr;\", \"&nhpar;\", \"&ni;\", \"&nis;\", \"&nisd;\", \"&niv;\", \"&njcy;\", \"&nlarr;\", \"&nldr;\", \"&nle;\", \"&nleftarrow;\", \"&nleftrightarrow;\", \"&nleq;\", \"&nleqq;\", \"&nleqslant;\", \"&nles;\", \"&nless;\", \"&nll;\", \"&nlsim;\", \"&nlt;\", \"&nltri;\", \"&nltrie;\", \"&nltv;\", \"&nmid;\", \"&nobreak;\", \"&nonbreakingspace;\", \"&nopf;\", \"&not;\", \"&notcongruent;\", \"&notcupcap;\", \"&notdoubleverticalbar;\", \"&notelement;\", \"&notequal;\", \"&notequaltilde;\", \"&notexists;\", \"&notgreater;\", \"&notgreaterequal;\", \"&notgreaterfullequal;\", \"&notgreatergreater;\", \"&notgreaterless;\", \"&notgreaterslantequal;\", \"&notgreatertilde;\", \"&nothumpdownhump;\", \"&nothumpequal;\", \"&notin;\", \"&notindot;\", \"&notine;\", \"&notinva;\", \"&notinvb;\", \"&notinvc;\", \"&notlefttriangle;\", \"&notlefttrianglebar;\", \"&notlefttriangleequal;\", \"&notless;\", \"&notlessequal;\", \"&notlessgreater;\", \"&notlessless;\", \"&notlessslantequal;\", \"&notlesstilde;\", \"&notnestedgreatergreater;\", \"&notnestedlessless;\", \"&notni;\", \"&notniva;\", \"&notnivb;\", \"&notnivc;\", \"&notprecedes;\", \"&notprecedesequal;\", \"&notprecedesslantequal;\", \"&notreverseelement;\", \"&notrighttriangle;\", \"&notrighttrianglebar;\", \"&notrighttriangleequal;\", \"&notsquaresubset;\", \"&notsquaresubsetequal;\", \"&notsquaresuperset;\", \"&notsquaresupersetequal;\", \"&notsubset;\", \"&notsubsetequal;\", \"&notsucceeds;\", \"&notsucceedsequal;\", \"&notsucceedsslantequal;\", \"&notsucceedstilde;\", \"&notsuperset;\", \"&notsupersetequal;\", \"&nottilde;\", \"&nottildeequal;\", \"&nottildefullequal;\", \"&nottildetilde;\", \"&notverticalbar;\", \"&npar;\", \"&nparallel;\", \"&nparsl;\", \"&npart;\", \"&npolint;\", \"&npr;\", \"&nprcue;\", \"&npre;\", \"&nprec;\", \"&npreceq;\", \"&nrarr;\", \"&nrarrc;\", \"&nrarrw;\", \"&nrightarrow;\", \"&nrtri;\", \"&nrtrie;\", \"&nsc;\", \"&nsccue;\", \"&nsce;\", \"&nscr;\", \"&nshortmid;\", \"&nshortparallel;\", \"&nsim;\", \"&nsime;\", \"&nsimeq;\", \"&nsmid;\", \"&nspar;\", \"&nsqsube;\", \"&nsqsupe;\", \"&nsub;\", \"&nsube;\", \"&nsubset;\", \"&nsubseteq;\", \"&nsubseteqq;\", \"&nsucc;\", \"&nsucceq;\", \"&nsup;\", \"&nsupe;\", \"&nsupset;\", \"&nsupseteq;\", \"&nsupseteqq;\", \"&ntgl;\", \"&ntilde;\", \"&ntlg;\", \"&ntriangleleft;\", \"&ntrianglelefteq;\", \"&ntriangleright;\", \"&ntrianglerighteq;\", \"&nu;\", \"&num;\", \"&numero;\", \"&numsp;\", \"&nvap;\", \"&nvdash;\", \"&nvge;\", \"&nvgt;\", \"&nvharr;\", \"&nvinfin;\", \"&nvlarr;\", \"&nvle;\", \"&nvlt;\", \"&nvltrie;\", \"&nvrarr;\", \"&nvrtrie;\", \"&nvsim;\", \"&nwarhk;\", \"&nwarr;\", \"&nwarrow;\", \"&nwnear;\", \"&oacute;\", \"&oast;\", \"&ocir;\", \"&ocirc;\", \"&ocy;\", \"&odash;\", \"&odblac;\", \"&odiv;\", \"&odot;\", \"&odsold;\", \"&oelig;\", \"&ofcir;\", \"&ofr;\", \"&ogon;\", \"&ograve;\", \"&ogt;\", \"&ohbar;\", \"&ohm;\", \"&oint;\", \"&olarr;\", \"&olcir;\", \"&olcross;\", \"&oline;\", \"&olt;\", \"&omacr;\", \"&omega;\", \"&omicron;\", \"&omid;\", \"&ominus;\", \"&oopf;\", \"&opar;\", \"&opencurlydoublequote;\", \"&opencurlyquote;\", \"&operp;\", \"&oplus;\", \"&or;\", \"&orarr;\", \"&ord;\", \"&order;\", \"&orderof;\", \"&ordf;\", \"&ordm;\", \"&origof;\", \"&oror;\", \"&orslope;\", \"&orv;\", \"&os;\", \"&oscr;\", \"&oslash;\", \"&osol;\", \"&otilde;\", \"&otimes;\", \"&otimesas;\", \"&ouml;\", \"&ovbar;\", \"&overbar;\", \"&overbrace;\", \"&overbracket;\", \"&overparenthesis;\", \"&par;\", \"&para;\", \"&parallel;\", \"&parsim;\", \"&parsl;\", \"&part;\", \"&partiald;\", \"&pcy;\", \"&percnt;\", \"&period;\", \"&permil;\", \"&perp;\", \"&pertenk;\", \"&pfr;\", \"&phi;\", \"&phiv;\", \"&phmmat;\", \"&phone;\", \"&pi;\", \"&pitchfork;\", \"&piv;\", \"&planck;\", \"&planckh;\", \"&plankv;\", \"&plus;\", \"&plusacir;\", \"&plusb;\", \"&pluscir;\", \"&plusdo;\", \"&plusdu;\", \"&pluse;\", \"&plusminus;\", \"&plusmn;\", \"&plussim;\", \"&plustwo;\", \"&pm;\", \"&poincareplane;\", \"&pointint;\", \"&popf;\", \"&pound;\", \"&pr;\", \"&prap;\", \"&prcue;\", \"&pre;\", \"&prec;\", \"&precapprox;\", \"&preccurlyeq;\", \"&precedes;\", \"&precedesequal;\", \"&precedesslantequal;\", \"&precedestilde;\", \"&preceq;\", \"&precnapprox;\", \"&precneqq;\", \"&precnsim;\", \"&precsim;\", \"&prime;\", \"&primes;\", \"&prnap;\", \"&prne;\", \"&prnsim;\", \"&prod;\", \"&product;\", \"&profalar;\", \"&profline;\", \"&profsurf;\", \"&prop;\", \"&proportion;\", \"&proportional;\", \"&propto;\", \"&prsim;\", \"&prurel;\", \"&pscr;\", \"&psi;\", \"&puncsp;\", \"&qfr;\", \"&qint;\", \"&qopf;\", \"&qprime;\", \"&qscr;\", \"&quaternions;\", \"&quatint;\", \"&quest;\", \"&questeq;\", \"&quot;\", \"&raarr;\", \"&race;\", \"&racute;\", \"&radic;\", \"&raemptyv;\", \"&rang;\", \"&rangd;\", \"&range;\", \"&rangle;\", \"&raquo;\", \"&rarr;\", \"&rarrap;\", \"&rarrb;\", \"&rarrbfs;\", \"&rarrc;\", \"&rarrfs;\", \"&rarrhk;\", \"&rarrlp;\", \"&rarrpl;\", \"&rarrsim;\", \"&rarrtl;\", \"&rarrw;\", \"&ratail;\", \"&ratio;\", \"&rationals;\", \"&rbarr;\", \"&rbbrk;\", \"&rbrace;\", \"&rbrack;\", \"&rbrke;\", \"&rbrksld;\", \"&rbrkslu;\", \"&rcaron;\", \"&rcedil;\", \"&rceil;\", \"&rcub;\", \"&rcy;\", \"&rdca;\", \"&rdldhar;\", \"&rdquo;\", \"&rdquor;\", \"&rdsh;\", \"&re;\", \"&real;\", \"&realine;\", \"&realpart;\", \"&reals;\", \"&rect;\", \"&reg;\", \"&reverseelement;\", \"&reverseequilibrium;\", \"&reverseupequilibrium;\", \"&rfisht;\", \"&rfloor;\", \"&rfr;\", \"&rhar;\", \"&rhard;\", \"&rharu;\", \"&rharul;\", \"&rho;\", \"&rhov;\", \"&rightanglebracket;\", \"&rightarrow;\", \"&rightarrowbar;\", \"&rightarrowleftarrow;\", \"&rightarrowtail;\", \"&rightceiling;\", \"&rightdoublebracket;\", \"&rightdownteevector;\", \"&rightdownvector;\", \"&rightdownvectorbar;\", \"&rightfloor;\", \"&rightharpoondown;\", \"&rightharpoonup;\", \"&rightleftarrows;\", \"&rightleftharpoons;\", \"&rightrightarrows;\", \"&rightsquigarrow;\", \"&righttee;\", \"&rightteearrow;\", \"&rightteevector;\", \"&rightthreetimes;\", \"&righttriangle;\", \"&righttrianglebar;\", \"&righttriangleequal;\", \"&rightupdownvector;\", \"&rightupteevector;\", \"&rightupvector;\", \"&rightupvectorbar;\", \"&rightvector;\", \"&rightvectorbar;\", \"&ring;\", \"&risingdotseq;\", \"&rlarr;\", \"&rlhar;\", \"&rlm;\", \"&rmoust;\", \"&rmoustache;\", \"&rnmid;\", \"&roang;\", \"&roarr;\", \"&robrk;\", \"&ropar;\", \"&ropf;\", \"&roplus;\", \"&rotimes;\", \"&roundimplies;\", \"&rpar;\", \"&rpargt;\", \"&rppolint;\", \"&rrarr;\", \"&rrightarrow;\", \"&rsaquo;\", \"&rscr;\", \"&rsh;\", \"&rsqb;\", \"&rsquo;\", \"&rsquor;\", \"&rthree;\", \"&rtimes;\", \"&rtri;\", \"&rtrie;\", \"&rtrif;\", \"&rtriltri;\", \"&ruledelayed;\", \"&ruluhar;\", \"&rx;\", \"&sacute;\", \"&sbquo;\", \"&sc;\", \"&scap;\", \"&scaron;\", \"&sccue;\", \"&sce;\", \"&scedil;\", \"&scirc;\", \"&scnap;\", \"&scne;\", \"&scnsim;\", \"&scpolint;\", \"&scsim;\", \"&scy;\", \"&sdot;\", \"&sdotb;\", \"&sdote;\", \"&searhk;\", \"&searr;\", \"&searrow;\", \"&sect;\", \"&semi;\", \"&seswar;\", \"&setminus;\", \"&setmn;\", \"&sext;\", \"&sfr;\", \"&sfrown;\", \"&sharp;\", \"&shchcy;\", \"&shcy;\", \"&shortdownarrow;\", \"&shortleftarrow;\", \"&shortmid;\", \"&shortparallel;\", \"&shortrightarrow;\", \"&shortuparrow;\", \"&shy;\", \"&sigma;\", \"&sigmaf;\", \"&sigmav;\", \"&sim;\", \"&simdot;\", \"&sime;\", \"&simeq;\", \"&simg;\", \"&simge;\", \"&siml;\", \"&simle;\", \"&simne;\", \"&simplus;\", \"&simrarr;\", \"&slarr;\", \"&smallcircle;\", \"&smallsetminus;\", \"&smashp;\", \"&smeparsl;\", \"&smid;\", \"&smile;\", \"&smt;\", \"&smte;\", \"&smtes;\", \"&softcy;\", \"&sol;\", \"&solb;\", \"&solbar;\", \"&sopf;\", \"&spades;\", \"&spadesuit;\", \"&spar;\", \"&sqcap;\", \"&sqcaps;\", \"&sqcup;\", \"&sqcups;\", \"&sqrt;\", \"&sqsub;\", \"&sqsube;\", \"&sqsubset;\", \"&sqsubseteq;\", \"&sqsup;\", \"&sqsupe;\", \"&sqsupset;\", \"&sqsupseteq;\", \"&squ;\", \"&square;\", \"&squareintersection;\", \"&squaresubset;\", \"&squaresubsetequal;\", \"&squaresuperset;\", \"&squaresupersetequal;\", \"&squareunion;\", \"&squarf;\", \"&squf;\", \"&srarr;\", \"&sscr;\", \"&ssetmn;\", \"&ssmile;\", \"&sstarf;\", \"&star;\", \"&starf;\", \"&straightepsilon;\", \"&straightphi;\", \"&strns;\", \"&sub;\", \"&subdot;\", \"&sube;\", \"&subedot;\", \"&submult;\", \"&subne;\", \"&subplus;\", \"&subrarr;\", \"&subset;\", \"&subseteq;\", \"&subseteqq;\", \"&subsetequal;\", \"&subsetneq;\", \"&subsetneqq;\", \"&subsim;\", \"&subsub;\", \"&subsup;\", \"&succ;\", \"&succapprox;\", \"&succcurlyeq;\", \"&succeeds;\", \"&succeedsequal;\", \"&succeedsslantequal;\", \"&succeedstilde;\", \"&succeq;\", \"&succnapprox;\", \"&succneqq;\", \"&succnsim;\", \"&succsim;\", \"&suchthat;\", \"&sum;\", \"&sung;\", \"&sup1;\", \"&sup2;\", \"&sup3;\", \"&sup;\", \"&supdot;\", \"&supdsub;\", \"&supe;\", \"&supedot;\", \"&superset;\", \"&supersetequal;\", \"&suphsol;\", \"&suphsub;\", \"&suplarr;\", \"&supmult;\", \"&supne;\", \"&supplus;\", \"&supset;\", \"&supseteq;\", \"&supseteqq;\", \"&supsetneq;\", \"&supsetneqq;\", \"&supsim;\", \"&supsub;\", \"&supsup;\", \"&swarhk;\", \"&swarr;\", \"&swarrow;\", \"&swnwar;\", \"&szlig;\", \"&tab;\", \"&target;\", \"&tau;\", \"&tbrk;\", \"&tcaron;\", \"&tcedil;\", \"&tcy;\", \"&tdot;\", \"&telrec;\", \"&tfr;\", \"&there4;\", \"&therefore;\", \"&theta;\", \"&thetasym;\", \"&thetav;\", \"&thickapprox;\", \"&thicksim;\", \"&thickspace;\", \"&thinsp;\", \"&thinspace;\", \"&thkap;\", \"&thksim;\", \"&thorn;\", \"&tilde;\", \"&tildeequal;\", \"&tildefullequal;\", \"&tildetilde;\", \"&times;\", \"&timesb;\", \"&timesbar;\", \"&timesd;\", \"&tint;\", \"&toea;\", \"&top;\", \"&topbot;\", \"&topcir;\", \"&topf;\", \"&topfork;\", \"&tosa;\", \"&tprime;\", \"&trade;\", \"&triangle;\", \"&triangledown;\", \"&triangleleft;\", \"&trianglelefteq;\", \"&triangleq;\", \"&triangleright;\", \"&trianglerighteq;\", \"&tridot;\", \"&trie;\", \"&triminus;\", \"&tripledot;\", \"&triplus;\", \"&trisb;\", \"&tritime;\", \"&trpezium;\", \"&tscr;\", \"&tscy;\", \"&tshcy;\", \"&tstrok;\", \"&twixt;\", \"&twoheadleftarrow;\", \"&twoheadrightarrow;\", \"&uacute;\", \"&uarr;\", \"&uarrocir;\", \"&ubrcy;\", \"&ubreve;\", \"&ucirc;\", \"&ucy;\", \"&udarr;\", \"&udblac;\", \"&udhar;\", \"&ufisht;\", \"&ufr;\", \"&ugrave;\", \"&uhar;\", \"&uharl;\", \"&uharr;\", \"&uhblk;\", \"&ulcorn;\", \"&ulcorner;\", \"&ulcrop;\", \"&ultri;\", \"&umacr;\", \"&uml;\", \"&underbar;\", \"&underbrace;\", \"&underbracket;\", \"&underparenthesis;\", \"&union;\", \"&unionplus;\", \"&uogon;\", \"&uopf;\", \"&uparrow;\", \"&uparrowbar;\", \"&uparrowdownarrow;\", \"&updownarrow;\", \"&upequilibrium;\", \"&upharpoonleft;\", \"&upharpoonright;\", \"&uplus;\", \"&upperleftarrow;\", \"&upperrightarrow;\", \"&upsi;\", \"&upsih;\", \"&upsilon;\", \"&uptee;\", \"&upteearrow;\", \"&upuparrows;\", \"&urcorn;\", \"&urcorner;\", \"&urcrop;\", \"&uring;\", \"&urtri;\", \"&uscr;\", \"&utdot;\", \"&utilde;\", \"&utri;\", \"&utrif;\", \"&uuarr;\", \"&uuml;\", \"&uwangle;\", \"&vangrt;\", \"&varepsilon;\", \"&varkappa;\", \"&varnothing;\", \"&varphi;\", \"&varpi;\", \"&varpropto;\", \"&varr;\", \"&varrho;\", \"&varsigma;\", \"&varsubsetneq;\", \"&varsubsetneqq;\", \"&varsupsetneq;\", \"&varsupsetneqq;\", \"&vartheta;\", \"&vartriangleleft;\", \"&vartriangleright;\", \"&vbar;\", \"&vbarv;\", \"&vcy;\", \"&vdash;\", \"&vdashl;\", \"&vee;\", \"&veebar;\", \"&veeeq;\", \"&vellip;\", \"&verbar;\", \"&vert;\", \"&verticalbar;\", \"&verticalline;\", \"&verticalseparator;\", \"&verticaltilde;\", \"&verythinspace;\", \"&vfr;\", \"&vltri;\", \"&vnsub;\", \"&vnsup;\", \"&vopf;\", \"&vprop;\", \"&vrtri;\", \"&vscr;\", \"&vsubne;\", \"&vsupne;\", \"&vvdash;\", \"&vzigzag;\", \"&wcirc;\", \"&wedbar;\", \"&wedge;\", \"&wedgeq;\", \"&weierp;\", \"&wfr;\", \"&wopf;\", \"&wp;\", \"&wr;\", \"&wreath;\", \"&wscr;\", \"&xcap;\", \"&xcirc;\", \"&xcup;\", \"&xdtri;\", \"&xfr;\", \"&xharr;\", \"&xi;\", \"&xlarr;\", \"&xmap;\", \"&xnis;\", \"&xodot;\", \"&xopf;\", \"&xoplus;\", \"&xotime;\", \"&xrarr;\", \"&xscr;\", \"&xsqcup;\", \"&xuplus;\", \"&xutri;\", \"&xvee;\", \"&xwedge;\", \"&yacute;\", \"&yacy;\", \"&ycirc;\", \"&ycy;\", \"&yen;\", \"&yfr;\", \"&yicy;\", \"&yopf;\", \"&yscr;\", \"&yucy;\", \"&yuml;\", \"&zacute;\", \"&zcaron;\", \"&zcy;\", \"&zdot;\", \"&zeetrf;\", \"&zerowidthspace;\", \"&zeta;\", \"&zfr;\", \"&zhcy;\", \"&zigrarr;\", \"&zopf;\", \"&zscr;\", \"&zwj;\", \"&zwnj;\"];\nconst regexp$1 = /&([a-z0-9]+|#x?[0-9a-f]+);/gi;\nclass UnknownCharReference extends Rule {\n  documentation(context) {\n    return {\n      description: \"HTML defines a set of valid character references but \".concat(context || \"this\", \" is not a valid one.\"),\n      url: ruleDocumentationUrl(\"@/rules/unrecognized-char-ref.ts\")\n    };\n  }\n  setup() {\n    this.on(\"element:ready\", event => {\n      const node = event.target;\n      /* only iterate over direct descendants */\n      for (const child of node.childNodes) {\n        if (child.nodeType !== NodeType.TEXT_NODE) {\n          continue;\n        }\n        this.findCharacterReferences(child.textContent, child.location);\n      }\n    });\n    this.on(\"attr\", event => {\n      /* boolean attributes has no value so nothing to validate */\n      if (!event.value) {\n        return;\n      }\n      this.findCharacterReferences(event.value.toString(), event.valueLocation);\n    });\n  }\n  findCharacterReferences(text, location) {\n    let match;\n    do {\n      match = regexp$1.exec(text);\n      if (match) {\n        const entity = match[0];\n        /* assume numeric entities are valid for now */\n        if (entity.startsWith(\"&#\")) {\n          continue;\n        }\n        /* ignore if this is a known character reference name */\n        if (entities$1.includes(entity)) {\n          continue;\n        }\n        const entityLocation = sliceLocation(location, match.index, match.index + entity.length);\n        this.report(null, \"Unrecognized character reference \\\"\".concat(entity, \"\\\"\"), entityLocation, entity);\n      }\n    } while (match);\n  }\n}\nvar Style$1;\n(function (Style) {\n  Style[Style[\"Any\"] = 0] = \"Any\";\n  Style[Style[\"AlwaysOmit\"] = 1] = \"AlwaysOmit\";\n  Style[Style[\"AlwaysSelfclose\"] = 2] = \"AlwaysSelfclose\";\n})(Style$1 || (Style$1 = {}));\nconst defaults$4 = {\n  style: \"omit\"\n};\nclass Void extends Rule {\n  constructor(options) {\n    super({\n      ...defaults$4,\n      ...options\n    });\n    this.style = parseStyle$1(this.options.style);\n  }\n  get deprecated() {\n    return true;\n  }\n  static schema() {\n    return {\n      style: {\n        enum: [\"any\", \"omit\", \"selfclose\", \"selfclosing\"],\n        type: \"string\"\n      }\n    };\n  }\n  documentation() {\n    return {\n      description: \"HTML void elements cannot have any content and must not have an end tag.\",\n      url: ruleDocumentationUrl(\"@/rules/void.ts\")\n    };\n  }\n  setup() {\n    this.on(\"tag:end\", event => {\n      const current = event.target; // The current element being closed\n      const active = event.previous; // The current active element (that is, the current element on the stack)\n      if (current && current.meta) {\n        this.validateCurrent(current);\n      }\n      if (active && active.meta) {\n        this.validateActive(active, active.meta);\n      }\n    });\n  }\n  validateCurrent(node) {\n    if (node.voidElement && node.closed === exports.NodeClosed.EndTag) {\n      this.report(null, \"End tag for <\".concat(node.tagName, \"> must be omitted\"), node.location);\n    }\n  }\n  validateActive(node, meta) {\n    /* ignore foreign elements, they may or may not be self-closed and both are\n     * valid */\n    if (meta.foreign) {\n      return;\n    }\n    const selfOrOmitted = node.closed === exports.NodeClosed.VoidOmitted || node.closed === exports.NodeClosed.VoidSelfClosed;\n    if (node.voidElement) {\n      if (this.style === Style$1.AlwaysOmit && node.closed === exports.NodeClosed.VoidSelfClosed) {\n        this.report(node, \"Expected omitted end tag <\".concat(node.tagName, \"> instead of self-closing element <\").concat(node.tagName, \"/>\"));\n      }\n      if (this.style === Style$1.AlwaysSelfclose && node.closed === exports.NodeClosed.VoidOmitted) {\n        this.report(node, \"Expected self-closing element <\".concat(node.tagName, \"/> instead of omitted end-tag <\").concat(node.tagName, \">\"));\n      }\n    }\n    if (selfOrOmitted && node.voidElement === false) {\n      this.report(node, \"End tag for <\".concat(node.tagName, \"> must not be omitted\"));\n    }\n  }\n}\nfunction parseStyle$1(name) {\n  switch (name) {\n    case \"any\":\n      return Style$1.Any;\n    case \"omit\":\n      return Style$1.AlwaysOmit;\n    case \"selfclose\":\n    case \"selfclosing\":\n      return Style$1.AlwaysSelfclose;\n    /* istanbul ignore next: covered by schema validation */\n    default:\n      throw new Error(\"Invalid style \\\"\".concat(name, \"\\\" for \\\"void\\\" rule\"));\n  }\n}\nclass VoidContent extends Rule {\n  documentation(tagName) {\n    const doc = {\n      description: \"HTML void elements cannot have any content and must not have content or end tag.\",\n      url: ruleDocumentationUrl(\"@/rules/void-content.ts\")\n    };\n    if (tagName) {\n      doc.description = \"<\".concat(tagName, \"> is a void element and must not have content or end tag.\");\n    }\n    return doc;\n  }\n  setup() {\n    this.on(\"tag:end\", event => {\n      const node = event.target; // The current element being closed.\n      if (!node) {\n        return;\n      }\n      if (!node.voidElement) {\n        return;\n      }\n      if (node.closed === exports.NodeClosed.EndTag) {\n        this.report(null, \"End tag for <\".concat(node.tagName, \"> must be omitted\"), node.location, node.tagName);\n      }\n    });\n  }\n}\nvar Style;\n(function (Style) {\n  Style[Style[\"AlwaysOmit\"] = 1] = \"AlwaysOmit\";\n  Style[Style[\"AlwaysSelfclose\"] = 2] = \"AlwaysSelfclose\";\n})(Style || (Style = {}));\nconst defaults$3 = {\n  style: \"omit\"\n};\nclass VoidStyle extends Rule {\n  constructor(options) {\n    super({\n      ...defaults$3,\n      ...options\n    });\n    this.style = parseStyle(this.options.style);\n  }\n  static schema() {\n    return {\n      style: {\n        enum: [\"omit\", \"selfclose\", \"selfclosing\"],\n        type: \"string\"\n      }\n    };\n  }\n  documentation(context) {\n    const doc = {\n      description: \"The current configuration requires a specific style for ending void elements.\",\n      url: ruleDocumentationUrl(\"@/rules/void-style.ts\")\n    };\n    if (context) {\n      const [desc, end] = styleDescription(context.style);\n      doc.description = \"The current configuration requires void elements to \".concat(desc, \", use <\").concat(context.tagName).concat(end, \"> instead.\");\n    }\n    return doc;\n  }\n  setup() {\n    this.on(\"tag:end\", event => {\n      const active = event.previous; // The current active element (that is, the current element on the stack)\n      if (active && active.meta) {\n        this.validateActive(active);\n      }\n    });\n  }\n  validateActive(node) {\n    /* ignore non-void elements, they must be closed with regular end tag */\n    if (!node.voidElement) {\n      return;\n    }\n    if (this.shouldBeOmitted(node)) {\n      this.report(node, \"Expected omitted end tag <\".concat(node.tagName, \"> instead of self-closing element <\").concat(node.tagName, \"/>\"));\n    }\n    if (this.shouldBeSelfClosed(node)) {\n      this.report(node, \"Expected self-closing element <\".concat(node.tagName, \"/> instead of omitted end-tag <\").concat(node.tagName, \">\"));\n    }\n  }\n  report(node, message) {\n    const context = {\n      style: this.style,\n      tagName: node.tagName\n    };\n    super.report(node, message, null, context);\n  }\n  shouldBeOmitted(node) {\n    return this.style === Style.AlwaysOmit && node.closed === exports.NodeClosed.VoidSelfClosed;\n  }\n  shouldBeSelfClosed(node) {\n    return this.style === Style.AlwaysSelfclose && node.closed === exports.NodeClosed.VoidOmitted;\n  }\n}\nfunction parseStyle(name) {\n  switch (name) {\n    case \"omit\":\n      return Style.AlwaysOmit;\n    case \"selfclose\":\n    case \"selfclosing\":\n      return Style.AlwaysSelfclose;\n    /* istanbul ignore next: covered by schema validation */\n    default:\n      throw new Error(\"Invalid style \\\"\".concat(name, \"\\\" for \\\"void-style\\\" rule\"));\n  }\n}\nfunction styleDescription(style) {\n  switch (style) {\n    case Style.AlwaysOmit:\n      return [\"omit end tag\", \"\"];\n    case Style.AlwaysSelfclose:\n      return [\"be self-closed\", \"/\"];\n    // istanbul ignore next: will only happen if new styles are added, otherwise this isn't reached\n    default:\n      throw new Error(\"Unknown style\");\n  }\n}\nclass H30 extends Rule {\n  documentation() {\n    return {\n      description: \"WCAG 2.1 requires each `<a>` anchor link to have a text describing the purpose of the link using either plain text or an `<img>` with the `alt` attribute set.\",\n      url: ruleDocumentationUrl(\"@/rules/wcag/h30.ts\")\n    };\n  }\n  setup() {\n    this.on(\"dom:ready\", event => {\n      const links = event.document.getElementsByTagName(\"a\");\n      for (const link of links) {\n        /* ignore links with aria-hidden=\"true\" */\n        if (!inAccessibilityTree(link)) {\n          continue;\n        }\n        /* check if text content is present (or dynamic) */\n        const textClassification = classifyNodeText(link);\n        if (textClassification !== TextClassification.EMPTY_TEXT) {\n          continue;\n        }\n        /* check if image with alt-text is present */\n        const images = link.querySelectorAll(\"img\");\n        if (images.some(image => hasAltText(image))) {\n          continue;\n        }\n        /* check if aria-label is present on either the <a> element or a descendant */\n        const labels = link.querySelectorAll(\"[aria-label]\");\n        if (hasAriaLabel(link) || labels.some(cur => hasAriaLabel(cur))) {\n          continue;\n        }\n        this.report(link, \"Anchor link must have a text describing its purpose\");\n      }\n    });\n  }\n}\nclass H32 extends Rule {\n  documentation() {\n    return {\n      description: \"WCAG 2.1 requires each `<form>` element to have at least one submit button.\",\n      url: ruleDocumentationUrl(\"@/rules/wcag/h32.ts\")\n    };\n  }\n  setup() {\n    /* query all tags with form property, normally this is only the <form> tag\n     * but with custom element metadata other tags might be considered form\n     * (usually a component wrapping a <form> element) */\n    const formTags = this.getTagsWithProperty(\"form\");\n    const formSelector = formTags.join(\",\");\n    this.on(\"dom:ready\", event => {\n      const {\n        document\n      } = event;\n      const forms = document.querySelectorAll(formSelector);\n      for (const form of forms) {\n        /* find nested submit buttons */\n        if (hasNestedSubmit(form)) {\n          continue;\n        }\n        /* find explicitly associated submit buttons */\n        if (hasAssociatedSubmit(document, form)) {\n          continue;\n        }\n        this.report(form, \"<\".concat(form.tagName, \"> element must have a submit button\"));\n      }\n    });\n  }\n}\nfunction isSubmit(node) {\n  const type = node.getAttribute(\"type\");\n  return Boolean(type && type.valueMatches(/submit|image/));\n}\nfunction isAssociated(id, node) {\n  const form = node.getAttribute(\"form\");\n  return Boolean(form && form.valueMatches(id, true));\n}\nfunction hasNestedSubmit(form) {\n  const matches = form.querySelectorAll(\"button,input\").filter(isSubmit).filter(node => !node.hasAttribute(\"form\"));\n  return matches.length > 0;\n}\nfunction hasAssociatedSubmit(document, form) {\n  const {\n    id\n  } = form;\n  if (!id) {\n    return false;\n  }\n  const matches = document.querySelectorAll(\"button[form],input[form]\").filter(isSubmit).filter(node => isAssociated(id, node));\n  return matches.length > 0;\n}\nclass H36 extends Rule {\n  documentation() {\n    return {\n      description: 'WCAG 2.1 requires all images used as submit buttons to have a textual description using the alt attribute. The alt text cannot be empty (`alt=\"\"`).',\n      url: ruleDocumentationUrl(\"@/rules/wcag/h36.ts\")\n    };\n  }\n  setup() {\n    this.on(\"tag:end\", event => {\n      /* only handle input elements */\n      const node = event.previous;\n      if (node.tagName !== \"input\") return;\n      /* only handle images with type=\"image\" */\n      if (node.getAttributeValue(\"type\") !== \"image\") {\n        return;\n      }\n      if (!hasAltText(node)) {\n        this.report(node, \"image used as submit button must have alt text\");\n      }\n    });\n  }\n}\nconst defaults$2 = {\n  allowEmpty: true,\n  alias: []\n};\nclass H37 extends Rule {\n  constructor(options) {\n    super({\n      ...defaults$2,\n      ...options\n    });\n    /* ensure alias is array */\n    if (!Array.isArray(this.options.alias)) {\n      this.options.alias = [this.options.alias];\n    }\n  }\n  static schema() {\n    return {\n      alias: {\n        anyOf: [{\n          items: {\n            type: \"string\"\n          },\n          type: \"array\"\n        }, {\n          type: \"string\"\n        }]\n      },\n      allowEmpty: {\n        type: \"boolean\"\n      }\n    };\n  }\n  documentation() {\n    return {\n      description: \"Both HTML5 and WCAG 2.0 requires images to have a alternative text for each image.\",\n      url: ruleDocumentationUrl(\"@/rules/wcag/h37.ts\")\n    };\n  }\n  setup() {\n    this.on(\"tag:end\", event => {\n      const node = event.previous;\n      /* only validate images */\n      if (!node || node.tagName !== \"img\") {\n        return;\n      }\n      /* ignore images with aria-hidden=\"true\" or role=\"presentation\" */\n      if (!inAccessibilityTree(node)) {\n        return;\n      }\n      /* validate plain alt-attribute */\n      const alt = node.getAttributeValue(\"alt\");\n      if (alt || alt === \"\" && this.options.allowEmpty) {\n        return;\n      }\n      /* validate if any non-empty alias is present */\n      for (const attr of this.options.alias) {\n        if (node.getAttribute(attr)) {\n          return;\n        }\n      }\n      this.report(node, '<img> is missing required \"alt\" attribute', node.location);\n    });\n  }\n}\nclass H67 extends Rule {\n  documentation() {\n    return {\n      description: \"A decorative image cannot have a title attribute. Either remove `title` or add a descriptive `alt` text.\",\n      url: ruleDocumentationUrl(\"@/rules/wcag/h67.ts\")\n    };\n  }\n  setup() {\n    this.on(\"tag:end\", event => {\n      const node = event.target;\n      /* only validate images */\n      if (!node || node.tagName !== \"img\") {\n        return;\n      }\n      /* ignore images without title */\n      const title = node.getAttribute(\"title\");\n      if (!title || title.value === \"\") {\n        return;\n      }\n      /* ignore elements with non-empty alt-text */\n      const alt = node.getAttributeValue(\"alt\");\n      if (alt && alt !== \"\") {\n        return;\n      }\n      this.report(node, \"<img> with empty alt text cannot have title attribute\", title.keyLocation);\n    });\n  }\n}\nclass H71 extends Rule {\n  documentation() {\n    return {\n      description: \"H71: Providing a description for groups of form controls using fieldset and legend elements\",\n      url: ruleDocumentationUrl(\"@/rules/wcag/h71.ts\")\n    };\n  }\n  setup() {\n    this.on(\"dom:ready\", event => {\n      const {\n        document\n      } = event;\n      const fieldsets = document.querySelectorAll(this.selector);\n      for (const fieldset of fieldsets) {\n        this.validate(fieldset);\n      }\n    });\n  }\n  validate(fieldset) {\n    const legend = fieldset.querySelectorAll(\"> legend\");\n    if (legend.length === 0) {\n      this.reportNode(fieldset);\n    }\n  }\n  reportNode(node) {\n    super.report(node, \"\".concat(node.annotatedName, \" must have a <legend> as the first child\"));\n  }\n  get selector() {\n    return this.getTagsDerivedFrom(\"fieldset\").join(\",\");\n  }\n}\nconst bundledRules$1 = {\n  \"wcag/h30\": H30,\n  \"wcag/h32\": H32,\n  \"wcag/h36\": H36,\n  \"wcag/h37\": H37,\n  \"wcag/h67\": H67,\n  \"wcag/h71\": H71\n};\nconst bundledRules = {\n  \"allowed-links\": AllowedLinks,\n  \"aria-hidden-body\": AriaHiddenBody,\n  \"aria-label-misuse\": AriaLabelMisuse,\n  \"attr-case\": AttrCase,\n  \"attr-delimiter\": AttrDelimiter,\n  \"attr-pattern\": AttrPattern,\n  \"attr-quotes\": AttrQuotes,\n  \"attr-spacing\": AttrSpacing,\n  \"attribute-allowed-values\": AttributeAllowedValues,\n  \"attribute-boolean-style\": AttributeBooleanStyle,\n  \"attribute-empty-style\": AttributeEmptyStyle,\n  \"class-pattern\": ClassPattern,\n  \"close-attr\": CloseAttr,\n  \"close-order\": CloseOrder,\n  deprecated: Deprecated,\n  \"deprecated-rule\": DeprecatedRule,\n  \"doctype-html\": NoStyleTag$1,\n  \"doctype-style\": DoctypeStyle,\n  \"element-case\": ElementCase,\n  \"element-name\": ElementName,\n  \"element-permitted-content\": ElementPermittedContent,\n  \"element-permitted-occurrences\": ElementPermittedOccurrences,\n  \"element-permitted-order\": ElementPermittedOrder,\n  \"element-required-attributes\": ElementRequiredAttributes,\n  \"element-required-content\": ElementRequiredContent,\n  \"empty-heading\": EmptyHeading,\n  \"empty-title\": EmptyTitle,\n  \"heading-level\": HeadingLevel,\n  \"id-pattern\": IdPattern,\n  \"input-attributes\": InputAttributes,\n  \"input-missing-label\": InputMissingLabel,\n  \"long-title\": LongTitle,\n  \"meta-refresh\": MetaRefresh,\n  \"missing-doctype\": MissingDoctype,\n  \"multiple-labeled-controls\": MultipleLabeledControls,\n  \"no-autoplay\": NoAutoplay,\n  \"no-conditional-comment\": NoConditionalComment,\n  \"no-deprecated-attr\": NoDeprecatedAttr,\n  \"no-dup-attr\": NoDupAttr,\n  \"no-dup-class\": NoDupClass,\n  \"no-dup-id\": NoDupID,\n  \"no-implicit-close\": NoImplicitClose,\n  \"no-inline-style\": NoInlineStyle,\n  \"no-missing-references\": NoMissingReferences,\n  \"no-multiple-main\": NoMultipleMain,\n  \"no-raw-characters\": NoRawCharacters,\n  \"no-redundant-for\": NoRedundantFor,\n  \"no-redundant-role\": NoRedundantRole,\n  \"no-self-closing\": NoSelfClosing,\n  \"no-style-tag\": NoStyleTag,\n  \"no-trailing-whitespace\": NoTrailingWhitespace,\n  \"no-unknown-elements\": NoUnknownElements,\n  \"no-utf8-bom\": NoUtf8Bom,\n  \"prefer-button\": PreferButton,\n  \"prefer-native-element\": PreferNativeElement,\n  \"prefer-tbody\": PreferTbody,\n  \"require-sri\": RequireSri,\n  \"script-element\": ScriptElement,\n  \"script-type\": ScriptType,\n  \"svg-focusable\": SvgFocusable,\n  \"text-content\": TextContent,\n  \"unrecognized-char-ref\": UnknownCharReference,\n  void: Void,\n  \"void-content\": VoidContent,\n  \"void-style\": VoidStyle,\n  ...bundledRules$1\n};\nvar defaultConfig = {};\nconst config$3 = {\n  rules: {\n    \"aria-hidden-body\": \"error\",\n    \"aria-label-misuse\": \"error\",\n    \"deprecated-rule\": \"warn\",\n    \"empty-heading\": \"error\",\n    \"empty-title\": \"error\",\n    \"meta-refresh\": \"error\",\n    \"multiple-labeled-controls\": \"error\",\n    \"no-autoplay\": [\"error\", {\n      include: [\"audio\", \"video\"]\n    }],\n    \"no-dup-id\": \"error\",\n    \"no-redundant-for\": \"error\",\n    \"no-redundant-role\": \"error\",\n    \"prefer-native-element\": \"error\",\n    \"svg-focusable\": \"error\",\n    \"text-content\": \"error\",\n    \"wcag/h30\": \"error\",\n    \"wcag/h32\": \"error\",\n    \"wcag/h36\": \"error\",\n    \"wcag/h37\": \"error\",\n    \"wcag/h67\": \"error\",\n    \"wcag/h71\": \"error\"\n  }\n};\nconst config$2 = {\n  rules: {\n    \"input-missing-label\": \"error\",\n    \"heading-level\": \"error\",\n    \"missing-doctype\": \"error\",\n    \"no-missing-references\": \"error\",\n    \"require-sri\": \"error\"\n  }\n};\nconst config$1 = {\n  rules: {\n    \"aria-hidden-body\": \"error\",\n    \"aria-label-misuse\": \"error\",\n    \"attr-case\": \"error\",\n    \"attr-delimiter\": \"error\",\n    \"attr-quotes\": \"error\",\n    \"attr-spacing\": \"error\",\n    \"attribute-allowed-values\": \"error\",\n    \"attribute-boolean-style\": \"error\",\n    \"attribute-empty-style\": \"error\",\n    \"close-attr\": \"error\",\n    \"close-order\": \"error\",\n    deprecated: \"error\",\n    \"deprecated-rule\": \"warn\",\n    \"doctype-html\": \"error\",\n    \"doctype-style\": \"error\",\n    \"element-case\": \"error\",\n    \"element-name\": \"error\",\n    \"element-permitted-content\": \"error\",\n    \"element-permitted-occurrences\": \"error\",\n    \"element-permitted-order\": \"error\",\n    \"element-required-attributes\": \"error\",\n    \"element-required-content\": \"error\",\n    \"empty-heading\": \"error\",\n    \"empty-title\": \"error\",\n    \"input-attributes\": \"error\",\n    \"long-title\": \"error\",\n    \"meta-refresh\": \"error\",\n    \"multiple-labeled-controls\": \"error\",\n    \"no-autoplay\": [\"error\", {\n      include: [\"audio\", \"video\"]\n    }],\n    \"no-conditional-comment\": \"error\",\n    \"no-deprecated-attr\": \"error\",\n    \"no-dup-attr\": \"error\",\n    \"no-dup-class\": \"error\",\n    \"no-dup-id\": \"error\",\n    \"no-implicit-close\": \"error\",\n    \"no-inline-style\": \"error\",\n    \"no-multiple-main\": \"error\",\n    \"no-raw-characters\": \"error\",\n    \"no-redundant-for\": \"error\",\n    \"no-redundant-role\": \"error\",\n    \"no-self-closing\": \"error\",\n    \"no-trailing-whitespace\": \"error\",\n    \"no-utf8-bom\": \"error\",\n    \"prefer-button\": \"error\",\n    \"prefer-native-element\": \"error\",\n    \"prefer-tbody\": \"error\",\n    \"script-element\": \"error\",\n    \"script-type\": \"error\",\n    \"svg-focusable\": \"error\",\n    \"text-content\": \"error\",\n    \"unrecognized-char-ref\": \"error\",\n    void: \"off\",\n    \"void-content\": \"error\",\n    \"void-style\": \"error\",\n    \"wcag/h30\": \"error\",\n    \"wcag/h32\": \"error\",\n    \"wcag/h36\": \"error\",\n    \"wcag/h37\": \"error\",\n    \"wcag/h67\": \"error\",\n    \"wcag/h71\": \"error\"\n  }\n};\nconst config = {\n  rules: {\n    \"attr-spacing\": \"error\",\n    \"attribute-allowed-values\": \"error\",\n    \"close-attr\": \"error\",\n    \"close-order\": \"error\",\n    deprecated: \"error\",\n    \"deprecated-rule\": \"warn\",\n    \"doctype-html\": \"error\",\n    \"element-name\": \"error\",\n    \"element-permitted-content\": \"error\",\n    \"element-permitted-occurrences\": \"error\",\n    \"element-permitted-order\": \"error\",\n    \"element-required-attributes\": \"error\",\n    \"element-required-content\": \"error\",\n    \"multiple-labeled-controls\": \"error\",\n    \"no-deprecated-attr\": \"error\",\n    \"no-dup-attr\": \"error\",\n    \"no-dup-id\": \"error\",\n    \"no-multiple-main\": \"error\",\n    \"no-raw-characters\": [\"error\", {\n      relaxed: true\n    }],\n    \"script-element\": \"error\",\n    \"unrecognized-char-ref\": \"error\",\n    \"void-content\": \"error\"\n  }\n};\n\n/**\n * @internal\n */\nconst presets = {\n  \"html-validate:a17y\": config$3,\n  \"html-validate:document\": config$2,\n  \"html-validate:recommended\": config$1,\n  \"html-validate:standard\": config,\n  /* @deprecated aliases */\n  \"htmlvalidate:recommended\": config$1,\n  \"htmlvalidate:document\": config$2\n};\n\n/**\n * A resolved configuration is a normalized configuration with all extends,\n * plugins etc resolved.\n */\nclass ResolvedConfig {\n  constructor(_ref10) {\n    let {\n      metaTable,\n      plugins,\n      rules,\n      transformers\n    } = _ref10;\n    this.metaTable = metaTable;\n    this.plugins = plugins;\n    this.rules = rules;\n    this.transformers = transformers;\n  }\n  getMetaTable() {\n    return this.metaTable;\n  }\n  getPlugins() {\n    return this.plugins;\n  }\n  getRules() {\n    return this.rules;\n  }\n  /**\n   * Transform a source.\n   *\n   * When transforming zero or more new sources will be generated.\n   *\n   * @param source - Current source to transform.\n   * @param filename - If set it is the filename used to match\n   * transformer. Default is to use filename from source.\n   * @returns A list of transformed sources ready for validation.\n   */\n  transformSource(source, filename) {\n    const transformer = this.findTransformer(filename || source.filename);\n    const context = {\n      hasChain: filename => {\n        return !!this.findTransformer(filename);\n      },\n      chain: (source, filename) => {\n        return this.transformSource(source, filename);\n      }\n    };\n    if (transformer) {\n      try {\n        return Array.from(transformer.fn.call(context, source), cur => {\n          /* keep track of which transformers that has been run on this source\n           * by appending this entry to the transformedBy array */\n          cur.transformedBy = cur.transformedBy || [];\n          cur.transformedBy.push(transformer.name);\n          return cur;\n        });\n      } catch (err) {\n        throw new NestedError(\"When transforming \\\"\".concat(source.filename, \"\\\": \").concat(err.message), err);\n      }\n    } else {\n      return [source];\n    }\n  }\n  /**\n   * Wrapper around [[transformSource]] which reads a file before passing it\n   * as-is to transformSource.\n   *\n   * @param source - Filename to transform (according to configured\n   * transformations)\n   * @returns A list of transformed sources ready for validation.\n   */\n  transformFilename(filename) {\n    const stdin = 0;\n    const src = filename !== \"/dev/stdin\" ? filename : stdin;\n    const data = fs__default[\"default\"].readFileSync(src, {\n      encoding: \"utf8\"\n    });\n    const source = {\n      data,\n      filename,\n      line: 1,\n      column: 1,\n      offset: 0,\n      originalData: data\n    };\n    return this.transformSource(source);\n  }\n  /**\n   * Returns true if a transformer matches given filename.\n   */\n  canTransform(filename) {\n    const entry = this.findTransformer(filename);\n    return !!entry;\n  }\n  findTransformer(filename) {\n    const match = this.transformers.find(entry => entry.pattern.test(filename));\n    return match !== null && match !== void 0 ? match : null;\n  }\n}\nlet rootDirCache = null;\nconst ajv = new Ajv__default[\"default\"]({\n  strict: true,\n  strictTuples: true,\n  strictTypes: true\n});\najv.addMetaSchema(ajvSchemaDraft);\nconst validator = ajv.compile(configurationSchema);\nfunction overwriteMerge(a, b) {\n  return b;\n}\nfunction mergeInternal(base, rhs) {\n  const dst = deepmerge__default[\"default\"](base, {\n    ...rhs,\n    rules: {}\n  });\n  /* rules need some special care, should overwrite arrays instead of\n   * concaternation, i.e. [\"error\", {...options}] should not be merged by\n   * appending to old value */\n  if (rhs.rules) {\n    dst.rules = deepmerge__default[\"default\"](dst.rules, rhs.rules, {\n      arrayMerge: overwriteMerge\n    });\n  }\n  /* root property is merged with boolean \"or\" since it should always be truthy\n   * if any config has it set. */\n  const root = base.root || rhs.root;\n  if (root) {\n    dst.root = root;\n  }\n  return dst;\n}\nfunction loadFromFile(filename) {\n  let json;\n  try {\n    /* load using require as it can process both js and json */\n    json = requireUncached(filename);\n  } catch (err) {\n    throw new ConfigError(\"Failed to read configuration from \\\"\".concat(filename, \"\\\"\"), err);\n  }\n  /* expand any relative paths */\n  for (const key of [\"extends\", \"elements\", \"plugins\"]) {\n    if (!json[key]) continue;\n    json[key] = json[key].map(ref => {\n      return Config.expandRelative(ref, path__default[\"default\"].dirname(filename));\n    });\n  }\n  return json;\n}\n/**\n * Configuration holder.\n *\n * Each file being validated will have a unique instance of this class.\n *\n * @public\n */\nclass Config {\n  /**\n   * @internal\n   */\n  constructor(options) {\n    var _a;\n    this.transformers = [];\n    const initial = {\n      extends: [],\n      plugins: [],\n      rules: {},\n      transform: {}\n    };\n    this.config = mergeInternal(initial, options || {});\n    this.metaTable = null;\n    this.rootDir = this.findRootDir();\n    this.initialized = false;\n    /* load plugins */\n    this.plugins = this.loadPlugins(this.config.plugins || []);\n    this.configurations = this.loadConfigurations(this.plugins);\n    this.extendMeta(this.plugins);\n    /* process extended configs */\n    this.config = this.extendConfig((_a = this.config.extends) !== null && _a !== void 0 ? _a : []);\n    /* reset extends as we already processed them, this prevents the next config\n     * from reapplying config from extended config as well as duplicate entries\n     * when merging arrays */\n    this.config.extends = [];\n    /* rules explicitly set by passed options should have precedence over any\n     * extended rules, not the other way around. */\n    if (options && options.rules) {\n      this.config = mergeInternal(this.config, {\n        rules: options.rules\n      });\n    }\n  }\n  /**\n   * Create a new blank configuration. See also `Config.defaultConfig()`.\n   */\n  static empty() {\n    return new Config({\n      extends: [],\n      rules: {},\n      plugins: [],\n      transform: {}\n    });\n  }\n  /**\n   * Create configuration from object.\n   */\n  static fromObject(options) {\n    let filename = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    Config.validate(options, filename);\n    return new Config(options);\n  }\n  /**\n   * Read configuration from filename.\n   *\n   * Note: this reads configuration data from a file. If you intent to load\n   * configuration for a file to validate use `ConfigLoader.fromTarget()`.\n   *\n   * @param filename - The file to read from or one of the presets such as\n   * `html-validate:recommended`.\n   */\n  static fromFile(filename) {\n    const configdata = loadFromFile(filename);\n    return Config.fromObject(configdata, filename);\n  }\n  /**\n   * Validate configuration data.\n   *\n   * Throws SchemaValidationError if invalid.\n   *\n   * @internal\n   */\n  static validate(configData) {\n    let filename = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var _a;\n    const valid = validator(configData);\n    if (!valid) {\n      throw new SchemaValidationError(filename, \"Invalid configuration\", configData, configurationSchema, (_a = validator.errors) !== null && _a !== void 0 ? _a : []);\n    }\n    if (configData.rules) {\n      const normalizedRules = Config.getRulesObject(configData.rules);\n      for (const [ruleId, [, ruleOptions]] of normalizedRules.entries()) {\n        const cls = bundledRules[ruleId];\n        const path = \"/rules/\".concat(ruleId, \"/1\");\n        Rule.validateOptions(cls, ruleId, path, ruleOptions, filename, configData);\n      }\n    }\n  }\n  /**\n   * Load a default configuration object.\n   */\n  static defaultConfig() {\n    return new Config(defaultConfig);\n  }\n  /**\n   * Initialize plugins, transforms etc.\n   *\n   * Must be called before trying to use config. Can safely be called multiple\n   * times.\n   *\n   * @internal\n   */\n  init() {\n    if (this.initialized) {\n      return;\n    }\n    /* precompile transform patterns */\n    this.transformers = this.precompileTransformers(this.config.transform || {});\n    this.initialized = true;\n  }\n  /**\n   * Returns true if this configuration is marked as \"root\".\n   */\n  isRootFound() {\n    return Boolean(this.config.root);\n  }\n  /**\n   * Returns a new configuration as a merge of the two. Entries from the passed\n   * object takes priority over this object.\n   *\n   * @internal\n   * @param rhs - Configuration to merge with this one.\n   */\n  merge(rhs) {\n    return new Config(mergeInternal(this.config, rhs.config));\n  }\n  extendConfig(entries) {\n    if (entries.length === 0) {\n      return this.config;\n    }\n    let base = {};\n    for (let i = 0; i < entries.length; i++) {\n      const entry = entries[i];\n      let extended;\n      if (this.configurations.has(entry)) {\n        extended = this.configurations.get(entry);\n      } else {\n        extended = Config.fromFile(entry).config;\n      }\n      base = mergeInternal(base, extended);\n    }\n    return mergeInternal(base, this.config);\n  }\n  /**\n   * Get element metadata.\n   */\n  getMetaTable() {\n    /* use cached table if it exists */\n    if (this.metaTable) {\n      return this.metaTable;\n    }\n    const metaTable = new MetaTable();\n    const source = this.config.elements || [\"html5\"];\n    /* extend validation schema from plugins */\n    for (const plugin of this.getPlugins()) {\n      if (plugin.elementSchema) {\n        metaTable.extendValidationSchema(plugin.elementSchema);\n      }\n    }\n    /* load from all entries */\n    for (const entry of source) {\n      /* load meta directly from entry */\n      if (typeof entry !== \"string\") {\n        metaTable.loadFromObject(entry);\n        continue;\n      }\n      let filename;\n      /* try searching builtin metadata */\n      filename = path__default[\"default\"].join(projectRoot, \"elements\", \"\".concat(entry, \".json\"));\n      if (fs__default[\"default\"].existsSync(filename)) {\n        metaTable.loadFromFile(filename);\n        continue;\n      }\n      /* try as regular file */\n      filename = entry.replace(\"<rootDir>\", this.rootDir);\n      if (fs__default[\"default\"].existsSync(filename)) {\n        metaTable.loadFromFile(filename);\n        continue;\n      }\n      /* assume it is loadable with require() */\n      try {\n        metaTable.loadFromObject(legacyRequire(entry));\n      } catch (err) {\n        throw new ConfigError(\"Failed to load elements from \\\"\".concat(entry, \"\\\": \").concat(err.message), err);\n      }\n    }\n    metaTable.init();\n    return this.metaTable = metaTable;\n  }\n  /**\n   * @internal exposed for testing only\n   */\n  static expandRelative(src, currentPath) {\n    if (src[0] === \".\") {\n      return path__default[\"default\"].normalize(\"\".concat(currentPath, \"/\").concat(src));\n    }\n    return src;\n  }\n  /**\n   * Get a copy of internal configuration data.\n   *\n   * @internal primary purpose is unittests\n   */\n  get() {\n    const config = {\n      ...this.config\n    };\n    if (config.elements) {\n      config.elements = config.elements.map(cur => {\n        if (typeof cur === \"string\") {\n          return cur.replace(this.rootDir, \"<rootDir>\");\n        } else {\n          return cur;\n        }\n      });\n    }\n    delete config.extends;\n    return config;\n  }\n  /**\n   * Get all configured rules, their severity and options.\n   *\n   * @internal\n   */\n  getRules() {\n    var _a;\n    return Config.getRulesObject((_a = this.config.rules) !== null && _a !== void 0 ? _a : {});\n  }\n  static getRulesObject(src) {\n    const rules = new Map();\n    for (const [ruleId, data] of Object.entries(src)) {\n      let options = data;\n      if (!Array.isArray(options)) {\n        options = [options, {}];\n      } else if (options.length === 1) {\n        options = [options[0], {}];\n      }\n      const severity = parseSeverity(options[0]);\n      rules.set(ruleId, [severity, options[1]]);\n    }\n    return rules;\n  }\n  /**\n   * Get all configured plugins.\n   *\n   * @internal\n   */\n  getPlugins() {\n    return this.plugins;\n  }\n  loadPlugins(plugins) {\n    return plugins.map(moduleName => {\n      try {\n        const plugin = legacyRequire(moduleName.replace(\"<rootDir>\", this.rootDir));\n        plugin.name = plugin.name || moduleName;\n        plugin.originalName = moduleName;\n        return plugin;\n      } catch (err) {\n        throw new ConfigError(\"Failed to load plugin \\\"\".concat(moduleName, \"\\\": \").concat(err), err);\n      }\n    });\n  }\n  loadConfigurations(plugins) {\n    const configs = new Map();\n    /* builtin presets */\n    for (const [name, config] of Object.entries(presets)) {\n      Config.validate(config, name);\n      configs.set(name, config);\n    }\n    /* presets from plugins */\n    for (const plugin of plugins) {\n      for (const [name, config] of Object.entries(plugin.configs || {})) {\n        if (!config) continue;\n        Config.validate(config, name);\n        /* add configuration with name provided by plugin */\n        configs.set(\"\".concat(plugin.name, \":\").concat(name), config);\n        /* add configuration with name provided by user (in config file) */\n        if (plugin.name !== plugin.originalName) {\n          configs.set(\"\".concat(plugin.originalName, \":\").concat(name), config);\n        }\n      }\n    }\n    return configs;\n  }\n  extendMeta(plugins) {\n    for (const plugin of plugins) {\n      if (!plugin.elementSchema) {\n        continue;\n      }\n      const {\n        properties\n      } = plugin.elementSchema;\n      if (!properties) {\n        continue;\n      }\n      for (const [raw, schema] of Object.entries(properties)) {\n        /* at compile time this is a fixed list but the point of this method is\n         * to augment the runtime with additional keys so it is a bit of lying\n         * to typescript */\n        const key = raw;\n        if (schema.copyable && !MetaCopyableProperty.includes(key)) {\n          MetaCopyableProperty.push(key);\n        }\n      }\n    }\n  }\n  /**\n   * Resolve all configuration and return a [[ResolvedConfig]] instance.\n   *\n   * A resolved configuration will merge all extended configs and load all\n   * plugins and transformers, and normalize the rest of the configuration.\n   *\n   * @internal\n   */\n  resolve() {\n    return new ResolvedConfig(this.resolveData());\n  }\n  /**\n   * Same as [[resolve]] but returns the raw configuration data instead of\n   * [[ResolvedConfig]] instance. Mainly used for testing.\n   *\n   * @internal\n   */\n  resolveData() {\n    return {\n      metaTable: this.getMetaTable(),\n      plugins: this.getPlugins(),\n      rules: this.getRules(),\n      transformers: this.transformers\n    };\n  }\n  precompileTransformers(transform) {\n    return Object.entries(transform).map(_ref11 => {\n      let [pattern, name] = _ref11;\n      try {\n        const fn = this.getTransformFunction(name);\n        const version = fn.api || 0;\n        /* check if transformer version is supported */\n        if (version !== TRANSFORMER_API.VERSION) {\n          throw new ConfigError(\"Transformer uses API version \".concat(version, \" but only version \").concat(TRANSFORMER_API.VERSION, \" is supported\"));\n        }\n        return {\n          // eslint-disable-next-line security/detect-non-literal-regexp\n          pattern: new RegExp(pattern),\n          name,\n          fn\n        };\n      } catch (err) {\n        if (err instanceof ConfigError) {\n          throw new ConfigError(\"Failed to load transformer \\\"\".concat(name, \"\\\": \").concat(err.message), err);\n        } else {\n          throw new ConfigError(\"Failed to load transformer \\\"\".concat(name, \"\\\"\"), err);\n        }\n      }\n    });\n  }\n  /**\n   * Get transformation function requested by configuration.\n   *\n   * Searches:\n   *\n   * - Named transformers from plugins.\n   * - Unnamed transformer from plugin.\n   * - Standalone modules (local or node_modules)\n   *\n   * @param name - Key from configuration\n   */\n  getTransformFunction(name) {\n    /* try to match a named transformer from plugin */\n    const match = name.match(/(.*):(.*)/);\n    if (match) {\n      const [, pluginName, key] = match;\n      return this.getNamedTransformerFromPlugin(name, pluginName, key);\n    }\n    /* try to match an unnamed transformer from plugin */\n    const plugin = this.plugins.find(cur => cur.name === name);\n    if (plugin) {\n      return this.getUnnamedTransformerFromPlugin(name, plugin);\n    }\n    /* assume transformer refers to a regular module */\n    return this.getTransformerFromModule(name);\n  }\n  /**\n   * @param name - Original name from configuration\n   * @param pluginName - Name of plugin\n   * @param key - Name of transform (from plugin)\n   */\n  getNamedTransformerFromPlugin(name, pluginName, key) {\n    const plugin = this.plugins.find(cur => cur.name === pluginName);\n    if (!plugin) {\n      throw new ConfigError(\"No plugin named \\\"\".concat(pluginName, \"\\\" has been loaded\"));\n    }\n    if (!plugin.transformer) {\n      throw new ConfigError(\"Plugin does not expose any transformer\");\n    }\n    if (typeof plugin.transformer === \"function\") {\n      throw new ConfigError(\"Transformer \\\"\".concat(name, \"\\\" refers to named transformer but plugin exposes only unnamed, use \\\"\").concat(pluginName, \"\\\" instead.\"));\n    }\n    const transformer = plugin.transformer[key];\n    if (!transformer) {\n      throw new ConfigError(\"Plugin \\\"\".concat(pluginName, \"\\\" does not expose a transformer named \\\"\").concat(key, \"\\\".\"));\n    }\n    return transformer;\n  }\n  /**\n   * @param name - Original name from configuration\n   * @param plugin - Plugin instance\n   */\n  getUnnamedTransformerFromPlugin(name, plugin) {\n    if (!plugin.transformer) {\n      throw new ConfigError(\"Plugin does not expose any transformer\");\n    }\n    if (typeof plugin.transformer !== \"function\") {\n      if (plugin.transformer.default) {\n        return plugin.transformer.default;\n      }\n      throw new ConfigError(\"Transformer \\\"\".concat(name, \"\\\" refers to unnamed transformer but plugin exposes only named.\"));\n    }\n    return plugin.transformer;\n  }\n  getTransformerFromModule(name) {\n    /* expand <rootDir> */\n    const moduleName = name.replace(\"<rootDir>\", this.rootDir);\n    const fn = legacyRequire(moduleName);\n    /* sanity check */\n    if (typeof fn !== \"function\") {\n      /* this is not a proper transformer, is it a plugin exposing a transformer? */\n      if (fn.transformer) {\n        throw new ConfigError(\"Module is not a valid transformer. This looks like a plugin, did you forget to load the plugin first?\");\n      }\n      throw new ConfigError(\"Module is not a valid transformer.\");\n    }\n    return fn;\n  }\n  /**\n   * @internal\n   */\n  get rootDirCache() {\n    /* return global instance */\n    return rootDirCache;\n  }\n  set rootDirCache(value) {\n    /* set global instance */\n    rootDirCache = value;\n  }\n  findRootDir() {\n    const cache = this.rootDirCache;\n    if (cache !== null) {\n      return cache;\n    }\n    /* try to locate package.json */\n    let current = process.cwd();\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      const search = path__default[\"default\"].join(current, \"package.json\");\n      if (fs__default[\"default\"].existsSync(search)) {\n        return this.rootDirCache = current;\n      }\n      /* get the parent directory */\n      const child = current;\n      current = path__default[\"default\"].dirname(current);\n      /* stop if this is the root directory */\n      if (current === child) {\n        break;\n      }\n    }\n    /* default to working directory if no package.json is found */\n    return this.rootDirCache = process.cwd();\n  }\n}\n\n/**\n * Configuration loader interface.\n *\n * A configuration loader takes a handle (typically a filename) and returns a\n * configuration for it.\n *\n * @public\n */\nclass ConfigLoader {\n  constructor(config) {\n    let configFactory = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Config;\n    const defaults = configFactory.empty();\n    this.configFactory = configFactory;\n    this.globalConfig = defaults.merge(config ? this.loadFromObject(config) : this.defaultConfig());\n  }\n  empty() {\n    return this.configFactory.empty();\n  }\n  loadFromObject(options, filename) {\n    return this.configFactory.fromObject(options, filename);\n  }\n  loadFromFile(filename) {\n    return this.configFactory.fromFile(filename);\n  }\n}\n\n/**\n * @internal\n */\nclass EventHandler {\n  constructor() {\n    this.listeners = {};\n  }\n  /**\n   * Add an event listener.\n   *\n   * @param event - Event names (comma separated) or '*' for any event.\n   * @param callback - Called any time even triggers.\n   * @returns Unregistration function.\n   */\n  on(event, callback) {\n    const names = event.split(\",\").map(x => x.trim());\n    for (const name of names) {\n      this.listeners[name] = this.listeners[name] || [];\n      this.listeners[name].push(callback);\n    }\n    return () => {\n      for (const name of names) {\n        this.listeners[name] = this.listeners[name].filter(fn => {\n          return fn !== callback;\n        });\n      }\n    };\n  }\n  /**\n   * Add a onetime event listener. The listener will automatically be removed\n   * after being triggered once.\n   *\n   * @param event - Event names (comma separated) or '*' for any event.\n   * @param callback - Called any time even triggers.\n   * @returns Unregistration function.\n   */\n  once(event, callback) {\n    const deregister = this.on(event, (event, data) => {\n      callback(event, data);\n      deregister();\n    });\n    return deregister;\n  }\n  /**\n   * Trigger event causing all listeners to be called.\n   *\n   * @param event - Event name.\n   * @param data - Event data.\n   */\n  /* eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types */\n  trigger(event, data) {\n    var _a, _b;\n    const callbacks = [...((_a = this.listeners[event]) !== null && _a !== void 0 ? _a : []), ...((_b = this.listeners[\"*\"]) !== null && _b !== void 0 ? _b : [])];\n    callbacks.forEach(listener => {\n      listener.call(null, event, data);\n    });\n  }\n}\nconst regexp = /<!(?:--)?\\[(.*?)\\](?:--)?>/g;\nfunction* parseConditionalComment(comment, commentLocation) {\n  let match;\n  while ((match = regexp.exec(comment)) !== null) {\n    const expression = match[1];\n    const begin = match.index;\n    const end = begin + match[0].length;\n    const location = sliceLocation(commentLocation, begin, end, comment);\n    yield {\n      expression,\n      location\n    };\n  }\n}\nclass ParserError extends Error {\n  constructor(location, message) {\n    super(message);\n    this.location = location;\n  }\n}\nfunction isAttrValueToken(token) {\n  return Boolean(token && token.type === exports.TokenType.ATTR_VALUE);\n}\n/**\n * Parse HTML document into a DOM tree.\n *\n * @internal\n */\nclass Parser {\n  /**\n   * Create a new parser instance.\n   *\n   * @param config - Configuration\n   */\n  constructor(config) {\n    this.event = new EventHandler();\n    this.dom = null;\n    this.metaTable = config.getMetaTable();\n  }\n  /**\n   * Parse HTML markup.\n   *\n   * @param source - HTML markup.\n   * @returns DOM tree representing the HTML markup.\n   */\n  // eslint-disable-next-line complexity\n  parseHtml(source) {\n    var _a, _b, _c, _d;\n    if (typeof source === \"string\") {\n      source = {\n        data: source,\n        filename: \"inline\",\n        line: 1,\n        column: 1,\n        offset: 0\n      };\n    }\n    /* reset DOM in case there are multiple calls in the same session */\n    this.dom = new DOMTree({\n      filename: (_a = source.filename) !== null && _a !== void 0 ? _a : \"\",\n      offset: (_b = source.offset) !== null && _b !== void 0 ? _b : 0,\n      line: (_c = source.line) !== null && _c !== void 0 ? _c : 1,\n      column: (_d = source.column) !== null && _d !== void 0 ? _d : 1,\n      size: 0\n    });\n    /* trigger any rules waiting for DOM load event */\n    this.trigger(\"dom:load\", {\n      source,\n      location: null\n    });\n    const lexer = new Lexer();\n    const tokenStream = lexer.tokenize(source);\n    /* consume all tokens from the stream */\n    let it = this.next(tokenStream);\n    while (!it.done) {\n      const token = it.value;\n      switch (token.type) {\n        case exports.TokenType.UNICODE_BOM:\n          /* ignore */\n          break;\n        case exports.TokenType.TAG_OPEN:\n          this.consumeTag(source, token, tokenStream);\n          break;\n        case exports.TokenType.WHITESPACE:\n          this.trigger(\"whitespace\", {\n            text: token.data[0],\n            location: token.location\n          });\n          this.appendText(token.data[0], token.location);\n          break;\n        case exports.TokenType.DIRECTIVE:\n          this.consumeDirective(token);\n          break;\n        case exports.TokenType.CONDITIONAL:\n          this.consumeConditional(token);\n          break;\n        case exports.TokenType.COMMENT:\n          this.consumeComment(token);\n          break;\n        case exports.TokenType.DOCTYPE_OPEN:\n          this.consumeDoctype(token, tokenStream);\n          break;\n        case exports.TokenType.TEXT:\n        case exports.TokenType.TEMPLATING:\n          this.appendText(token.data[0], token.location);\n          break;\n        case exports.TokenType.EOF:\n          this.closeTree(source, token.location);\n          break;\n      }\n      it = this.next(tokenStream);\n    }\n    /* resolve any dynamic meta element properties */\n    this.dom.resolveMeta(this.metaTable);\n    /* trigger any rules waiting for DOM ready */\n    this.trigger(\"dom:ready\", {\n      document: this.dom,\n      source,\n      /* disable location for this event so rules can use implicit node location\n       * instead */\n      location: null\n    });\n    return this.dom.root;\n  }\n  /**\n   * Detect optional end tag.\n   *\n   * Some tags have optional end tags (e.g. <ul><li>foo<li>bar</ul> is\n   * valid). The parser handles this by checking if the element on top of the\n   * stack when is allowed to omit.\n   */\n  closeOptional(token) {\n    /* if the element doesn't have metadata it cannot have optional end\n     * tags. Period. */\n    const active = this.dom.getActive();\n    if (!(active.meta && active.meta.implicitClosed)) {\n      return false;\n    }\n    const tagName = token.data[2];\n    const open = !token.data[1];\n    const meta = active.meta.implicitClosed;\n    if (open) {\n      /* a new element is opened, check if the new element should close the\n       * previous */\n      return meta.includes(tagName);\n    } else {\n      /* if we are explicitly closing the active element, ignore implicit */\n      if (active.is(tagName)) {\n        return false;\n      }\n      /* the parent element is closed, check if the active element would be\n       * implicitly closed when parent is. */\n      return Boolean(active.parent && active.parent.is(tagName) && meta.includes(active.tagName));\n    }\n  }\n  /* eslint-disable-next-line complexity, sonarjs/cognitive-complexity */\n  consumeTag(source, startToken, tokenStream) {\n    const tokens = Array.from(this.consumeUntil(tokenStream, exports.TokenType.TAG_CLOSE, startToken.location));\n    const endToken = tokens.slice(-1)[0];\n    const closeOptional = this.closeOptional(startToken);\n    const parent = closeOptional ? this.dom.getActive().parent : this.dom.getActive();\n    const node = HtmlElement.fromTokens(startToken, endToken, parent, this.metaTable);\n    const isStartTag = !startToken.data[1];\n    const isClosing = !isStartTag || node.closed !== exports.NodeClosed.Open;\n    const isForeign = node.meta && node.meta.foreign;\n    /* if the previous tag to be implicitly closed by the current tag we close\n     * it and pop it from the stack before continuing processing this tag */\n    if (closeOptional) {\n      const active = this.dom.getActive();\n      active.closed = exports.NodeClosed.ImplicitClosed;\n      this.closeElement(source, node, active, startToken.location);\n      this.dom.popActive();\n    }\n    if (isStartTag) {\n      this.dom.pushActive(node);\n      this.trigger(\"tag:start\", {\n        target: node,\n        location: startToken.location\n      });\n    }\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n      switch (token.type) {\n        case exports.TokenType.WHITESPACE:\n          break;\n        case exports.TokenType.ATTR_NAME:\n          this.consumeAttribute(source, node, token, tokens[i + 1]);\n          break;\n      }\n    }\n    /* emit tag:ready unless this is a end tag */\n    if (isStartTag) {\n      this.trigger(\"tag:ready\", {\n        target: node,\n        location: endToken.location\n      });\n    }\n    if (isClosing) {\n      const active = this.dom.getActive();\n      /* if this is not an open tag it is a close tag and thus we force it to be\n       * one, in case it is detected as void */\n      if (!isStartTag) {\n        node.closed = exports.NodeClosed.EndTag;\n      }\n      this.closeElement(source, node, active, endToken.location);\n      /* if this element is closed with an end tag but is would it will not be\n       * closed again (it is already closed automatically since it is\n       * void). Closing again will have side-effects as it will close the parent\n       * and cause a mess later. */\n      const voidClosed = !isStartTag && node.voidElement;\n      if (!voidClosed) {\n        this.dom.popActive();\n      }\n    } else if (isForeign) {\n      /* consume the body of the foreign element so it won't be part of the\n       * document (only the root foreign element is).  */\n      this.discardForeignBody(source, node.tagName, tokenStream, startToken.location);\n    }\n  }\n  closeElement(source, node, active, location) {\n    /* call processElement hook */\n    this.processElement(active, source);\n    /* trigger event for the closing of the element (the </> tag)*/\n    const event = {\n      target: node,\n      previous: active,\n      location\n    };\n    this.trigger(\"tag:end\", event);\n    /* trigger event for for an element being fully constructed. Special care\n     * for void elements explicit closed <input></input> */\n    if (active && !active.isRootElement()) {\n      this.trigger(\"element:ready\", {\n        target: active,\n        location: active.location\n      });\n    }\n  }\n  processElement(node, source) {\n    /* enable cache on node now that it is fully constructed */\n    node.cacheEnable();\n    if (source.hooks && source.hooks.processElement) {\n      const processElement = source.hooks.processElement;\n      const metaTable = this.metaTable;\n      const context = {\n        getMetaFor(tagName) {\n          return metaTable.getMetaFor(tagName);\n        }\n      };\n      processElement.call(context, node);\n    }\n  }\n  /**\n   * Discard tokens until the end tag for the foreign element is found.\n   */\n  discardForeignBody(source, foreignTagName, tokenStream, errorLocation) {\n    /* consume elements until the end tag for this foreign element is found */\n    let nested = 1;\n    let startToken;\n    let endToken;\n    do {\n      /* search for tags */\n      const tokens = Array.from(this.consumeUntil(tokenStream, exports.TokenType.TAG_OPEN, errorLocation));\n      const [last] = tokens.slice(-1);\n      const [, tagClosed, tagName] = last.data;\n      /* keep going unless the new tag matches the foreign root element */\n      if (tagName !== foreignTagName) {\n        continue;\n      }\n      /* locate end token and determine if this is a self-closed tag */\n      const endTokens = Array.from(this.consumeUntil(tokenStream, exports.TokenType.TAG_CLOSE, last.location));\n      endToken = endTokens.slice(-1)[0];\n      const selfClosed = endToken.data[0] === \"/>\";\n      /* since foreign element may be nested keep a count for the number of\n       * opened/closed elements */\n      if (tagClosed) {\n        startToken = last;\n        nested--;\n      } else if (!selfClosed) {\n        nested++;\n      }\n    } while (nested > 0);\n    /* istanbul ignore next: this should never happen because `consumeUntil`\n     * would have thrown errors however typescript does not know that */\n    if (!startToken || !endToken) {\n      return;\n    }\n    const active = this.dom.getActive();\n    const node = HtmlElement.fromTokens(startToken, endToken, active, this.metaTable);\n    this.closeElement(source, node, active, endToken.location);\n    this.dom.popActive();\n  }\n  consumeAttribute(source, node, token, next) {\n    const keyLocation = this.getAttributeKeyLocation(token);\n    const valueLocation = this.getAttributeValueLocation(next);\n    const location = this.getAttributeLocation(token, next);\n    const haveValue = isAttrValueToken(next);\n    const attrData = {\n      key: token.data[1],\n      value: null,\n      quote: null\n    };\n    if (haveValue) {\n      const [,, value, quote] = next.data;\n      attrData.value = value;\n      attrData.quote = quote !== null && quote !== void 0 ? quote : null;\n    }\n    /* get callback to process attributes, default is to just return attribute\n     * data right away but a transformer may override it to allow aliasing\n     * attributes, e.g ng-attr-foo or v-bind:foo */\n    let processAttribute = attr => [attr];\n    if (source.hooks && source.hooks.processAttribute) {\n      processAttribute = source.hooks.processAttribute;\n    }\n    /* handle deprecated callbacks */\n    let iterator;\n    const legacy = processAttribute.call({}, attrData);\n    if (typeof legacy[Symbol.iterator] !== \"function\") {\n      /* AttributeData */\n      iterator = [attrData];\n    } else {\n      /* Iterable<AttributeData> */\n      iterator = legacy;\n    }\n    /* process attribute(s) */\n    for (const attr of iterator) {\n      const event = {\n        target: node,\n        key: attr.key,\n        value: attr.value,\n        quote: attr.quote,\n        originalAttribute: attr.originalAttribute,\n        location,\n        keyLocation,\n        valueLocation\n      };\n      this.trigger(\"attr\", event);\n      node.setAttribute(attr.key, attr.value, keyLocation, valueLocation, attr.originalAttribute);\n    }\n  }\n  /**\n   * Takes attribute key token an returns location.\n   */\n  getAttributeKeyLocation(token) {\n    return token.location;\n  }\n  /**\n   * Take attribute value token and return a new location referring to only the\n   * value.\n   *\n   * foo=\"bar\"    foo='bar'    foo=bar    foo      foo=\"\"\n   *      ^^^          ^^^         ^^^    (null)   (null)\n   */\n  getAttributeValueLocation(token) {\n    if (!token || token.type !== exports.TokenType.ATTR_VALUE || token.data[2] === \"\") {\n      return null;\n    }\n    const quote = token.data[3];\n    if (quote) {\n      return sliceLocation(token.location, 2, -1);\n    } else {\n      return sliceLocation(token.location, 1);\n    }\n  }\n  /**\n   * Take attribute key and value token an returns a new location referring to\n   * an aggregate location covering key, quotes if present and value.\n   */\n  getAttributeLocation(key, value) {\n    var _a;\n    const begin = key.location;\n    const end = value && value.type === exports.TokenType.ATTR_VALUE ? value.location : undefined;\n    return {\n      filename: begin.filename,\n      line: begin.line,\n      column: begin.column,\n      size: begin.size + ((_a = end === null || end === void 0 ? void 0 : end.size) !== null && _a !== void 0 ? _a : 0),\n      offset: begin.offset\n    };\n  }\n  consumeDirective(token) {\n    const [text,, action, directive, end] = token.data;\n    if (end === \"\") {\n      throw new Error(\"Missing end bracket \\\"]\\\" on directive \\\"\".concat(text, \"\\\"\"));\n    }\n    const match = directive.match(/^(.*?)(?:\\s*(?:--|:)\\s*(.*))?$/);\n    /* istanbul ignore next: should not be possible, would be emitted as comment token */\n    if (!match) {\n      throw new Error(\"Failed to parse directive \\\"\".concat(text, \"\\\"\"));\n    }\n    const [, data, comment] = match;\n    this.trigger(\"directive\", {\n      action,\n      data,\n      comment: comment || \"\",\n      location: token.location\n    });\n  }\n  /**\n   * Consumes conditional comment in tag form.\n   *\n   * See also the related [[consumeCommend]] method.\n   */\n  consumeConditional(token) {\n    const element = this.dom.getActive();\n    this.trigger(\"conditional\", {\n      condition: token.data[1],\n      location: token.location,\n      parent: element\n    });\n  }\n  /**\n   * Consumes comment token.\n   *\n   * Tries to find IE conditional comments and emits conditional token if\n   * found. See also the related [[consumeConditional]] method.\n   */\n  consumeComment(token) {\n    const comment = token.data[0];\n    const element = this.dom.getActive();\n    for (const conditional of parseConditionalComment(comment, token.location)) {\n      this.trigger(\"conditional\", {\n        condition: conditional.expression,\n        location: conditional.location,\n        parent: element\n      });\n    }\n  }\n  /**\n   * Consumes doctype tokens. Emits doctype event.\n   */\n  consumeDoctype(startToken, tokenStream) {\n    const tokens = Array.from(this.consumeUntil(tokenStream, exports.TokenType.DOCTYPE_CLOSE, startToken.location));\n    /* first token is the doctype, second is the closing \">\" */\n    const doctype = tokens[0];\n    const value = doctype.data[0];\n    this.dom.doctype = value;\n    this.trigger(\"doctype\", {\n      tag: startToken.data[1],\n      value,\n      valueLocation: tokens[0].location,\n      location: startToken.location\n    });\n  }\n  /**\n   * Return a list of tokens found until the expected token was found.\n   *\n   * @param errorLocation - What location to use if an error occurs\n   */\n  *consumeUntil(tokenStream, search, errorLocation) {\n    let it = this.next(tokenStream);\n    while (!it.done) {\n      const token = it.value;\n      yield token;\n      if (token.type === search) return;\n      it = this.next(tokenStream);\n    }\n    throw new ParserError(errorLocation, \"stream ended before \".concat(exports.TokenType[search], \" token was found\"));\n  }\n  next(tokenStream) {\n    const it = tokenStream.next();\n    if (!it.done) {\n      const token = it.value;\n      this.trigger(\"token\", {\n        location: token.location,\n        type: token.type,\n        data: Array.from(token.data)\n      });\n    }\n    return it;\n  }\n  on(event, listener) {\n    return this.event.on(event, listener);\n  }\n  once(event, listener) {\n    return this.event.once(event, listener);\n  }\n  /**\n   * Defer execution. Will call function sometime later.\n   *\n   * @param cb - Callback to execute later.\n   */\n  defer(cb) {\n    this.event.once(\"*\", cb);\n  }\n  trigger(event, data) {\n    if (typeof data.location === \"undefined\") {\n      throw new Error(\"Triggered event must contain location\");\n    }\n    this.event.trigger(event, data);\n  }\n  /**\n   * @internal\n   */\n  getEventHandler() {\n    return this.event;\n  }\n  /**\n   * Appends a text node to the current element on the stack.\n   */\n  appendText(text, location) {\n    this.dom.getActive().appendText(text, location);\n  }\n  /**\n   * Trigger close events for any still open elements.\n   */\n  closeTree(source, location) {\n    let active;\n    while ((active = this.dom.getActive()) && !active.isRootElement()) {\n      this.closeElement(source, null, active, location);\n      this.dom.popActive();\n    }\n  }\n}\n\n/**\n * @internal\n */\nclass Reporter {\n  constructor() {\n    this.result = {};\n  }\n  /**\n   * Merge two or more reports into a single one.\n   */\n  static merge(reports) {\n    const valid = reports.every(report => report.valid);\n    const merged = {};\n    reports.forEach(report => {\n      report.results.forEach(result => {\n        const key = result.filePath;\n        if (key in merged) {\n          merged[key].messages = [...merged[key].messages, ...result.messages];\n        } else {\n          merged[key] = {\n            ...result\n          };\n        }\n      });\n    });\n    const results = Object.values(merged).map(result => {\n      /* recalculate error- and warning-count */\n      result.errorCount = countErrors(result.messages);\n      result.warningCount = countWarnings(result.messages);\n      return result;\n    });\n    return {\n      valid,\n      results,\n      errorCount: sumErrors(results),\n      warningCount: sumWarnings(results)\n    };\n  }\n  add(rule, message, severity, node, location, context) {\n    var _a;\n    if (!(location.filename in this.result)) {\n      this.result[location.filename] = [];\n    }\n    this.result[location.filename].push({\n      ruleId: rule.name,\n      ruleUrl: (_a = rule.documentation(context)) === null || _a === void 0 ? void 0 : _a.url,\n      severity,\n      message,\n      offset: location.offset,\n      line: location.line,\n      column: location.column,\n      size: location.size || 0,\n      selector: node ? node.generateSelector() : null,\n      context\n    });\n  }\n  addManual(filename, message) {\n    if (!(filename in this.result)) {\n      this.result[filename] = [];\n    }\n    this.result[filename].push(message);\n  }\n  save(sources) {\n    const report = {\n      valid: this.isValid(),\n      results: Object.keys(this.result).map(filePath => {\n        const messages = Array.from(this.result[filePath]).sort(messageSort);\n        const source = (sources || []).find(source => {\n          var _a;\n          return filePath === ((_a = source.filename) !== null && _a !== void 0 ? _a : \"\");\n        });\n        return {\n          filePath,\n          messages,\n          errorCount: countErrors(messages),\n          warningCount: countWarnings(messages),\n          source: source ? source.originalData || source.data : null\n        };\n      }),\n      errorCount: 0,\n      warningCount: 0\n    };\n    report.errorCount = sumErrors(report.results);\n    report.warningCount = sumWarnings(report.results);\n    return report;\n  }\n  isValid() {\n    const numErrors = Object.values(this.result).reduce((sum, messages) => {\n      return sum + countErrors(messages);\n    }, 0);\n    return numErrors === 0;\n  }\n}\nfunction countErrors(messages) {\n  return messages.filter(m => m.severity === exports.Severity.ERROR).length;\n}\nfunction countWarnings(messages) {\n  return messages.filter(m => m.severity === exports.Severity.WARN).length;\n}\nfunction sumErrors(results) {\n  return results.reduce((sum, result) => {\n    return sum + result.errorCount;\n  }, 0);\n}\nfunction sumWarnings(results) {\n  return results.reduce((sum, result) => {\n    return sum + result.warningCount;\n  }, 0);\n}\nfunction messageSort(a, b) {\n  if (a.line < b.line) {\n    return -1;\n  }\n  if (a.line > b.line) {\n    return 1;\n  }\n  if (a.column < b.column) {\n    return -1;\n  }\n  if (a.column > b.column) {\n    return 1;\n  }\n  return 0;\n}\n\n/**\n * @internal\n */\nclass Engine {\n  constructor(config, ParserClass) {\n    this.report = new Reporter();\n    this.config = config;\n    this.ParserClass = ParserClass;\n    /* initialize plugins and rules */\n    const result = this.initPlugins(this.config);\n    this.availableRules = {\n      ...bundledRules,\n      ...result.availableRules\n    };\n  }\n  /**\n   * Lint sources and return report\n   *\n   * @param src - Parsed source.\n   * @returns Report output.\n   */\n  lint(sources) {\n    for (const source of sources) {\n      /* create parser for source */\n      const parser = this.instantiateParser();\n      /* setup plugins and rules */\n      const {\n        rules\n      } = this.setupPlugins(source, this.config, parser);\n      /* create a faux location at the start of the stream for the next events */\n      const location = {\n        filename: source.filename,\n        line: 1,\n        column: 1,\n        offset: 0,\n        size: 1\n      };\n      /* trigger configuration ready event */\n      const configEvent = {\n        location,\n        config: this.config,\n        rules\n      };\n      parser.trigger(\"config:ready\", configEvent);\n      /* trigger source ready event */\n      /* eslint-disable-next-line @typescript-eslint/no-unused-vars -- object destructured on purpose to remove property */\n      const {\n        hooks: _,\n        ...sourceData\n      } = source;\n      const sourceEvent = {\n        location,\n        source: sourceData\n      };\n      parser.trigger(\"source:ready\", sourceEvent);\n      /* setup directive handling */\n      parser.on(\"directive\", (_, event) => {\n        this.processDirective(event, parser, rules);\n      });\n      /* parse token stream */\n      try {\n        parser.parseHtml(source);\n      } catch (e) {\n        if (e instanceof InvalidTokenError || e instanceof ParserError) {\n          this.reportError(\"parser-error\", e.message, e.location);\n        } else {\n          throw e;\n        }\n      }\n    }\n    /* generate results from report */\n    return this.report.save(sources);\n  }\n  /**\n   * Returns a list of all events generated while parsing the source.\n   *\n   * For verbosity, token events are ignored (use [[dumpTokens]] to inspect\n   * token stream).\n   */\n  dumpEvents(source) {\n    const parser = this.instantiateParser();\n    const lines = [];\n    parser.on(\"*\", (event, data) => {\n      /* ignore token events as it becomes to verbose */\n      if (event === \"token\") {\n        return;\n      }\n      lines.push({\n        event,\n        data\n      });\n    });\n    source.forEach(src => parser.parseHtml(src));\n    return lines;\n  }\n  dumpTokens(source) {\n    var _a;\n    const lexer = new Lexer();\n    const lines = [];\n    for (const src of source) {\n      for (const token of lexer.tokenize(src)) {\n        const data = (_a = token.data[0]) !== null && _a !== void 0 ? _a : \"\";\n        lines.push({\n          token: exports.TokenType[token.type],\n          data,\n          location: \"\".concat(token.location.filename, \":\").concat(token.location.line, \":\").concat(token.location.column)\n        });\n      }\n    }\n    return lines;\n  }\n  dumpTree(source) {\n    /* @todo handle dumping each tree */\n    const parser = this.instantiateParser();\n    const document = parser.parseHtml(source[0]);\n    const lines = [];\n    function decoration(node) {\n      let output = \"\";\n      if (node.hasAttribute(\"id\")) {\n        output += \"#\".concat(node.id);\n      }\n      if (node.hasAttribute(\"class\")) {\n        output += \".\".concat(node.classList.join(\".\"));\n      }\n      return output;\n    }\n    function writeNode(node, level, sibling) {\n      if (node.parent) {\n        const indent = \"  \".repeat(level - 1);\n        const l = node.childElements.length > 0 ? \"┬\" : \"─\";\n        const b = sibling < node.parent.childElements.length - 1 ? \"├\" : \"└\";\n        lines.push(\"\".concat(indent).concat(b, \"\\u2500\").concat(l, \" \").concat(node.tagName).concat(decoration(node)));\n      } else {\n        lines.push(\"(root)\");\n      }\n      node.childElements.forEach((child, index) => writeNode(child, level + 1, index));\n    }\n    writeNode(document, 0, 0);\n    return lines;\n  }\n  /**\n   * Get rule documentation.\n   */\n  getRuleDocumentation(ruleId, context // eslint-disable-line @typescript-eslint/explicit-module-boundary-types\n  ) {\n    const rules = this.config.getRules();\n    if (rules.has(ruleId)) {\n      const [, options] = rules.get(ruleId);\n      const rule = this.instantiateRule(ruleId, options);\n      return rule.documentation(context);\n    } else {\n      return null;\n    }\n  }\n  /**\n   * Create a new parser instance with the current configuration.\n   *\n   * @internal\n   */\n  instantiateParser() {\n    return new this.ParserClass(this.config);\n  }\n  processDirective(event, parser, allRules) {\n    const rules = event.data.split(\",\").map(name => name.trim()).map(name => allRules[name]).filter(rule => rule); /* filter out missing rules */\n    switch (event.action) {\n      case \"enable\":\n        this.processEnableDirective(rules, parser);\n        break;\n      case \"disable\":\n        this.processDisableDirective(rules, parser);\n        break;\n      case \"disable-block\":\n        this.processDisableBlockDirective(rules, parser);\n        break;\n      case \"disable-next\":\n        this.processDisableNextDirective(rules, parser);\n        break;\n      default:\n        this.reportError(\"parser-error\", \"Unknown directive \\\"\".concat(event.action, \"\\\"\"), event.location);\n        break;\n    }\n  }\n  processEnableDirective(rules, parser) {\n    for (const rule of rules) {\n      rule.setEnabled(true);\n      if (rule.getSeverity() === exports.Severity.DISABLED) {\n        rule.setServerity(exports.Severity.ERROR);\n      }\n    }\n    /* enable rules on node */\n    parser.on(\"tag:start\", (event, data) => {\n      data.target.enableRules(rules.map(rule => rule.name));\n    });\n  }\n  processDisableDirective(rules, parser) {\n    for (const rule of rules) {\n      rule.setEnabled(false);\n    }\n    /* disable rules on node */\n    parser.on(\"tag:start\", (event, data) => {\n      data.target.disableRules(rules.map(rule => rule.name));\n    });\n  }\n  processDisableBlockDirective(rules, parser) {\n    let directiveBlock = null;\n    for (const rule of rules) {\n      rule.setEnabled(false);\n    }\n    const unregisterOpen = parser.on(\"tag:start\", (event, data) => {\n      var _a, _b;\n      /* wait for a tag to open and find the current block by using its parent */\n      if (directiveBlock === null) {\n        directiveBlock = (_b = (_a = data.target.parent) === null || _a === void 0 ? void 0 : _a.unique) !== null && _b !== void 0 ? _b : null;\n      }\n      /* disable rules directly on the node so it will be recorded for later,\n       * more specifically when using the domtree to trigger errors */\n      data.target.disableRules(rules.map(rule => rule.name));\n    });\n    const unregisterClose = parser.on(\"tag:end\", (event, data) => {\n      /* if the directive is the last thing in a block no id would be set */\n      const lastNode = directiveBlock === null;\n      /* test if the block is being closed by checking the parent of the block\n       * element is being closed */\n      const parentClosed = directiveBlock === data.previous.unique;\n      /* remove listeners and restore state */\n      if (lastNode || parentClosed) {\n        unregisterClose();\n        unregisterOpen();\n        for (const rule of rules) {\n          rule.setEnabled(true);\n        }\n      }\n    });\n  }\n  processDisableNextDirective(rules, parser) {\n    for (const rule of rules) {\n      rule.setEnabled(false);\n    }\n    /* disable rules directly on the node so it will be recorded for later,\n     * more specifically when using the domtree to trigger errors */\n    const unregister = parser.on(\"tag:start\", (event, data) => {\n      data.target.disableRules(rules.map(rule => rule.name));\n    });\n    /* disable directive after next event occurs */\n    parser.once(\"tag:ready, tag:end, attr\", () => {\n      unregister();\n      parser.defer(() => {\n        for (const rule of rules) {\n          rule.setEnabled(true);\n        }\n      });\n    });\n  }\n  /*\n   * Initialize all plugins. This should only be done once for all sessions.\n   */\n  initPlugins(config) {\n    for (const plugin of config.getPlugins()) {\n      if (plugin.init) {\n        plugin.init();\n      }\n    }\n    return {\n      availableRules: this.initRules(config)\n    };\n  }\n  /**\n   * Initializes all rules from plugins and returns an object with a mapping\n   * between rule name and its constructor.\n   */\n  initRules(config) {\n    const availableRules = {};\n    for (const plugin of config.getPlugins()) {\n      for (const [name, rule] of Object.entries(plugin.rules || {})) {\n        if (!rule) continue;\n        availableRules[name] = rule;\n      }\n    }\n    return availableRules;\n  }\n  /**\n   * Setup all plugins for this session.\n   */\n  setupPlugins(source, config, parser) {\n    const eventHandler = parser.getEventHandler();\n    for (const plugin of config.getPlugins()) {\n      if (plugin.setup) {\n        plugin.setup(source, eventHandler);\n      }\n    }\n    return {\n      rules: this.setupRules(config, parser)\n    };\n  }\n  /**\n   * Load and setup all rules for current configuration.\n   */\n  setupRules(config, parser) {\n    const rules = {};\n    for (const [ruleId, [severity, options]] of config.getRules().entries()) {\n      rules[ruleId] = this.loadRule(ruleId, config, severity, options, parser, this.report);\n    }\n    return rules;\n  }\n  /**\n   * Load and setup a rule using current config.\n   */\n  loadRule(ruleId, config, severity, options, parser, report) {\n    const meta = config.getMetaTable();\n    const rule = this.instantiateRule(ruleId, options);\n    rule.name = ruleId;\n    rule.init(parser, report, severity, meta);\n    /* call setup callback if present */\n    if (rule.setup) {\n      rule.setup();\n    }\n    return rule;\n  }\n  instantiateRule(name, options) {\n    if (this.availableRules[name]) {\n      const RuleConstructor = this.availableRules[name];\n      return new RuleConstructor(options);\n    } else {\n      return this.missingRule(name);\n    }\n  }\n  missingRule(name) {\n    return new class MissingRule extends Rule {\n      setup() {\n        this.on(\"dom:load\", () => {\n          this.report(null, \"Definition for rule '\".concat(name, \"' was not found\"));\n        });\n      }\n    }();\n  }\n  reportError(ruleId, message, location) {\n    this.report.addManual(location.filename, {\n      ruleId,\n      severity: exports.Severity.ERROR,\n      message,\n      offset: location.offset,\n      line: location.line,\n      column: location.column,\n      size: location.size || 0,\n      selector: null\n    });\n  }\n}\n\n/**\n * The static configuration loader does not do any per-handle lookup. Only the\n * global or per-call configuration is used.\n *\n * In practice this means no configuration is fetch by traversing the\n * filesystem.\n *\n * @public\n */\nclass StaticConfigLoader extends ConfigLoader {\n  getConfigFor(handle, configOverride) {\n    const override = this.loadFromObject(configOverride || {});\n    if (override.isRootFound()) {\n      override.init();\n      return override;\n    }\n    const merged = this.globalConfig.merge(override);\n    merged.init();\n    return merged;\n  }\n  flushCache() {\n    /* do nothing */\n  }\n  defaultConfig() {\n    return this.loadFromObject({\n      extends: [\"html-validate:recommended\"],\n      elements: [\"html5\"]\n    });\n  }\n}\nfunction isSourceHooks(value) {\n  if (!value || typeof value === \"string\") {\n    return false;\n  }\n  return Boolean(value.processAttribute || value.processElement);\n}\nfunction isConfigData(value) {\n  if (!value || typeof value === \"string\") {\n    return false;\n  }\n  return !(value.processAttribute || value.processElement);\n}\n/**\n * Primary API for using HTML-validate.\n *\n * Provides high-level abstractions for common operations.\n *\n * @public\n */\nclass HtmlValidate {\n  constructor(arg) {\n    const [loader, config] = arg instanceof ConfigLoader ? [arg, undefined] : [undefined, arg];\n    this.configLoader = loader !== null && loader !== void 0 ? loader : new StaticConfigLoader(config);\n  }\n  validateString(str, arg1, arg2, arg3) {\n    const filename = typeof arg1 === \"string\" ? arg1 : \"inline\";\n    const options = isConfigData(arg1) ? arg1 : isConfigData(arg2) ? arg2 : undefined;\n    const hooks = isSourceHooks(arg1) ? arg1 : isSourceHooks(arg2) ? arg2 : arg3;\n    const source = {\n      data: str,\n      filename,\n      line: 1,\n      column: 1,\n      offset: 0,\n      hooks\n    };\n    return this.validateSource(source, options);\n  }\n  /**\n   * Parse and validate HTML from [[Source]].\n   *\n   * @public\n   * @param input - Source to parse.\n   * @returns Report output.\n   */\n  validateSource(input, configOverride) {\n    const config = this.getConfigFor(input.filename, configOverride);\n    const resolved = config.resolve();\n    const source = resolved.transformSource(input);\n    const engine = new Engine(resolved, Parser);\n    return engine.lint(source);\n  }\n  /**\n   * Parse and validate HTML from file.\n   *\n   * @public\n   * @param filename - Filename to read and parse.\n   * @returns Report output.\n   */\n  validateFile(filename) {\n    const config = this.getConfigFor(filename);\n    const resolved = config.resolve();\n    const source = resolved.transformFilename(filename);\n    const engine = new Engine(resolved, Parser);\n    return engine.lint(source);\n  }\n  /**\n   * Parse and validate HTML from multiple files. Result is merged together to a\n   * single report.\n   *\n   * @param filenames - Filenames to read and parse.\n   * @returns Report output.\n   */\n  validateMultipleFiles(filenames) {\n    return Reporter.merge(filenames.map(filename => this.validateFile(filename)));\n  }\n  /**\n   * Returns true if the given filename can be validated.\n   *\n   * A file is considered to be validatable if the extension is `.html` or if a\n   * transformer matches the filename.\n   *\n   * This is mostly useful for tooling to determine whenever to validate the\n   * file or not. CLI tools will run on all the given files anyway.\n   */\n  canValidate(filename) {\n    /* .html is always supported */\n    const extension = path__default[\"default\"].extname(filename).toLowerCase();\n    if (extension === \".html\") {\n      return true;\n    }\n    /* test if there is a matching transformer */\n    const config = this.getConfigFor(filename);\n    const resolved = config.resolve();\n    return resolved.canTransform(filename);\n  }\n  /**\n   * Tokenize filename and output all tokens.\n   *\n   * Using CLI this is enabled with `--dump-tokens`. Mostly useful for\n   * debugging.\n   *\n   * @param filename - Filename to tokenize.\n   */\n  dumpTokens(filename) {\n    const config = this.getConfigFor(filename);\n    const resolved = config.resolve();\n    const source = resolved.transformFilename(filename);\n    const engine = new Engine(resolved, Parser);\n    return engine.dumpTokens(source);\n  }\n  /**\n   * Parse filename and output all events.\n   *\n   * Using CLI this is enabled with `--dump-events`. Mostly useful for\n   * debugging.\n   *\n   * @param filename - Filename to dump events from.\n   */\n  dumpEvents(filename) {\n    const config = this.getConfigFor(filename);\n    const resolved = config.resolve();\n    const source = resolved.transformFilename(filename);\n    const engine = new Engine(resolved, Parser);\n    return engine.dumpEvents(source);\n  }\n  /**\n   * Parse filename and output DOM tree.\n   *\n   * Using CLI this is enabled with `--dump-tree`. Mostly useful for\n   * debugging.\n   *\n   * @param filename - Filename to dump DOM tree from.\n   */\n  dumpTree(filename) {\n    const config = this.getConfigFor(filename);\n    const resolved = config.resolve();\n    const source = resolved.transformFilename(filename);\n    const engine = new Engine(resolved, Parser);\n    return engine.dumpTree(source);\n  }\n  /**\n   * Transform filename and output source data.\n   *\n   * Using CLI this is enabled with `--dump-source`. Mostly useful for\n   * debugging.\n   *\n   * @param filename - Filename to dump source from.\n   */\n  dumpSource(filename) {\n    const config = this.getConfigFor(filename);\n    const resolved = config.resolve();\n    const sources = resolved.transformFilename(filename);\n    return sources.reduce((result, source) => {\n      result.push(\"Source \".concat(source.filename, \"@\").concat(source.line, \":\").concat(source.column, \" (offset: \").concat(source.offset, \")\"));\n      if (source.transformedBy) {\n        result.push(\"Transformed by:\");\n        result = result.concat(source.transformedBy.reverse().map(name => \" - \".concat(name)));\n      }\n      if (source.hooks && Object.keys(source.hooks).length > 0) {\n        result.push(\"Hooks\");\n        for (const [key, present] of Object.entries(source.hooks)) {\n          if (present) {\n            result.push(\" - \".concat(key));\n          }\n        }\n      }\n      result.push(\"---\");\n      result = result.concat(source.data.split(\"\\n\"));\n      result.push(\"---\");\n      return result;\n    }, []);\n  }\n  /**\n   * Get effective configuration schema.\n   */\n  getConfigurationSchema() {\n    return configurationSchema;\n  }\n  /**\n   * Get effective metadata element schema.\n   *\n   * If a filename is given the configured plugins can extend the\n   * schema. Filename must not be an existing file or a filetype normally\n   * handled by html-validate but the path will be used when resolving\n   * configuration. As a rule-of-thumb, set it to the elements json file.\n   */\n  getElementsSchema(filename) {\n    const config = this.getConfigFor(filename !== null && filename !== void 0 ? filename : \"inline\");\n    const metaTable = config.getMetaTable();\n    return metaTable.getJSONSchema();\n  }\n  /**\n   * Get contextual documentation for the given rule.\n   *\n   * Typical usage:\n   *\n   * ```js\n   * const report = htmlvalidate.validateFile(\"my-file.html\");\n   * for (const result of report.results){\n   *   const config = htmlvalidate.getConfigFor(result.filePath);\n   *   for (const message of result.messages){\n   *     const documentation = htmlvalidate.getRuleDocumentation(message.ruleId, config, message.context);\n   *     // do something with documentation\n   *   }\n   * }\n   * ```\n   *\n   * @param ruleId - Rule to get documentation for.\n   * @param config - If set it provides more accurate description by using the\n   * correct configuration for the file.\n   * @param context - If set to `Message.context` some rules can provide\n   * contextual details and suggestions.\n   */\n  getRuleDocumentation(ruleId) {\n    let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    const c = config || this.getConfigFor(\"inline\");\n    const engine = new Engine(c.resolve(), Parser);\n    return engine.getRuleDocumentation(ruleId, context);\n  }\n  /**\n   * Create a parser configured for given filename.\n   *\n   * @internal\n   * @param source - Source to use.\n   */\n  getParserFor(source) {\n    const config = this.getConfigFor(source.filename);\n    return new Parser(config.resolve());\n  }\n  /**\n   * Get configuration for given filename.\n   *\n   * See [[FileSystemConfigLoader]] for details.\n   *\n   * @public\n   * @param filename - Filename to get configuration for.\n   * @param configOverride - Configuration to apply last.\n   */\n  getConfigFor(filename, configOverride) {\n    return this.configLoader.getConfigFor(filename, configOverride);\n  }\n  /**\n   * Flush configuration cache. Clears full cache unless a filename is given.\n   *\n   * See [[FileSystemConfigLoader]] for details.\n   *\n   * @public\n   * @param filename - If set, only flush cache for given filename.\n   */\n  flushConfigCache(filename) {\n    this.configLoader.flushCache(filename);\n  }\n}\nconst defaults$1 = {\n  silent: false,\n  version,\n  logger(text) {\n    /* eslint-disable-next-line no-console */\n    console.error(kleur__default[\"default\"].red(text));\n  }\n};\n/**\n * Tests if plugin is compatible with html-validate library. Unless the `silent`\n * option is used a warning is displayed on the console.\n *\n * @public\n * @param name - Name of plugin\n * @param declared - What library versions the plugin support (e.g. declared peerDependencies)\n * @returns - `true` if version is compatible\n */\nfunction compatibilityCheck(name, declared, options) {\n  const {\n    silent,\n    version: current,\n    logger\n  } = {\n    ...defaults$1,\n    ...options\n  };\n  const valid = semver__default[\"default\"].satisfies(current, declared);\n  if (valid || silent) {\n    return valid;\n  }\n  const text = [\"-----------------------------------------------------------------------------------------------------\", \"\".concat(name, \" requires html-validate version \\\"\").concat(declared, \"\\\" but current installed version is \").concat(current), \"This is not a supported configuration. Please install a supported version before reporting bugs.\", \"-----------------------------------------------------------------------------------------------------\"].join(\"\\n\");\n  logger(text);\n  return false;\n}\nconst ruleIds = new Set(Object.keys(bundledRules));\n/**\n * Returns true if given ruleId is an existing builtin rule. It does not handle\n * rules loaded via plugins.\n *\n * Can be used to create forward/backward compatibility by checking if a rule\n * exists to enable/disable it.\n *\n * @public\n * @param ruleId - Rule id to check\n * @returns `true` if rule exists\n */\nfunction ruleExists(ruleId) {\n  return ruleIds.has(ruleId);\n}\n\n/**\n * @internal\n */\nfunction findConfigurationFiles(directory) {\n  return [\"json\", \"cjs\", \"js\"].map(extension => path__default[\"default\"].join(directory, \".htmlvalidate.\".concat(extension))).filter(filePath => fs__default[\"default\"].existsSync(filePath));\n}\n/**\n * Loads configuration by traversing filesystem.\n *\n * Configuration is read from three sources and in the following order:\n *\n * 1. Global configuration passed to constructor.\n * 2. Configuration files found when traversing the directory structure.\n * 3. Override passed to this function.\n *\n * The following configuration filenames are searched:\n *\n * - `.htmlvalidate.json`\n * - `.htmlvalidate.js`\n * - `.htmlvalidate.cjs`\n *\n * Global configuration is used when no configuration file is found. The\n * result is always merged with override if present.\n *\n * The `root` property set to `true` affects the configuration as following:\n *\n * 1. If set in override the override is returned as-is.\n * 2. If set in the global config the override is merged into global and\n * returned. No configuration files are searched.\n * 3. Setting `root` in configuration file only stops directory traversal.\n *\n * @public\n */\nclass FileSystemConfigLoader extends ConfigLoader {\n  /**\n   * @param config - Global configuration\n   * @param configFactory - Optional configuration factory\n   */\n  constructor(config) {\n    let configFactory = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Config;\n    super(config, configFactory);\n    this.cache = new Map();\n  }\n  /**\n   * Get configuration for given filename.\n   *\n   * @param filename - Filename to get configuration for.\n   * @param configOverride - Configuration to merge final result with.\n   */\n  getConfigFor(filename, configOverride) {\n    /* special case when the overridden configuration is marked as root, should\n     * not try to load any more configuration files */\n    const override = this.loadFromObject(configOverride || {});\n    if (override.isRootFound()) {\n      override.init();\n      return override;\n    }\n    /* special case when the global configuration is marked as root, should not\n     * try to load and more configuration files */\n    if (this.globalConfig.isRootFound()) {\n      const merged = this.globalConfig.merge(override);\n      merged.init();\n      return merged;\n    }\n    const config = this.fromFilename(filename);\n    const merged = config ? config.merge(override) : this.globalConfig.merge(override);\n    merged.init();\n    return merged;\n  }\n  /**\n   * Flush configuration cache.\n   *\n   * @param filename - If given only the cache for that file is flushed.\n   */\n  flushCache(filename) {\n    if (filename) {\n      this.cache.delete(filename);\n    } else {\n      this.cache.clear();\n    }\n  }\n  /**\n   * Load raw configuration from directory traversal.\n   *\n   * This configuration is not merged with global configuration and may return\n   * `null` if no configuration files are found.\n   */\n  fromFilename(filename) {\n    var _a;\n    if (filename === \"inline\") {\n      return null;\n    }\n    if (this.cache.has(filename)) {\n      return (_a = this.cache.get(filename)) !== null && _a !== void 0 ? _a : null;\n    }\n    let found = false;\n    let current = path__default[\"default\"].resolve(path__default[\"default\"].dirname(filename));\n    let config = this.empty();\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      /* search configuration files in current directory */\n      for (const configFile of findConfigurationFiles(current)) {\n        const local = this.loadFromFile(configFile);\n        found = true;\n        config = local.merge(config);\n      }\n      /* stop if a configuration with \"root\" is set to true */\n      if (config.isRootFound()) {\n        break;\n      }\n      /* get the parent directory */\n      const child = current;\n      current = path__default[\"default\"].dirname(current);\n      /* stop if this is the root directory */\n      if (current === child) {\n        break;\n      }\n    }\n    /* no config was found by loader, return null and let caller decide what to do */\n    if (!found) {\n      this.cache.set(filename, null);\n      return null;\n    }\n    this.cache.set(filename, config);\n    return config;\n  }\n  defaultConfig() {\n    return this.configFactory.defaultConfig();\n  }\n}\nconst entities = {\n  \">\": \"&gt;\",\n  \"<\": \"&lt;\",\n  \"'\": \"&apos;\",\n  '\"': \"&quot;\",\n  \"&\": \"&amp;\"\n};\nfunction xmlescape(src) {\n  return src.toString().replace(/[><'\"&]/g, match => {\n    return entities[match];\n  });\n}\nfunction getMessageType(message) {\n  switch (message.severity) {\n    case 2:\n      return \"error\";\n    case 1:\n      return \"warning\";\n    default:\n      return \"error\";\n  }\n}\nfunction checkstyleFormatter(results) {\n  let output = \"\";\n  output += \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n\";\n  output += \"<checkstyle version=\\\"4.3\\\">\\n\";\n  results.forEach(result => {\n    const messages = result.messages;\n    output += \"  <file name=\\\"\".concat(xmlescape(result.filePath), \"\\\">\\n\");\n    messages.forEach(message => {\n      const ruleId = xmlescape(\"htmlvalidate.rules.\".concat(message.ruleId));\n      output += \"    \";\n      output += [\"<error line=\\\"\".concat(xmlescape(message.line), \"\\\"\"), \"column=\\\"\".concat(xmlescape(message.column), \"\\\"\"), \"severity=\\\"\".concat(xmlescape(getMessageType(message)), \"\\\"\"), \"message=\\\"\".concat(xmlescape(message.message), \" (\").concat(message.ruleId, \")\\\"\"), \"source=\\\"\".concat(ruleId, \"\\\" />\")].join(\" \");\n      output += \"\\n\";\n    });\n    output += \"  </file>\\n\";\n  });\n  output += \"</checkstyle>\\n\";\n  return output;\n}\nconst formatter$4 = checkstyleFormatter;\nconst defaults = {\n  showLink: true\n};\n/**\n * Codeframe formatter based on ESLint codeframe.\n */\n/**\n * Given a word and a count, append an s if count is not one.\n * @param word - A word in its singular form.\n * @param count - A number controlling whether word should be pluralized.\n * @returns The original word with an s on the end if count is not one.\n */\nfunction pluralize(word, count) {\n  return count === 1 ? word : \"\".concat(word, \"s\");\n}\n/**\n * Gets a formatted relative file path from an absolute path and a line/column in the file.\n * @param filePath - The absolute file path to format.\n * @param line - The line from the file to use for formatting.\n * @param column -The column from the file to use for formatting.\n * @returns The formatted file path.\n */\nfunction formatFilePath(filePath, line, column) {\n  let relPath = path__default[\"default\"].relative(process.cwd(), filePath);\n  /* istanbul ignore next: safety check from original implementation */\n  if (line && column) {\n    relPath += \":\".concat(line, \":\").concat(column);\n  }\n  return kleur__default[\"default\"].green(relPath);\n}\nfunction getStartLocation(message) {\n  return {\n    line: message.line,\n    column: message.column\n  };\n}\nfunction getEndLocation(message, source) {\n  let line = message.line;\n  let column = message.column;\n  for (let i = 0; i < message.size; i++) {\n    if (source.charAt(message.offset + i) === \"\\n\") {\n      line++;\n      column = 0;\n    } else {\n      column++;\n    }\n  }\n  return {\n    line,\n    column\n  };\n}\n/**\n * Gets the formatted output for a given message.\n * @param message - The object that represents this message.\n * @param parentResult - The result object that this message belongs to.\n * @returns The formatted output.\n */\nfunction formatMessage(message, parentResult, options) {\n  const type = message.severity === 2 ? kleur__default[\"default\"].red(\"error\") : kleur__default[\"default\"].yellow(\"warning\");\n  const msg = \"\".concat(kleur__default[\"default\"].bold(message.message.replace(/([^ ])\\.$/, \"$1\")));\n  const ruleId = kleur__default[\"default\"].dim(\"(\".concat(message.ruleId, \")\"));\n  const filePath = formatFilePath(parentResult.filePath, message.line, message.column);\n  const sourceCode = parentResult.source;\n  /* istanbul ignore next: safety check from original implementation */\n  const firstLine = [\"\".concat(type, \":\"), \"\".concat(msg), ruleId ? \"\".concat(ruleId) : \"\", sourceCode ? \"at \".concat(filePath, \":\") : \"at \".concat(filePath)].filter(String).join(\" \");\n  const result = [firstLine];\n  /* istanbul ignore next: safety check from original implementation */\n  if (sourceCode) {\n    result.push(codeFrame.codeFrameColumns(sourceCode, {\n      start: getStartLocation(message),\n      end: getEndLocation(message, sourceCode)\n    }, {\n      highlightCode: false\n    }));\n  }\n  if (options.showLink && message.ruleUrl) {\n    result.push(\"\".concat(kleur__default[\"default\"].bold(\"Details:\"), \" \").concat(message.ruleUrl));\n  }\n  return result.join(\"\\n\");\n}\n/**\n * Gets the formatted output summary for a given number of errors and warnings.\n * @param errors - The number of errors.\n * @param warnings - The number of warnings.\n * @returns The formatted output summary.\n */\nfunction formatSummary(errors, warnings) {\n  const summaryColor = errors > 0 ? \"red\" : \"yellow\";\n  const summary = [];\n  if (errors > 0) {\n    summary.push(\"\".concat(errors, \" \").concat(pluralize(\"error\", errors)));\n  }\n  if (warnings > 0) {\n    summary.push(\"\".concat(warnings, \" \").concat(pluralize(\"warning\", warnings)));\n  }\n  return kleur__default[\"default\"][summaryColor]().bold(\"\".concat(summary.join(\" and \"), \" found.\"));\n}\nfunction codeframe(results, options) {\n  const merged = {\n    ...defaults,\n    ...options\n  };\n  let errors = 0;\n  let warnings = 0;\n  const resultsWithMessages = results.filter(result => result.messages.length > 0);\n  let output = resultsWithMessages.reduce((resultsOutput, result) => {\n    const messages = result.messages.map(message => {\n      return \"\".concat(formatMessage(message, result, merged), \"\\n\\n\");\n    });\n    errors += result.errorCount;\n    warnings += result.warningCount;\n    return resultsOutput.concat(messages);\n  }, []).join(\"\\n\");\n  output += \"\\n\";\n  output += formatSummary(errors, warnings);\n  output += \"\\n\";\n  return errors + warnings > 0 ? output : \"\";\n}\nconst formatter$3 = codeframe;\nfunction jsonFormatter(results) {\n  return JSON.stringify(results);\n}\nconst formatter$2 = jsonFormatter;\nfunction linkSummary(results) {\n  const urls = results.reduce((result, it) => {\n    const urls = it.messages.map(error => error.ruleUrl).filter(error => Boolean(error));\n    return [...result, ...urls];\n  }, []);\n  const unique = Array.from(new Set(urls));\n  if (unique.length === 0) {\n    return \"\";\n  }\n  const lines = unique.map(url => \"  \".concat(url, \"\\n\"));\n  return \"\\n\".concat(kleur__default[\"default\"].bold(\"More information\"), \":\\n\").concat(lines.join(\"\"), \"\\n\");\n}\nfunction stylish(results) {\n  const errors = stylishImpl__default[\"default\"](results.map(it => ({\n    ...it,\n    fixableErrorCount: 0,\n    fixableWarningCount: 0\n  })));\n  const links = linkSummary(results);\n  return \"\".concat(errors).concat(links);\n}\nconst formatter$1 = stylish;\nfunction textFormatter(results) {\n  let output = \"\";\n  let total = 0;\n  results.forEach(result => {\n    const messages = result.messages;\n    if (messages.length === 0) {\n      return;\n    }\n    total += messages.length;\n    output += messages.map(message => {\n      let messageType;\n      if (message.severity === 2) {\n        messageType = \"error\";\n      } else {\n        messageType = \"warning\";\n      }\n      const location = \"\".concat(result.filePath, \":\").concat(message.line, \":\").concat(message.column);\n      return \"\".concat(location, \": \").concat(messageType, \" [\").concat(message.ruleId, \"] \").concat(message.message, \"\\n\");\n    }).join(\"\");\n  });\n  return total > 0 ? output : \"\";\n}\nconst formatter = textFormatter;\nconst availableFormatters = {\n  checkstyle: formatter$4,\n  codeframe: formatter$3,\n  json: formatter$2,\n  stylish: formatter$1,\n  text: formatter\n};\n/**\n * Get formatter function by name.\n *\n * @internal\n * @param name - Name of formatter.\n * @returns Formatter function or null if it doesn't exist.\n */\nfunction getFormatter(name) {\n  var _a;\n  return (_a = availableFormatters[name]) !== null && _a !== void 0 ? _a : null;\n}\nexports.Config = Config;\nexports.ConfigError = ConfigError;\nexports.ConfigLoader = ConfigLoader;\nexports.DynamicValue = DynamicValue;\nexports.EventHandler = EventHandler;\nexports.FileSystemConfigLoader = FileSystemConfigLoader;\nexports.HtmlElement = HtmlElement;\nexports.HtmlValidate = HtmlValidate;\nexports.MetaCopyableProperty = MetaCopyableProperty;\nexports.MetaTable = MetaTable;\nexports.Parser = Parser;\nexports.Reporter = Reporter;\nexports.Rule = Rule;\nexports.SchemaValidationError = SchemaValidationError;\nexports.StaticConfigLoader = StaticConfigLoader;\nexports.TemplateExtractor = TemplateExtractor;\nexports.TextNode = TextNode;\nexports.UserError = UserError;\nexports.bugs = bugs;\nexports.compatibilityCheck = compatibilityCheck;\nexports.getFormatter = getFormatter;\nexports.legacyRequire = legacyRequire;\nexports.name = name;\nexports.presets = presets;\nexports.ruleExists = ruleExists;\nexports.version = version;"],"names":["fs","betterAjvErrors","Ajv","deepmerge","path","semver","kleur","codeFrame","stylishImpl","_interopDefaultLegacy","e","fs__default","betterAjvErrors__default","Ajv__default","deepmerge__default","path__default","semver__default","kleur__default","stylishImpl__default","ajvSchemaDraft","$schema","$id","title","definitions","schemaArray","type","minItems","items","$ref","nonNegativeInteger","minimum","nonNegativeIntegerDefault0","allOf","simpleTypes","stringArray","uniqueItems","properties","format","description","examples","multipleOf","exclusiveMinimum","maximum","exclusiveMaximum","maxLength","minLength","pattern","additionalItems","anyOf","maxItems","contains","maxProperties","minProperties","required","additionalProperties","patternProperties","dependencies","propertyNames","oneOf","not","NestedError","Error","constructor","message","nested","super","captureStackTrace","this","stack","concat","UserError","SchemaValidationError","filename","obj","schema","errors","summary","output","length","error","getSummary","prettyError","json","getRawJSON","indent","existsSync","readFileSync","projectRoot","resolve","distFolder","requireUncached","moduleId","m","parent","i","children","id","splice","TextContent$1","inherit","embedded","flow","heading","interactive","metadata","phrasing","sectioning","deprecated","foreign","transparent","implicitClosed","scriptSupporting","form","labelable","deprecatedAttributes","requiredAttributes","attributes","permittedContent","permittedDescendants","permittedOrder","requiredAncestors","requiredContent","textContent","contentCategory","expression","operation","deprecatedElement","documentation","source","Permitted","PermittedAttribute","boolean","list","regexp","omit","PermittedGroup","exclude","PermittedOrder","RequiredAncestors","RequiredContent","TextContent","MetaCopyableProperty","setMetaProperty","dst","key","value","flag","undefined","stripUndefined","src","entries","Object","filter","_ref","isSet","fromEntries","migrateSingleAttribute","_a","_b","result","includes","attr","delete","Array","isArray","enum","it","migrateAttributes","_c","keys","sort","map","migrateElement","dynamicKeys","functionTable","isDescendant","node","tagName","cur","isRootElement","is","hasAttribute","matchAttribute","match","op","x","toLowerCase","nodeValue","getAttributeValue","overwriteMerge$1","a","b","ajvRegexpValidate","data","dataCxt","valid","RegExp","instancePath","schemaPath","keyword","params","ajvRegexpKeyword","validate","MetaTable","elements","JSON","parse","stringify","init","resolveGlobal","extendValidationSchema","patch","loadFromObject","arguments","getSchemaValidator","addEntry","loadFromFile","err","getMetaFor","getTagsWithProperty","propName","_ref2","entry","_ref3","getTagsDerivedFrom","_ref4","_ref5","name","expanded","mergeElement","values","expandRegexValue","expandRegex","ajv","strict","strictTuples","strictTypes","addMetaSchema","addKeyword","compile","getJSONSchema","global","void","merged","arrayMerge","filteredAttrs","_ref6","val","meta","property","evaluateProperty","expandProperties","expr","flags","func","options","parseExpression","funcName","DynamicValue","toString","Attribute","keyLocation","valueLocation","originalAttribute","isStatic","isDynamic","valueMatches","dynamicMatches","sliceLocation","location","begin","end","wrap","size","Math","min","sliceSize","sliced","offset","line","column","index","col","indexOf","State","ContentModel","NodeType","Context","_d","state","INITIAL","string","contentModel","TEXT","getTruncatedLine","n","slice","consume","consumed","substr","getLocation","TEXT_CONTENT","Symbol","counter","DOMNode","nodeType","nodeName","disabledRules","Set","childNodes","unique","cache","cacheEnable","Map","cacheGet","get","cacheSet","set","cacheRemove","cacheExists","Boolean","has","cached","text","join","append","push","DOCUMENT_NODE","isSameNode","otherNode","firstChild","lastChild","disableRule","ruleId","add","disableRules","rules","rule","enableRule","enableRules","ruleEnabled","generateSelector","DOMTokenList","normalized","replace","tokens","locations","baseLocation","token","substring","item","Combinator","table","previousSibling","nextSibling","args","parseInt","trim","childElements","findIndex","getNthChild","scope","escapeSelectorComponent","Matcher","ClassMatcher","classname","classList","IdMatcher","AttrMatcher","getAttribute","some","PseudoClassMatcher","pseudoclass","context","fn","bind","factory","Pattern","shift","selector","combinator","SCOPE","DESCENDANT","CHILD","ADJACENT_SIBLING","GENERAL_SIBLING","parseCombinator","p","split","createMatcher","every","Selector","root","matchInternal","level","matches","findCandidates","static","part","getElementsByTagName","findAdjacentSibling","findGeneralSibling","adjacent","siblings","after","TextNode","TEXT_NODE","NodeClosed","isElement","ELEMENT_NODE","exports","HtmlElement","closed","isValidTagName","metaElement","voidElement","depth","annotation","EndTag","startToken","endToken","metaTable","open","Open","VoidOmitted","VoidSelfClosed","isClosed","annotatedName","closest","selectors","parts","escaped","querySelectorAll","child","reverse","loadMeta","setAnnotation","setAttribute","reduce","all","appendText","classes","firstElementChild","lastElementChild","querySelector","querySelectorImpl","next","from","selectorList","visitDepthFirst","callback","visit","forEach","someChildren","everyChildren","find","DOMTree","rootNode","active","doctype","pushActive","popActive","getActive","resolveMeta","allowedKeys","Validator","validatePermittedRule","numSiblings","limit","category","qualifier","parseAmountQualifier","cb","prev","old","validatePermittedCategory","empty","validateAttributeValue","isExclude","inner","str","validateKeys","defaultMatch","configurationSchema","plugins","transform","foo","bar","baz","style","espree","walk","joinTemplateLiteral","nodes","start","repeat","raw","computeOffset","position","extractLiteral","loc","quasis","quasi","body","TemplateExtractor","ast","ecmaVersion","sourceType","extractObjectProperty","simple","Property","compareKey","TRANSFORMER_API","version","Severity","parseSeverity","DISABLED","console","warn","WARN","ERROR","quote","escape","content","_ref7","String","interpolate","remapEvents","ajv$1","Rule","reporter","parser","event","enabled","severity","getSeverity","setServerity","setEnabled","isEnabled","isKeywordIgnored","include","report","where","findLocation","interpolated","on","remap","_len","_key","pop","_event","cls","jsonPath","config","isValid","getSchema","mapped","ruleDocumentationUrl","relative","dir","defaults$p","allowExternal","allowRelative","allowAbsolute","allowBase","mapping$1","img","link","script","parseAllow","matchList","test","whitelisted","ConfigError","CaseStyle","styles","parseStyle","names","last","rest","defaults$o","ignoreForeign","TokenType","MATCH_UNICODE_BOM","MATCH_WHITESPACE","MATCH_DOCTYPE_OPEN","MATCH_DOCTYPE_VALUE","MATCH_DOCTYPE_CLOSE","MATCH_XML_TAG","MATCH_TAG_OPEN","MATCH_TAG_CLOSE","MATCH_TEXT","MATCH_TEMPLATING","MATCH_TAG_LOOKAHEAD","MATCH_ATTR_START","MATCH_ATTR_SINGLE","MATCH_ATTR_DOUBLE","MATCH_ATTR_UNQUOTED","MATCH_CDATA_BEGIN","MATCH_CDATA_END","MATCH_SCRIPT_DATA","MATCH_SCRIPT_END","MATCH_STYLE_DATA","MATCH_STYLE_END","MATCH_DIRECTIVE","MATCH_COMMENT","MATCH_CONDITIONAL","InvalidTokenError","Lexer","previousState","previousLength","tokenizeInitial","DOCTYPE","tokenizeDoctype","TAG","tokenizeTag","ATTR","tokenizeAttr","tokenizeText","CDATA","tokenizeCDATA","SCRIPT","tokenizeScript","STYLE","tokenizeStyle","unhandled","errorStuck","EOF","truncated","evalNextState","nextState","tests","regex","tokenType","enter","UNICODE_BOM","DOCTYPE_OPEN","WHITESPACE","DIRECTIVE","CONDITIONAL","COMMENT","DOCTYPE_VALUE","DOCTYPE_CLOSE","tagCloseToken","TAG_CLOSE","ATTR_NAME","ATTR_VALUE","TEMPLATING","TAG_OPEN","whitespace","isRelevant$3","defaults$n","QuoteStyle","defaults$m","unquoted","defaults$l","reportMessage$1","defaults$k","allowsEmpty","isEmptyValue","reportMessage","parsePattern","describePattern","defaults$j","defaults$i","defaults$h","defaults$g","defaults$f","whitelist","blacklist","CACHE_KEY","classifyNodeText","TextClassification","findTextNodes","DYNAMIC_TEXT","STATIC_TEXT","EMPTY_TEXT","defaults$e","allowMultipleH1","minInitialRank","sectioningRoots","isRelevant$2","target","defaults$d","restricted","isInput","ARIA_HIDDEN_CACHE","isAriaHidden","HTML_HIDDEN_CACHE","isHTMLHidden","ROLE_PRESENTATION_CACHE","isPresentation","inAccessibilityTree","ariaHidden","hidden","role","isVisible","elem","defaults$c","maxlength","defaults$b","isRelevant$1","element","defaults$a","allowedProperties","ARIA","isList","idMissing","document","defaults$9","relaxed","textRegexp","unquotedAttrRegexp","matchTemplate","replacementTable","mapping","article","header","button","td","input","aside","footer","figure","h1","h2","h3","h4","h5","h6","ul","select","li","main","nav","progress","section","textarea","xmlns","defaults$8","ignoreXML","types","replacement","submit","reset","image","defaults$7","defaults$6","banner","cell","checkbox","complementary","contentinfo","listbox","listitem","navigation","progressbar","radio","region","textbox","defaults$5","crossorigin","supportSri","javascript","hasAltText","alt","hasAriaLabel","label","hasNonEmptyAttribute","isNonEmptyText","isTextNode","haveAccessibleText","hasDefaultText","doc","url","NONE","REQUIRED","ACCESSIBLE","DEFAULT","setup","validateNone","validateRequired","validateAccessible","reportError","entities$1","regexp$1","Style$1","Style","defaults$4","defaults$3","isSubmit","hasNestedSubmit","hasAssociatedSubmit","isAssociated","defaults$2","allowEmpty","alias","bundledRules$1","links","labels","formSelector","forms","previous","fieldsets","fieldset","reportNode","bundledRules","booleanOrObject","isRelevant","getStyle","handleAbsolute","handleExternal","handleRelativeBase","handleRelativePath","lines","validateElement","styleEnum","isIgnored","letters","delimiter","exec","generateDescription","patterns","generateMessage","AUTO_QUOTE","DOUBLE_QUOTE","SINGLE_QUOTE","parseStyle$4","expected","resolveQuotemark","previousToken","docs","allowed","attribute","allowedList","validateAttribute","getMessage","hasInvalidStyle","parseStyle$3","isBoolean","parseStyle$2","first","current","ImplicitClosed","prettySource","reportString","reportBoolean","reportObject","notice","preamble","getDeprecatedRules","tag","validateCase","validateMatchingCase","targetLocation","documentationMessages","validatePermittedContent","validatePermittedDescendant","validatePermittedAncestors","validatePermittedContentImpl","validatePermitted","validateAncestors","validateOccurrences","validateOrder","missing","validateRequiredContent","_ref8","headings","parseMaxInitial","sectionRoots","h1Count","modality","onTagStart","onTagReady","onTagClose","extractLevel","getCurrentRoot","checkLevelIncrementation","msg","checkInitialLevel","prevRootExpected","getPrevRoot","isSectioningRoot","typeValue","validTypes","validateInput","findLabelById","el","findLabelByParent","validateLabel","_ref9","delay","parseContent","dom","getNumLabledControls","controls","metaAttribute","existing","relevant","by","closedByParent","sameTag","allPropertiesAllowed","allowProperties","declarations","getCSSDeclarations","validateReference","validateList","validateSingle","parsed","iterator","findRawChars","char","charLocation","tagname","redundant","unregister","tr","needSri","elementSourceAttr","isJavascript","mime","svg","findCharacterReferences","entity","startsWith","entityLocation","Any","AlwaysOmit","AlwaysSelfclose","parseStyle$1","validateCurrent","validateActive","selfOrOmitted","desc","styleDescription","shouldBeOmitted","shouldBeSelfClosed","defaultConfig","config$2","config$1","presets","ResolvedConfig","_ref10","transformers","getMetaTable","getPlugins","getRules","transformSource","transformer","findTransformer","hasChain","chain","call","transformedBy","transformFilename","encoding","originalData","canTransform","rootDirCache","validator","overwriteMerge","mergeInternal","base","rhs","Config","extends","rootDir","findRootDir","initialized","loadPlugins","configurations","loadConfigurations","extendMeta","extendConfig","configdata","ref","expandRelative","dirname","fromObject","configData","normalizedRules","getRulesObject","ruleOptions","validateOptions","precompileTransformers","isRootFound","merge","extended","fromFile","plugin","elementSchema","currentPath","normalize","moduleName","originalName","configs","copyable","resolveData","_ref11","getTransformFunction","api","VERSION","pluginName","getNamedTransformerFromPlugin","getUnnamedTransformerFromPlugin","getTransformerFromModule","default","process","cwd","search","ConfigLoader","configFactory","defaults","globalConfig","EventHandler","listeners","once","deregister","trigger","listener","ParserError","Parser","parseHtml","tokenStream","tokenize","done","consumeTag","consumeDirective","consumeConditional","consumeComment","consumeDoctype","closeTree","closeOptional","consumeUntil","fromTokens","isStartTag","isClosing","isForeign","closeElement","consumeAttribute","discardForeignBody","processElement","hooks","foreignTagName","errorLocation","tagClosed","selfClosed","getAttributeKeyLocation","getAttributeValueLocation","getAttributeLocation","haveValue","isAttrValueToken","attrData","processAttribute","legacy","action","directive","comment","condition","conditional","commentLocation","parseConditionalComment","defer","getEventHandler","Reporter","reports","results","filePath","messages","errorCount","countErrors","warningCount","countWarnings","sumErrors","sumWarnings","ruleUrl","addManual","save","sources","messageSort","sum","Engine","ParserClass","initPlugins","availableRules","lint","instantiateParser","setupPlugins","configEvent","_","sourceData","sourceEvent","processDirective","dumpEvents","dumpTokens","lexer","dumpTree","writeNode","sibling","l","decoration","getRuleDocumentation","instantiateRule","allRules","processEnableDirective","processDisableDirective","processDisableBlockDirective","processDisableNextDirective","directiveBlock","unregisterOpen","unregisterClose","lastNode","parentClosed","initRules","eventHandler","setupRules","loadRule","RuleConstructor","missingRule","StaticConfigLoader","getConfigFor","handle","configOverride","override","flushCache","isSourceHooks","isConfigData","defaults$1","silent","logger","red","ruleIds","findConfigurationFiles","directory","extension","entities","xmlescape","getMessageType","showLink","pluralize","word","count","getStartLocation","getEndLocation","charAt","formatMessage","parentResult","yellow","bold","dim","relPath","green","formatFilePath","sourceCode","codeFrameColumns","highlightCode","availableFormatters","checkstyle","codeframe","warnings","resultsOutput","summaryColor","formatSummary","stylish","fixableErrorCount","fixableWarningCount","urls","linkSummary","total","messageType","FileSystemConfigLoader","fromFilename","clear","found","configFile","HtmlValidate","arg","loader","configLoader","validateString","arg1","arg2","arg3","validateSource","resolved","validateFile","validateMultipleFiles","filenames","canValidate","extname","dumpSource","present","getConfigurationSchema","getElementsSchema","c","getParserFor","flushConfigCache","bugs","compatibilityCheck","declared","satisfies","getFormatter","legacyRequire","ruleExists"],"sourceRoot":""}