{"version":3,"file":"component---src-docs-components-password-input-index-mdx-02aac8f2327e4380abe3.js","mappings":"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","sources":["webpack://site/./src/docs/components/password-input/index.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { PasswordInput, Button, IconEye, IconEyeCrossed } from 'hds-react';\nimport PlaygroundPreview from '../../../components/Playground';\nimport TabsLayout from './tabs.mdx';\nexport const ExternalButtonExample = () => {\n  const [revealPassword, setRevealPassword] = React.useState(false);\n  return <div style={{\n    display: \"grid\",\n    gridTemplateColumns: \"320px 240px\",\n    gap: \"var(--spacing-s)\"\n  }}>\n      <PasswordInput label=\"Password\" id=\"password-input-3\" includeShowPasswordButton={false} helperText=\"Assistive text\" type={revealPassword ? 'text' : 'password'} required style={{\n      maxWidth: '320px'\n    }} mdxType=\"PasswordInput\" />\n      <div style={{\n      display: 'flex',\n      justifyContent: 'center',\n      flexDirection: 'column'\n    }}>\n        <Button variant=\"supplementary\" onClick={() => setRevealPassword(!revealPassword)} iconLeft={revealPassword ? <IconEyeCrossed aria-hidden mdxType=\"IconEyeCrossed\" /> : <IconEye aria-hidden mdxType=\"IconEye\" />} mdxType=\"Button\">\n          {revealPassword ? 'Hide password' : 'Show password'}\n        </Button>\n      </div>\n    </div>;\n};\nexport const _frontmatter = {\n  \"slug\": \"/components/password-input\",\n  \"title\": \"PasswordInput\",\n  \"navTitle\": \"PasswordInput\"\n};\nconst layoutProps = {\n  ExternalButtonExample,\n  _frontmatter\n};\n\nconst MDXLayout = ({\n  children,\n  pageContext\n}) => <TabsLayout pageContext={pageContext}>{children}</TabsLayout>;\n\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"usage\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Usage`}<a parentName=\"h2\" {...{\n        \"href\": \"#usage\",\n        \"aria-label\": \"usage permalink\",\n        \"className\": \"header-anchor after\"\n      }}><i parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></i></a></h2>\n    <h3 {...{\n      \"id\": \"example\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Example`}<a parentName=\"h3\" {...{\n        \"href\": \"#example\",\n        \"aria-label\": \"example permalink\",\n        \"className\": \"header-anchor after\"\n      }}><i parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></i></a></h3>\n    <PlaygroundPreview mdxType=\"PlaygroundPreview\">\n  <PasswordInput concealPasswordButtonAriaLabel=\"Hide password\" helperText=\"Assistive text\" id=\"password-input-1\" includeShowPasswordButton label=\"Password\" revealPasswordButtonAriaLabel=\"Show password\" required style={{\n        maxWidth: '320px'\n      }} mdxType=\"PasswordInput\" />\n    </PlaygroundPreview>\n    <h3 {...{\n      \"id\": \"principles\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Principles`}<a parentName=\"h3\" {...{\n        \"href\": \"#principles\",\n        \"aria-label\": \"principles permalink\",\n        \"className\": \"header-anchor after\"\n      }}><i parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></i></a></h3>\n    <ul>\n      <li parentName=\"ul\">{`A label should always be provided with password fields.`}</li>\n      <li parentName=\"ul\">{`If possible, validate input in client-side real-time and provide the user with immediate feedback. See `}<a parentName=\"li\" {...{\n          \"href\": \"/patterns/form-validation\"\n        }}>{`HDS Form validation pattern page`}</a>{` for more information and best practices with password fields.`}</li>\n      <li parentName=\"ul\">{`Password fields should always be mandatory. It is recommended to mark it as a required field.`}</li>\n      <li parentName=\"ul\">{`Verify that \"paste\" functionality, browser password helpers, and external password managers are allowed for the input.`}</li>\n      <li parentName=\"ul\">{`HDS password input provides a way to mask/unmask the password. Do not disabled this functionality without a good reason.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"variations\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Variations`}<a parentName=\"h3\" {...{\n        \"href\": \"#variations\",\n        \"aria-label\": \"variations permalink\",\n        \"className\": \"header-anchor after\"\n      }}><i parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></i></a></h3>\n    <h4 {...{\n      \"id\": \"default\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Default`}<a parentName=\"h4\" {...{\n        \"href\": \"#default\",\n        \"aria-label\": \"default permalink\",\n        \"className\": \"header-anchor after\"\n      }}><i parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></i></a></h4>\n    <p>{`A default HDS password input includes an icon to mask and unmask the password.`}</p>\n    <PlaygroundPreview mdxType=\"PlaygroundPreview\">\n  <PasswordInput concealPasswordButtonAriaLabel=\"Hide password\" helperText=\"Assistive text\" id=\"password-input-2\" includeShowPasswordButton label=\"Password\" revealPasswordButtonAriaLabel=\"Show password\" required style={{\n        maxWidth: '320px'\n      }} mdxType=\"PasswordInput\" />\n    </PlaygroundPreview>\n    <h4 {...{\n      \"id\": \"with-an-external-button\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`With an external button`}<a parentName=\"h4\" {...{\n        \"href\": \"#with-an-external-button\",\n        \"aria-label\": \"with an external button permalink\",\n        \"className\": \"header-anchor after\"\n      }}><i parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></i></a></h4>\n    <p>{`If necessary, the mask/unmask icon can be removed and the feature controlled with an external button element.`}</p>\n\n    <PlaygroundPreview mdxType=\"PlaygroundPreview\">\n  <ExternalButtonExample mdxType=\"ExternalButtonExample\" />\n    </PlaygroundPreview>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["ExternalButtonExample","React","revealPassword","setRevealPassword","style","display","gridTemplateColumns","gap","P","label","id","includeShowPasswordButton","helperText","type","required","maxWidth","mdxType","justifyContent","flexDirection","B","variant","onClick","iconLeft","I","_frontmatter","layoutProps","MDXLayout","children","pageContext","MDXContent","components","props","parentName","concealPasswordButtonAriaLabel","revealPasswordButtonAriaLabel","isMDXComponent"],"sourceRoot":""}