{"version":3,"file":"component---src-docs-elements-components-notification-index-mdx-d22f6695ae3f3d0bc485.js","mappings":"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","sources":["webpack://hds-site/./src/docs/elements/components/notification/index.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { Notification, Button } from 'hds-react';\nimport PlaygroundPreview from '../../../../components/Playground';\nimport TabsLayout from './tabs.mdx';\nexport const ToastExample = () => {\n  const [open, setOpen] = React.useState(false);\n  const [autoCloseOpen, setAutoCloseOpen] = React.useState(false);\n  return <>\n      <Button onClick={() => setOpen(true)} mdxType=\"Button\">Show toast</Button>\n      <Button onClick={() => setAutoCloseOpen(true)} style={{\n      display: \"flex\",\n      marginTop: \"var(--spacing-s)\"\n    }} mdxType=\"Button\">Show automatically disappearing toast</Button>\n      {open && <Notification label=\"New messages\" position=\"top-right\" dismissible closeButtonLabelText=\"Close toast\" onClose={() => setOpen(false)} style={{\n      zIndex: 100\n    }} mdxType=\"Notification\">\n          You have received new messages.\n        </Notification>}\n      {autoCloseOpen && <Notification label=\"New messages\" position=\"top-right\" dismissible autoClose closeButtonLabelText=\"Close toast\" onClose={() => setAutoCloseOpen(false)} style={{\n      zIndex: 100\n    }} mdxType=\"Notification\">\n          You have received new messages.\n        </Notification>}\n    </>;\n};\nexport const _frontmatter = {\n  \"slug\": \"/elements/components/notification\",\n  \"title\": \"Notification\"\n};\nconst layoutProps = {\n  ToastExample,\n  _frontmatter\n};\n\nconst MDXLayout = ({\n  children,\n  pageContext\n}) => <TabsLayout pageContext={pageContext}>{children}</TabsLayout>;\n\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"usage\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Usage`}<a parentName=\"h2\" {...{\n        \"href\": \"#usage\",\n        \"aria-label\": \"usage permalink\",\n        \"className\": \"headerAnchor after\"\n      }}><i parentName=\"a\" {...{\n          \"className\": \"hdsAnchorIcon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></i></a></h2>\n    <h3 {...{\n      \"id\": \"example\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Example`}<a parentName=\"h3\" {...{\n        \"href\": \"#example\",\n        \"aria-label\": \"example permalink\",\n        \"className\": \"headerAnchor after\"\n      }}><i parentName=\"a\" {...{\n          \"className\": \"hdsAnchorIcon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></i></a></h3>\n    <PlaygroundPreview mdxType=\"PlaygroundPreview\">\n  <Notification label=\"New messages\" mdxType=\"Notification\">You have received new messages.</Notification>\n    </PlaygroundPreview>\n    <h3 {...{\n      \"id\": \"principles\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Principles`}<a parentName=\"h3\" {...{\n        \"href\": \"#principles\",\n        \"aria-label\": \"principles permalink\",\n        \"className\": \"headerAnchor after\"\n      }}><i parentName=\"a\" {...{\n          \"className\": \"hdsAnchorIcon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></i></a></h3>\n    <ul>\n      <li parentName=\"ul\">{`Notifications are designed to capture users' attention. `}<strong parentName=\"li\">{`Therefore, they should be used sparingly only for important information or updates.`}</strong></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Notification title should include the most important information about the notification.`}</strong>{` Aim for a title that is short, concise and easy to understand. Avoid titles that span over multiple lines.`}</li>\n      <li parentName=\"ul\">{`HDS offers multiple options for notification screen locations. Choose locations that fit best for your service and stay consistent.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`If you use automatically disappearing notifications, make sure the information is accessible elsewhere in case the user misses the notification.`}</strong></li>\n    </ul>\n    <h4 {...{\n      \"id\": \"when-to-use-each-notification-type\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`When to use each notification type?`}<a parentName=\"h4\" {...{\n        \"href\": \"#when-to-use-each-notification-type\",\n        \"aria-label\": \"when to use each notification type permalink\",\n        \"className\": \"headerAnchor after\"\n      }}><i parentName=\"a\" {...{\n          \"className\": \"hdsAnchorIcon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></i></a></h4>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Use inline notifications when information is related to the content or if you want to keep information visible at all times.`}</strong>{` Inline notifications are part of the content and should therefore be placed as close as possible to the related part of the content. Inline notifications should not be added to the page dynamically.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Use toast notifications to inform the user about a specific event or change in the system status.`}</strong>{` Toast notifications do not relate to any specific object on the page and are therefore placed on top of the content (usually top right or bottom center).`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Use invisible notifications to make system state changes more apparent for screen reader users.`}</strong>{` Some features (such as moving a product to the shopping cart) are apparent for regular users, but screen readers may need extra assist.`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"when-to-use-each-status-colour-info-success-alert-error\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`When to use each status colour (info, success, alert, error)?`}<a parentName=\"h4\" {...{\n        \"href\": \"#when-to-use-each-status-colour-info-success-alert-error\",\n        \"aria-label\": \"when to use each status colour info success alert error permalink\",\n        \"className\": \"headerAnchor after\"\n      }}><i parentName=\"a\" {...{\n          \"className\": \"hdsAnchorIcon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></i></a></h4>\n    <ul>\n      <li parentName=\"ul\">{`You can find guidelines on when to use each status colour in the `}<a parentName=\"li\" {...{\n          \"href\": \"/hds-demo/docsite-all-component-pages/design-tokens/colour#ui-colours\",\n          \"title\": \"UI colours\"\n        }}>{`colour guidelines`}</a>{`. Aim to use notification levels and colours consistently across your service.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"variations\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Variations`}<a parentName=\"h3\" {...{\n        \"href\": \"#variations\",\n        \"aria-label\": \"variations permalink\",\n        \"className\": \"headerAnchor after\"\n      }}><i parentName=\"a\" {...{\n          \"className\": \"hdsAnchorIcon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></i></a></h3>\n    <h4 {...{\n      \"id\": \"inline\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Inline`}<a parentName=\"h4\" {...{\n        \"href\": \"#inline\",\n        \"aria-label\": \"inline permalink\",\n        \"className\": \"headerAnchor after\"\n      }}><i parentName=\"a\" {...{\n          \"className\": \"hdsAnchorIcon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></i></a></h4>\n    <p>{`Inline notifications are used as part of the content. They closely relate to the part of the content and work best when placed as close to the related content as possible. Inline notifications are often used to provide or emphasise key information related to the content of the page. It is recommended not to make them closable - unless their information is not important or can be accessed somewhere else. Inline notifications greatly emphasise the information so they should be used sparingly in order not to dilute their effect. A good rule of thumb is to limit the number of simultaneous inline notifications to one.`}</p>\n    <p>{`Note! Inline notifications should not be added to the page dynamically. For this use case, use `}<a parentName=\"p\" {...{\n        \"href\": \"#toast\"\n      }}>{`Toast notifications`}</a>{`.`}</p>\n    <PlaygroundPreview mdxType=\"PlaygroundPreview\">\n  <Notification label=\"New messages\" mdxType=\"Notification\">You have received new messages.</Notification>\n  <Notification label=\"Form done\" type=\"success\" style={{\n        marginTop: 'var(--spacing-s)'\n      }} mdxType=\"Notification\">Form submit was successful!</Notification>\n  <Notification label=\"Slow loading\" type=\"alert\" style={{\n        marginTop: 'var(--spacing-s)'\n      }} mdxType=\"Notification\">Loading is taking longer than expected.</Notification>\n  <Notification label=\"Missing information\" type=\"error\" style={{\n        marginTop: 'var(--spacing-s)'\n      }} mdxType=\"Notification\">Form is missing critical information.</Notification>\n    </PlaygroundPreview>\n    <h4 {...{\n      \"id\": \"toast\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Toast`}<a parentName=\"h4\" {...{\n        \"href\": \"#toast\",\n        \"aria-label\": \"toast permalink\",\n        \"className\": \"headerAnchor after\"\n      }}><i parentName=\"a\" {...{\n          \"className\": \"hdsAnchorIcon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></i></a></h4>\n    <p>{`Toasts notifications provide lightweight feedback for changes in system status such as successful saving or Internet disconnection. Toasts appear on top of the content (usually top right or bottom center). Be wary using automatically disappearing toasts for critical information such as errors. It is also a good practise to make notifications accessible elsewhere in case the user misses them before they disappear.`}</p>\n\n    <PlaygroundPreview mdxType=\"PlaygroundPreview\">\n  <ToastExample mdxType=\"ToastExample\" />\n    </PlaygroundPreview>\n    <h4 {...{\n      \"id\": \"notification-sizes\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Notification sizes`}<a parentName=\"h4\" {...{\n        \"href\": \"#notification-sizes\",\n        \"aria-label\": \"notification sizes permalink\",\n        \"className\": \"headerAnchor after\"\n      }}><i parentName=\"a\" {...{\n          \"className\": \"hdsAnchorIcon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></i></a></h4>\n    <p>{`HDS Navigation component supports many commonly used features out of the box. The main navigation bar can be configured to include search, language selection and user profile actions. You may also easily customize the action row with your own actions.`}</p>\n    <PlaygroundPreview mdxType=\"PlaygroundPreview\">\n  <Notification size=\"large\" label=\"New messages\" mdxType=\"Notification\">You have received new messages.</Notification>\n  <Notification size=\"default\" label=\"New messages\" style={{\n        marginTop: 'var(--spacing-s)'\n      }} mdxType=\"Notification\">You have received new messages.</Notification>\n  <Notification size=\"small\" label=\"New messages\" style={{\n        marginTop: 'var(--spacing-s)'\n      }} mdxType=\"Notification\">You have received new messages.</Notification>\n    </PlaygroundPreview>\n    <h4 {...{\n      \"id\": \"invisible\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Invisible`}<a parentName=\"h4\" {...{\n        \"href\": \"#invisible\",\n        \"aria-label\": \"invisible permalink\",\n        \"className\": \"headerAnchor after\"\n      }}><i parentName=\"a\" {...{\n          \"className\": \"hdsAnchorIcon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></i></a></h4>\n    <p>{`Invisible notifications do not show up on screen and they are meant to aid screen reader users. Some updates to system status may be apparent to regular users through animations etc. However, screen readers can easily ignore this type of feedback. Invisible notifications are not visible to regular users but screen readers detect them. Use them to improve user experience for screen reader users.`}</p>\n    <PlaygroundPreview mdxType=\"PlaygroundPreview\">\n  <Notification label=\"New messages\" invisible mdxType=\"Notification\">You have received new messages. This notification is invisible.</Notification>\n    </PlaygroundPreview>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["ToastExample","React","open","setOpen","autoCloseOpen","setAutoCloseOpen","onClick","mdxType","style","display","marginTop","label","position","dismissible","closeButtonLabelText","onClose","zIndex","autoClose","_frontmatter","layoutProps","MDXLayout","children","pageContext","MDXContent","components","props","parentName","type","size","invisible","isMDXComponent"],"sourceRoot":""}