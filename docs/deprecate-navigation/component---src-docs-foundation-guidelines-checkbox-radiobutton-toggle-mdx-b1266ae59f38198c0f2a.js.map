{"version":3,"file":"component---src-docs-foundation-guidelines-checkbox-radiobutton-toggle-mdx-b1266ae59f38198c0f2a.js","mappings":"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","sources":["webpack://site/./src/docs/foundation/guidelines/checkbox-radiobutton-toggle.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/harri.lappalainen/git/helsinki-design-system/site/src/components/layout.js\";\nimport { Notification, Checkbox, RadioButton, ToggleButton, SelectionGroup, Link } from \"hds-react\";\nimport ExternalLink from '../../../components/ExternalLink';\nimport LeadParagraph from '../../../components/LeadParagraph';\nimport PlaygroundPreview from '../../../components/Playground';\nimport InternalLink from '../../../components/InternalLink';\nexport const RadioButtonExample = () => {\n  const [selectedItem, setSelectedItem] = React.useState(\"1\");\n  const onChange = event => {\n    setSelectedItem(event.target.value);\n  };\n  return <SelectionGroup label=\"Choose your age group\" mdxType=\"SelectionGroup\">\n      <RadioButton id=\"v-radio1\" name=\"v-radio\" value=\"1\" label=\"Under 16\" checked={selectedItem === \"1\"} onChange={onChange} mdxType=\"RadioButton\" />\n      <RadioButton id=\"v-radio2\" name=\"v-radio\" value=\"2\" label=\"17-35\" checked={selectedItem === \"2\"} onChange={onChange} mdxType=\"RadioButton\" />\n      <RadioButton id=\"v-radio3\" name=\"v-radio\" value=\"3\" label=\"35-64\" checked={selectedItem === \"3\"} onChange={onChange} mdxType=\"RadioButton\" />\n      <RadioButton id=\"v-radio4\" name=\"v-radio\" value=\"4\" label=\"Over 65\" checked={selectedItem === \"4\"} onChange={onChange} mdxType=\"RadioButton\" />\n    </SelectionGroup>;\n};\nexport const CheckboxExample = () => {\n  const [checked, setChecked] = React.useState(false);\n  return <Checkbox id=\"checkbox\" label=\"I have a loyalty card\" checked={checked} onChange={() => setChecked(!checked)} mdxType=\"Checkbox\" />;\n};\nexport const SelectionGroupExample = () => {\n  const [checkedItems, setCheckedItems] = React.useState({\n    \"v-checkbox1\": true,\n    \"v-checkbox2\": true\n  });\n  const onChange = event => {\n    setCheckedItems({\n      ...checkedItems,\n      [event.target.name]: event.target.checked\n    });\n  };\n  return <SelectionGroup label=\"Select your interests\" mdxType=\"SelectionGroup\">\n      <Checkbox id=\"v-checkbox1\" name=\"v-checkbox1\" label=\"Music\" checked={checkedItems[\"v-checkbox1\"]} onChange={onChange} mdxType=\"Checkbox\" />\n      <Checkbox id=\"v-checkbox2\" name=\"v-checkbox2\" label=\"Arts and museums\" checked={checkedItems[\"v-checkbox2\"]} onChange={onChange} mdxType=\"Checkbox\" />\n      <Checkbox id=\"v-checkbox3\" name=\"v-checkbox3\" label=\"Sports and outdoor activities\" checked={checkedItems[\"v-checkbox3\"]} onChange={onChange} mdxType=\"Checkbox\" />\n      <Checkbox id=\"v-checkbox4\" name=\"v-checkbox4\" label=\"Cooking\" checked={checkedItems[\"v-checkbox4\"]} onChange={onChange} mdxType=\"Checkbox\" />\n    </SelectionGroup>;\n};\nexport const ToggleExample = () => {\n  const [hasCustomTheme, setHasCustomTheme] = React.useState(false);\n  const customTheme = {\n    title: 'Primary theme',\n    label: 'Use primary theme',\n    baseStyles: {\n      ['--label-color-default']: 'var(--color-coat-of-arms)'\n    },\n    titleStyles: {\n      color: 'var(--color-coat-of-arms)'\n    },\n    toggle: {\n      '--toggle-button-color': 'var(--color-coat-of-arms)',\n      '--toggle-button-hover-color': 'var(--color-coat-of-arms)'\n    }\n  };\n  return <div style={hasCustomTheme ? customTheme.baseStyles : {}}>\n      <h2 style={hasCustomTheme ? customTheme.titleStyles : undefined}>\n        {hasCustomTheme ? customTheme.title : 'Default theme'}</h2>\n      <ToggleButton id=\"toggle-button-1\" label={customTheme.label} checked={hasCustomTheme} theme={hasCustomTheme ? customTheme.toggle : {}} onChange={() => setHasCustomTheme(!hasCustomTheme)} mdxType=\"ToggleButton\" />\n    </div>;\n};\nexport const _frontmatter = {};\nconst layoutProps = {\n  RadioButtonExample,\n  CheckboxExample,\n  SelectionGroupExample,\n  ToggleExample,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"checkboxes-radio-buttons-or-toggles\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Checkboxes, radio buttons, or toggles?`}<a parentName=\"h1\" {...{\n        \"href\": \"#checkboxes-radio-buttons-or-toggles\",\n        \"aria-label\": \"checkboxes radio buttons or toggles permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h1>\n    <LeadParagraph mdxType=\"LeadParagraph\">\n  Helsinki Design System has checkboxes, radio buttons and toggles that might seem similar to each other, but it is important to consider the use cases to decide which one to use.\n    </LeadParagraph>\n    <Notification label=\"TLDR (Too long, didn't read)\" className=\"siteNotification\" mdxType=\"Notification\">\n  <ul>\n    <li><b>Use checkboxes</b> to select multiple parallel items.</li>\n    <li><b>Use checkbox</b> for single selections to confirm on/off selection.</li>\n    <li><b>Use radio buttons</b> to select mutually exclusive options.</li>\n    <li><b>Use toggle</b> for selections affecting system settings or changing status.</li>\n  </ul>\n    </Notification>\n    <h2 {...{\n      \"id\": \"when-to-use-radio-buttons\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`When to use radio buttons?`}<a parentName=\"h2\" {...{\n        \"href\": \"#when-to-use-radio-buttons\",\n        \"aria-label\": \"when to use radio buttons permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h2>\n    <InternalLink size=\"M\" href=\"/components/radio-button\" mdxType=\"InternalLink\">HDS RadioButton component documentation</InternalLink>\n    <p>{`An application can use radio buttons when there is a list of two or more mutually exclusive choices and the user needs to select one of them. After clicking the non-selected radio button, whatever was previously selected is deselected. In traditional application design, the first radio button in the list was always selected by default. But not all modern websites follow this convention and rather use empty radio buttons by default. Websites today, forms, and applications inconsistently select one or leave all radio buttons blank by default. If none of the buttons is selected by default, users have no way to revert to this original state after they’ve made a selection. The lack of a standard can be confusing to users.`}</p>\n    <p><strong parentName=\"p\">{`HDS strongly recommends that radio buttons are never presented unticked.`}</strong></p>\n    <p>{`Radio buttons have a lower cognitive load than dropdown menus because they make all options permanently visible so that users can easily compare them. Radio buttons are also easier to operate for users who have difficulty making precise mouse movements. (Limited space might sometimes force you to violate this guideline, but do try to keep choices visible whenever possible.)`}</p>\n    <p><strong parentName=\"p\">{`Example use:`}</strong>{` Binary choices like \"Yes\" or \"No\", age group or other similar choices that exclude other options.`}</p>\n\n    <PlaygroundPreview mdxType=\"PlaygroundPreview\">\n  <RadioButtonExample mdxType=\"RadioButtonExample\" />\n    </PlaygroundPreview>\n    <h2 {...{\n      \"id\": \"when-to-use-checkboxes\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`When to use checkboxes?`}<a parentName=\"h2\" {...{\n        \"href\": \"#when-to-use-checkboxes\",\n        \"aria-label\": \"when to use checkboxes permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h2>\n    <InternalLink size=\"M\" href=\"/components/checkbox\" mdxType=\"InternalLink\">HDS checkbox component documentation</InternalLink>\n    <p>{`Checkboxes allow the user to select zero, one, or multiple selections from a list of options. In other words, each checkbox is independent of the other checkboxes, i.e. checking one does not uncheck the others.`}</p>\n    <p>{`A stand-alone checkbox is used for a single option that the user can turn on or off.`}</p>\n    <p><strong parentName=\"p\">{`Example use:`}</strong>{` Single selection confirming On/Off selection`}</p>\n\n    <PlaygroundPreview mdxType=\"PlaygroundPreview\">\n  <CheckboxExample mdxType=\"CheckboxExample\" />\n    </PlaygroundPreview>\n    <p><strong parentName=\"p\">{`HDS recommends using checkboxes when the user is required to make more than two choices or confirm a single choice.`}</strong></p>\n    <p><strong parentName=\"p\">{`Example use:`}</strong>{` Selecting interests`}</p>\n\n    <PlaygroundPreview mdxType=\"PlaygroundPreview\">\n  <SelectionGroupExample mdxType=\"SelectionGroupExample\" />\n    </PlaygroundPreview>\n    <p><strong parentName=\"p\">{`HDS recommends using checkboxes when the user can select multiple options that are not excluding other options.`}</strong></p>\n    <h2 {...{\n      \"id\": \"when-to-use-toggles-or-switches\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`When to use toggles or switches?`}<a parentName=\"h2\" {...{\n        \"href\": \"#when-to-use-toggles-or-switches\",\n        \"aria-label\": \"when to use toggles or switches permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h2>\n    <InternalLink size=\"M\" href=\"/components/toggle-button\" mdxType=\"InternalLink\">HDS toggle component documentation</InternalLink>\n    <p>{`Toggle switches are digital On/Off switches. They prompt users to choose between two mutually exclusive options and always have a default value. Toggle buttons have been inspired by real-world physical switches (e.g. a light switch). Therefore users expect something to happen immediately when the toggle button is activated. Toggle buttons should do three things — change states, show the current state, and reveal unselected options. If your toggle button doesn’t do all these things, it has poor usability. Toggles are best used for switching between two opposing states of system functionality and preferences. They are similar to radio buttons or checkboxes in that they allow users to select from only two options.`}</p>\n    <p><strong parentName=\"p\">{`Example use:`}</strong>{` Switching between themes.`}</p>\n\n    <PlaygroundPreview mdxType=\"PlaygroundPreview\">\n  <ToggleExample mdxType=\"ToggleExample\" />\n    </PlaygroundPreview>\n    <h2 {...{\n      \"id\": \"sources-and-further-reading\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Sources and further reading`}<a parentName=\"h2\" {...{\n        \"href\": \"#sources-and-further-reading\",\n        \"aria-label\": \"sources and further reading permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h2>\n    <p>{`Note that these articles might include guides that are not in line with HDS guidelines.`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <ExternalLink href=\"https://www.nngroup.com/articles/checkboxes-vs-radio-buttons/\" mdxType=\"ExternalLink\">Checkboxes vs. Radio Buttons, N&N Group</ExternalLink>\n      </li>\n      <li parentName=\"ul\">\n        <ExternalLink href=\"https://www.nngroup.com/articles/toggle-switch-guidelines/\" mdxType=\"ExternalLink\">Toggle-Switch Guidelines, N&N Group</ExternalLink>\n      </li>\n      <li parentName=\"ul\">\n        <ExternalLink href=\"https://www.nngroup.com/articles/radio-buttons-default-selection/\" mdxType=\"ExternalLink\">Radio Buttons: Always Select One? , N&N Group</ExternalLink>\n      </li>\n      <li parentName=\"ul\">\n        <ExternalLink href=\"https://uxmovement.com/buttons/the-challenges-with-single-toggle-buttons/\" mdxType=\"ExternalLink\">The Challenges with Single Toggle Buttons, UXMovement</ExternalLink>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["RadioButtonExample","React","selectedItem","setSelectedItem","onChange","event","target","value","S","label","mdxType","R","id","name","checked","CheckboxExample","setChecked","C","SelectionGroupExample","checkedItems","setCheckedItems","ToggleExample","hasCustomTheme","setHasCustomTheme","customTheme","title","baseStyles","titleStyles","color","toggle","style","undefined","T","theme","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","parentName","N","className","size","href","isMDXComponent"],"sourceRoot":""}