{"version":3,"file":"component---src-docs-elements-components-icon-index-mdx-7c52224b76d41154fdab.js","mappings":"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","sources":["webpack://hds-site/./src/docs/elements/components/icon/accessibility.mdx","webpack://hds-site/./src/docs/elements/components/icon/code.mdx","webpack://hds-site/./src/docs/elements/components/icon/customisation.mdx","webpack://hds-site/./src/docs/elements/components/icon/index.mdx","webpack://hds-site/./src/docs/elements/components/icon/usage.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { Link } from 'hds-react';\nexport const _frontmatter = {\n  \"slug\": \"/elements/components/icon/accessibility\",\n  \"title\": \"Icon - Accessibility\"\n};\nconst layoutProps = {\n  _frontmatter\n};\n\nconst MDXLayout = ({\n  children\n}) => <>{children}</>;\n\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2>{`Accessibility`}</h2>\n    <h3>{`Pay attention to`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`For icons that do not have a visual text label but are important must be given a text alternative using the WAI-ARIA definition `}<inlineCode parentName=\"li\">{`aria-label`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`aria-labelledby`}</inlineCode>{`. See `}<Link size=\"M\" href=\"https://www.w3.org/TR/WCAG21/#text-alternatives\" external mdxType=\"Link\">{`WCAG 2.1 Text Alternatives guideline`}</Link>{` for more information.`}</li>\n      <li parentName=\"ul\">{`If the icon has a visual text label associated with it, the icon can be hidden from assistive technologies with `}<inlineCode parentName=\"li\">{`aria-hidden=\"true\"`}</inlineCode>{`. It prevents screenreaders repeating the same information twice (visual text followed by the icon description).`}</li>\n      <li parentName=\"ul\">{`If the icon is only decorative, it should always be hidden from assistive technologies with `}<inlineCode parentName=\"li\">{`aria-hidden=\"true\"`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`The colour contrast between the icon and its background must comply with `}<Link size=\"M\" href=\"https://www.w3.org/TR/WCAG21/#contrast-minimum\" external mdxType=\"Link\">{`AA Level contrast ratios`}</Link>{`.`}</li>\n    </ul>\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { Footer } from 'hds-react';\nimport { Link } from 'hds-react';\nimport { IconFacebook, IconTwitter, IconInstagram, IconYoutube, IconTiktok, IconCheckCircleFill } from 'hds-react';\nexport const _frontmatter = {\n  \"slug\": \"/elements/components/icon/code\",\n  \"title\": \"Icon - Code\"\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Playground = makeShortcode(\"Playground\");\nconst layoutProps = {\n  _frontmatter\n};\n\nconst MDXLayout = ({\n  children\n}) => <>{children}</>;\n\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2>{`Code`}</h2>\n    <h3>{`Code examples`}</h3>\n    <h4>{`Default`}</h4>\n    <Playground mdxType=\"Playground\">\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\"\n        }}>{`<IconFaceSmile aria-hidden=\"true\" />\n`}</code></pre>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-html\"\n        }}>{`<i class=\"hds-icon hds-icon--face-smile\" aria-hidden=\"true\"></i>\n`}</code></pre>\n    </Playground>\n    <h3>{`Icon sizes`}</h3>\n    <Playground mdxType=\"Playground\">\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\"\n        }}>{`<>\n<IconFaceSmile size=\"xs\" aria-hidden=\"true\" />\n<IconFaceSmile size=\"s\" aria-hidden=\"true\" />\n<IconFaceSmile size=\"m\" aria-hidden=\"true\" />\n<IconFaceSmile size=\"l\" aria-hidden=\"true\" />\n<IconFaceSmile size=\"xl\" aria-hidden=\"true\" />\n</>\n`}</code></pre>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-html\"\n        }}>{`<div>\n<i class=\"hds-icon hds-icon--face-smile hds-icon--size-xs\" aria-hidden=\"true\"></i>\n<i class=\"hds-icon hds-icon--face-smile hds-icon--size-s\" aria-hidden=\"true\"></i>\n<i class=\"hds-icon hds-icon--face-smile hds-icon--size-m\" aria-hidden=\"true\"></i>\n<i class=\"hds-icon hds-icon--face-smile hds-icon--size-l\" aria-hidden=\"true\"></i>\n<i class=\"hds-icon hds-icon--face-smile hds-icon--size-xl\" aria-hidden=\"true\"></i>\n</div>\n`}</code></pre>\n    </Playground>\n    <h3>{`Packages`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Package`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Included`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Storybook link`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Source link`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`HDS React`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><IconCheckCircleFill mdxType=\"IconCheckCircleFill\" />{` Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><Link size=\"M\" external href=\"/storybook/react/?path=/docs/icons\" mdxType=\"Link\">{`View in Storybook`}</Link></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><Link size=\"M\" external href=\"https://github.com/City-of-Helsinki/helsinki-design-system/tree/master/packages/react/src/icons\" mdxType=\"Link\">{`View source`}</Link></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`HDS Core`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><IconCheckCircleFill mdxType=\"IconCheckCircleFill\" />{` Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><Link size=\"M\" external href=\"/storybook/core/?path=/story/icons\" mdxType=\"Link\">{`View in Storybook`}</Link></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><Link size=\"M\" external href=\"https://github.com/City-of-Helsinki/helsinki-design-system/tree/master/packages/core/src/icons\" mdxType=\"Link\">{`View source`}</Link></td>\n        </tr>\n      </tbody>\n    </table>\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { Footer } from 'hds-react';\nimport { IconFacebook, IconTwitter, IconInstagram, IconYoutube, IconTiktok, IconCheckCircleFill } from 'hds-react';\nexport const _frontmatter = {\n  \"slug\": \"/elements/components/icon/customisation\",\n  \"title\": \"Icon - Customisation\"\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Playground = makeShortcode(\"Playground\");\nconst layoutProps = {\n  _frontmatter\n};\n\nconst MDXLayout = ({\n  children\n}) => <>{children}</>;\n\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2>{`Customisation`}</h2>\n    <h3>{`Customisation properties`}</h3>\n    <p>{`Customising icons is rather simple. Use the `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` property to control size and the `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` property to control colour.`}</p>\n    <h3>{`Customisation example`}</h3>\n    <Playground mdxType=\"Playground\">\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\"\n        }}>{`<>\n<IconFaceSmile size=\"xs\" color=\"var(--color-bus)\" aria-hidden=\"true\" />\n<IconFaceSmile size=\"s\" color=\"var(--color-brick)\" aria-hidden=\"true\" />\n<IconFaceSmile size=\"m\" color=\"var(--color-coat-of-arms)\" aria-hidden=\"true\" />\n<IconFaceSmile size=\"l\" color=\"var(--color-tram)\" aria-hidden=\"true\" />\n<IconFaceSmile size=\"xl\" color=\"var(--color-metro)\" aria-hidden=\"true\" />\n</>\n`}</code></pre>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-html\"\n        }}>{`<div>\n<i class=\"hds-icon hds-icon--face-smile hds-icon--size-xs\" style={{color: 'var(--color-bus)'}} aria-hidden=\"true\"></i>\n<i class=\"hds-icon hds-icon--face-smile hds-icon--size-s\" style={{color: 'var(--color-brick)'}} aria-hidden=\"true\"></i>\n<i class=\"hds-icon hds-icon--face-smile hds-icon--size-m\" style={{color: 'var(--color-coat-of-arms)'}} aria-hidden=\"true\"></i>\n<i class=\"hds-icon hds-icon--face-smile hds-icon--size-l\" style={{color: 'var(--color-tram)'}} aria-hidden=\"true\"></i>\n<i class=\"hds-icon hds-icon--face-smile hds-icon--size-xl\" style={{color: 'var(--color-metro)'}} aria-hidden=\"true\"></i>\n</div>\n`}</code></pre>\n    </Playground>\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/roni.jaakkola/Documents/local_projects/helsinki-design-system/new-site/src/components/layout.js\";\nimport { StatusLabel, Tabs } from 'hds-react';\nimport LeadParagraph from '../../../../components/LeadParagraph';\nimport Playground from '../../../../components/Playground';\nimport Accessibility from './accessibility.mdx';\nimport Code from './code.mdx';\nimport Customisation from './customisation.mdx';\nimport Usage from './usage.mdx';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n\n    <h1>{`Icon`}</h1>\n    <StatusLabel type=\"info\" mdxType=\"StatusLabel\">Stable</StatusLabel>\n    <StatusLabel type=\"success\" style={{\n      marginLeft: 'var(--spacing-xs)'\n    }} mdxType=\"StatusLabel\">\n  Accessible\n    </StatusLabel>\n    <LeadParagraph mdxType=\"LeadParagraph\">\n  Icons are used for providing visual cues and highlighting actions, denoting types and classes of information, and giving additional meaning to content.\n    </LeadParagraph>\n    <Tabs mdxType=\"Tabs\">\n  <Tabs.TabList className=\"pageTabsList\">\n    <Tabs.Tab>Usage</Tabs.Tab>\n    <Tabs.Tab>Code</Tabs.Tab>\n    <Tabs.Tab>Accessibility</Tabs.Tab>\n    <Tabs.Tab>Customisation</Tabs.Tab>\n  </Tabs.TabList>\n  <Tabs.TabPanel>\n    <Usage mdxType=\"Usage\" />\n  </Tabs.TabPanel>\n  <Tabs.TabPanel>\n    <Code mdxType=\"Code\" />\n  </Tabs.TabPanel>\n  <Tabs.TabPanel>\n    <Accessibility mdxType=\"Accessibility\" />\n  </Tabs.TabPanel>\n  <Tabs.TabPanel>\n    <Customisation mdxType=\"Customisation\" />\n  </Tabs.TabPanel>\n    </Tabs>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { Link } from 'hds-react';\nimport { IconFaceSmile } from 'hds-react';\nexport const _frontmatter = {\n  \"slug\": \"/elements/components/icon/code\",\n  \"title\": \"Icon - Usage\"\n};\nconst layoutProps = {\n  _frontmatter\n};\n\nconst MDXLayout = ({\n  children\n}) => <>{children}</>;\n\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2>{`Usage`}</h2>\n    <h3>{`Example`}</h3>\n    <IconFaceSmile aria-hidden=\"true\" mdxType=\"IconFaceSmile\" />\n    <p>{`See the `}<Link size=\"M\" href=\"visual-assets/icons\" mdxType=\"Link\">{`the icon library`}</Link>{` to browse a full list of HDS icons.`}</p>\n    <h2>{`Principles`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`An icon should always serve a distinct, easily understandable purpose.`}</strong>{` Icons should not be used solely for decoration.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`An icon should preferably be accompanied with a text label to give context for interpretation.`}</strong>{` The meaning of icons by them self can be ambiguous and change depending on the context. Label can be omitted only if the meaning of the icon is commonly established, or can be easily interpreted from the context, e.g. volume buttons in video playback.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`An icon and its related content or label should have the same meaning.`}</strong>{` Conflicting and ambivalent interpretations can have a negative effect on usability and accessibility.`}</li>\n    </ul>\n    <h3>{`Variations`}</h3>\n    <h3>{`Default`}</h3>\n    <IconFaceSmile aria-hidden=\"true\" mdxType=\"IconFaceSmile\" />\n    <hr></hr>\n    <h3>{`Icon sizes`}</h3>\n    <>\n      <IconFaceSmile size=\"xs\" aria-hidden=\"true\" mdxType=\"IconFaceSmile\" />\n      <IconFaceSmile size=\"s\" aria-hidden=\"true\" mdxType=\"IconFaceSmile\" />\n      <IconFaceSmile size=\"m\" aria-hidden=\"true\" mdxType=\"IconFaceSmile\" />\n      <IconFaceSmile size=\"l\" aria-hidden=\"true\" mdxType=\"IconFaceSmile\" />\n      <IconFaceSmile size=\"xl\" aria-hidden=\"true\" mdxType=\"IconFaceSmile\" />\n    </>\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","children","MDXContent","components","props","mdxType","parentName","L","size","href","external","isMDXComponent","name","Playground","console","warn","I","DefaultLayout","S","type","style","marginLeft","className","Tab"],"sourceRoot":""}