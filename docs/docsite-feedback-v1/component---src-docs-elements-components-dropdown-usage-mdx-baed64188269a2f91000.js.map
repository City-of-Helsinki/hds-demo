{"version":3,"file":"component---src-docs-elements-components-dropdown-usage-mdx-baed64188269a2f91000.js","mappings":"8LAYsBA,E,kDALTC,EAAe,CAC1B,KAAQ,qCACR,MAAS,oBAQLC,GALgBF,EAKU,YALF,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,cAASG,KAIZG,EAAc,CAClBL,aAAAA,GAGIM,EAAY,SAAC,GAAD,IAChBC,EADgB,EAChBA,SADgB,OAEZ,wBAAGA,IAEM,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,QAACI,EAAD,iBAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAC5E,4BACA,8BACA,QAACT,EAAD,CAAWU,WAAW,sBAAsBC,GAAG,OAAOC,aAAc,IAAIC,KAAQC,MAAM,gBAAgBC,SAAS,KAAKC,SAAU,aAA0BC,UAAQ,EAACR,QAAQ,eACzK,iCACA,mBACE,cAAIS,WAAW,OAAK,kBAAQA,WAAW,MAAnB,qDAApB,oEACA,cAAIA,WAAW,MAAf,+GAAmI,aAAGA,WAAW,KAC7I,KAAQ,wDACR,MAAS,8BAFsH,iBAAnI,QAGkC,aAAGA,WAAW,KAC5C,KAAQ,oDACR,MAAS,0BAFqB,cAHlC,wHAOA,cAAIA,WAAW,MAAf,0KAA8L,cAAIA,WAAW,MAAf,iBAA9L,OACA,cAAIA,WAAW,MAAf,+DAAmF,aAAGA,WAAW,KAC7F,KAAQ,8BADuE,YAAnF,uDAGA,cAAIA,WAAW,MAAf,gGACA,cAAIA,WAAW,MAAf,6HAEF,uDACA,mBACE,cAAIA,WAAW,OAAK,kBAAQA,WAAW,MAAnB,4BAClB,cAAIA,WAAW,OACb,cAAIA,WAAW,MAAf,kCACA,cAAIA,WAAW,MAAf,oEAGJ,cAAIA,WAAW,OAAK,kBAAQA,WAAW,MAAnB,8BAClB,cAAIA,WAAW,OACb,cAAIA,WAAW,MAAf,gCACA,cAAIA,WAAW,MAAf,6DAIN,uCACA,mBACE,cAAIA,WAAW,OAAK,kBAAQA,WAAW,MAAnB,qBAClB,cAAIA,WAAW,OACb,cAAIA,WAAW,MAAf,kDACA,cAAIA,WAAW,MAAf,wDACA,cAAIA,WAAW,MAAf,6GAIN,iCACA,gDACA,4KAA8J,aAAGA,WAAW,IACxK,KAAQ,8BADkJ,YAA9J,yBAGA,oBACA,+CACA,kSAAoR,aAAGA,WAAW,IAC9R,KAAQ,6BADwQ,YAApR,MAGA,gEACA,oBACA,kDACA,6MACA,oBACA,iDACA,wKACA,gEAMJX,EAAWY,gBAAiB","sources":["webpack://hds-site/./src/docs/elements/components/dropdown/usage.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"slug\": \"/elements/components/dropdown/code\",\n  \"title\": \"Dropdown - Usage\"\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst DateInput = makeShortcode(\"DateInput\");\nconst layoutProps = {\n  _frontmatter\n};\n\nconst MDXLayout = ({\n  children\n}) => <>{children}</>;\n\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`Usage`}</h2>\n    <h3>{`Example`}</h3>\n    <DateInput helperText=\"Use format D.M.YYYY\" id=\"date\" initialMonth={new Date()} label=\"Choose a date\" language=\"en\" onChange={function noRefCheck() {}} required mdxType=\"DateInput\" />\n    <h3>{`Principles`}</h3>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`A label should always be provided with dropdowns.`}</strong>{` Aim for labels that are short, concise and easy to understand.`}</li>\n      <li parentName=\"ul\">{`Dropdowns usually have four (4) or more options. When having only 2-3 options, it is usually better to use `}<a parentName=\"li\" {...{\n          \"href\": \"/hds-demo/docsite-feedback-v1/components/radio-button\",\n          \"title\": \"Radio button documentation\"\n        }}>{`radio buttons`}</a>{` or `}<a parentName=\"li\" {...{\n          \"href\": \"/hds-demo/docsite-feedback-v1/components/checkbox\",\n          \"title\": \"Checkbox documentation\"\n        }}>{`checkboxes`}</a>{`. Also, if options need to be easily comparable (for example, product pricing), prefer radio buttons over dropdown.`}</li>\n      <li parentName=\"ul\">{`It is recommended to set a default option for a single selection dropdown. If the default option is also the recommended option, you can mark the option with a text \"`}<em parentName=\"li\">{`(recommended)`}</em>{`\".`}</li>\n      <li parentName=\"ul\">{`If your dropdown has 8 or more options, consider using the `}<a parentName=\"li\" {...{\n          \"href\": \"#combobox-single-selection\"\n        }}>{`Combobox`}</a>{` variant which offers filtering options by typing.`}</li>\n      <li parentName=\"ul\">{`Try to avoid dropdown options that span over one line. Aim for short texts for all options.`}</li>\n      <li parentName=\"ul\">{`If possible, do input validation client-side in real-time and provide the user with immediate feedback after selection.`}</li>\n    </ul>\n    <h4>{`Should I use Select or Combobox?`}</h4>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Use Select variant when`}</strong>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`there are less than 8 options`}</li>\n          <li parentName=\"ul\">{`the user does not need to be able to filter options by typing`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Use Combobox variant when`}</strong>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`there are 8 or more options`}</li>\n          <li parentName=\"ul\">{`the user needs to be able to filter options by typing`}</li>\n        </ul>\n      </li>\n    </ul>\n    <h4>{`Icon or no icon?`}</h4>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Use an icon when`}</strong>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`there is a clear added value to using an icon`}</li>\n          <li parentName=\"ul\">{`when the icon is not just for illustrative purposes`}</li>\n          <li parentName=\"ul\">{`when you can add an icon to all select and combobox elements in the formgroup to maintain consistency`}</li>\n        </ul>\n      </li>\n    </ul>\n    <h3>{`Variations`}</h3>\n    <h3>{`Select (single selection)`}</h3>\n    <p>{`Select dropdown serves in most use cases when the user needs to select one of 4 to 7 options. If there are 8 or more options available, consider using `}<a parentName=\"p\" {...{\n        \"href\": \"#combobox-single-selection\"\n      }}>{`Combobox`}</a>{` to allow filtering.`}</p>\n    <hr></hr>\n    <h3>{`Select (multi-selection)`}</h3>\n    <p>{`Select multi-selection variant allows the user to select one or more options simultaneously. Note! Select dropdown does not feature filtering options by typing. When this feature is needed or there are a large number of options available, consider using consider using `}<a parentName=\"p\" {...{\n        \"href\": \"#combobox-multi-selection\"\n      }}>{`Combobox`}</a>{`.`}</p>\n    <p>{`Multi-select also supports icon if needed.`}</p>\n    <hr></hr>\n    <h3>{`Combobox (single selection)`}</h3>\n    <p>{`Combobox dropdown serves in most use cases when the user needs to select one from 8 or more options (up to hundreds of options). Combobox variant features filtering options by typing.`}</p>\n    <hr></hr>\n    <h3>{`Combobox (multi-selection)`}</h3>\n    <p>{`Combobox multi-select variant allows the user to select one or more options simultaneously. Combobox variant features filtering options by typing.`}</p>\n    <p>{`Multi-select also supports icon if needed.`}</p>\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","DateInput","props","console","warn","layoutProps","MDXLayout","children","MDXContent","components","mdxType","helperText","id","initialMonth","Date","label","language","onChange","required","parentName","isMDXComponent"],"sourceRoot":""}