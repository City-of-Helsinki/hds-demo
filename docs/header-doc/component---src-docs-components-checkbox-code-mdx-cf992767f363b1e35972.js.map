{"version":3,"file":"component---src-docs-components-checkbox-code-mdx-cf992767f363b1e35972.js","mappings":"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","sources":["webpack://site/./src/docs/components/checkbox/code.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { SelectionGroup, Link } from 'hds-react';\nimport ExternalLink from '../../../components/ExternalLink';\nimport Playground from '../../../components/Playground';\nimport TabsLayout from './tabs.mdx';\nexport const _frontmatter = {\n  \"slug\": \"/components/checkbox/code\",\n  \"title\": \"Checkbox - Code\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst IconCheckCircleFill = makeShortcode(\"IconCheckCircleFill\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = ({\n  children,\n  pageContext\n}) => <TabsLayout pageContext={pageContext}>{children}</TabsLayout>;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2 {...{\n      \"id\": \"code\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Code`}<a parentName=\"h2\" {...{\n        \"href\": \"#code\",\n        \"aria-label\": \"code permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h2>\n    <h3 {...{\n      \"id\": \"code-examples\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Code examples`}<a parentName=\"h3\" {...{\n        \"href\": \"#code-examples\",\n        \"aria-label\": \"code examples permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h3>\n    <h4 {...{\n      \"id\": \"checkbox-with-label\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Checkbox with label`}<a parentName=\"h4\" {...{\n        \"href\": \"#checkbox-with-label\",\n        \"aria-label\": \"checkbox with label permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h4>\n    <Playground mdxType=\"Playground\">\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\"\n        }}>{`{() => {\n  const [checkedItems, setCheckedItems] = React.useState({ \"checkbox-checked\": true, \"checkbox-checked-disabled\": true });\n  const onChange = (event) => {\n    setCheckedItems({ ...checkedItems, [event.target.id]: event.target.checked });\n  };\n  return <>\n    <Checkbox label=\"Label\" id=\"checkbox\" checked={checkedItems[\"checkbox\"]} onChange={onChange} />\n    <Checkbox label=\"Label\" id=\"checkbox-checked\" checked={checkedItems[\"checkbox-checked\"]} onChange={onChange} />\n    <Checkbox label=\"Label\" id=\"checkbox-disabled\" checked={checkedItems[\"checkbox-disabled\"]} onChange={onChange} disabled />\n    <Checkbox label=\"Label\" id=\"checkbox-checked-disabled\" checked={checkedItems[\"checkbox-checked-disabled\"]} onChange={onChange} disabled />\n  </>\n}}\n`}</code></pre>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-html\"\n        }}>{`<div>\n  <div class=\"hds-checkbox\">\n    <input type=\"checkbox\" id=\"checkbox-core\" class=\"hds-checkbox__input\" />\n    <label for=\"checkbox-core\"  class=\"hds-checkbox__label\">Label</label>\n  </div>\n\n  <div class=\"hds-checkbox\">\n    <input type=\"checkbox\" id=\"checkbox-checked-core\" class=\"hds-checkbox__input\" checked />\n    <label for=\"checkbox-checked-core\"  class=\"hds-checkbox__label\">Label</label>\n  </div>\n\n  <div class=\"hds-checkbox\">\n    <input type=\"checkbox\" id=\"checkbox-disabled-core\" class=\"hds-checkbox__input\" disabled />\n    <label for=\"checkbox-disabled-core\"  class=\"hds-checkbox__label\">Label</label>\n  </div>\n\n  <div class=\"hds-checkbox\">\n    <input type=\"checkbox\" id=\"checkbox-checked-disabled\" class=\"hds-checkbox__input\" checked disabled />\n    <label for=\"checkbox-checked-disabled\"  class=\"hds-checkbox__label\">Label</label>\n  </div>\n</div>\n`}</code></pre>\n    </Playground>\n    <h4 {...{\n      \"id\": \"checkbox-group\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Checkbox group`}<a parentName=\"h4\" {...{\n        \"href\": \"#checkbox-group\",\n        \"aria-label\": \"checkbox group permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h4>\n    <Playground mdxType=\"Playground\">\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\"\n        }}>{`{() => {\n  const [checkedItems, setCheckedItems] = React.useState({ \"v-checkbox1\": true, \"v-checkbox2\": true });\n  const onChange = (event) => {\n    setCheckedItems({ ...checkedItems, [event.target.name]: event.target.checked });\n  };\n  return (\n    <SelectionGroup label=\"Checkbox group\">\n      <Checkbox id=\"v-checkbox1\" name=\"v-checkbox1\" label=\"Option\" checked={checkedItems[\"v-checkbox1\"]} onChange={onChange} />\n      <Checkbox id=\"v-checkbox2\" name=\"v-checkbox2\" label=\"Option\" checked={checkedItems[\"v-checkbox2\"]} onChange={onChange} />\n      <Checkbox id=\"v-checkbox3\" name=\"v-checkbox3\" label=\"Option\" checked={checkedItems[\"v-checkbox3\"]} onChange={onChange} />\n      <Checkbox id=\"v-checkbox4\" name=\"v-checkbox4\" label=\"Option\" checked={checkedItems[\"v-checkbox4\"]} onChange={onChange} />\n    </SelectionGroup>\n  );\n}}\n`}</code></pre>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-html\"\n        }}>{`<fieldset class=\"hds-selection-group\">\n  <legend class=\"hds-selection-group__legend\">Checkbox group</legend>\n  <div class=\"hds-selection-group__items\">\n    <div class=\"hds-selection-group__item\">\n      <div class=\"hds-checkbox\">\n        <input type=\"checkbox\" id=\"v-checkbox1\" name=\"v-checkbox1\" class=\"hds-checkbox__input\" value=\"foo\" checked />\n        <label for=\"v-checkbox1\" class=\"hds-checkbox__label\">Option</label>\n      </div>\n    </div>\n    <div class=\"hds-selection-group__item\">\n      <div class=\"hds-checkbox\">\n        <input type=\"checkbox\" id=\"v-checkbox2\" name=\"v-checkbox2\" class=\"hds-checkbox__input\" value=\"bar\" checked/>\n        <label for=\"v-checkbox2\" class=\"hds-checkbox__label\">Option</label>\n      </div>\n    </div>\n    <div class=\"hds-selection-group__item\">\n      <div class=\"hds-checkbox\">\n        <input type=\"checkbox\" id=\"v-checkbox3\" name=\"v-checkbox3\" class=\"hds-checkbox__input\" value=\"baz\" />\n        <label for=\"v-checkbox3\" class=\"hds-checkbox__label\">Option</label>\n      </div>\n    </div>\n    <div class=\"hds-selection-group__item\">\n      <div class=\"hds-checkbox\">\n        <input type=\"checkbox\" id=\"v-checkbox4\" name=\"v-checkbox4\" class=\"hds-checkbox__input\" value=\"qux\" />\n        <label for=\"v-checkbox4\" class=\"hds-checkbox__label\">Option</label>\n      </div>\n    </div>\n  </div>\n</fieldset>\n`}</code></pre>\n    </Playground>\n    <h4 {...{\n      \"id\": \"indeterminate\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Indeterminate`}<a parentName=\"h4\" {...{\n        \"href\": \"#indeterminate\",\n        \"aria-label\": \"indeterminate permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h4>\n    <Playground mdxType=\"Playground\">\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\"\n        }}>{`{() => {\n  const CheckboxState = {\n    checked: 0,\n    unchecked: 1,\n    indeterminate: 2,\n  };\n  const areAllChecked = (state) => {\n    let checkedCount = 0;\n    Object.keys(state).forEach((key) => {\n      if (key === 'controllerCheckbox') {\n        return;\n      }\n      if (state[key] === CheckboxState.checked) {\n        checkedCount += 1;\n      }\n    });\n    return checkedCount === 4;\n  };\n  const areAllUnchecked = (state) => {\n    let checkedCount = 0;\n    Object.keys(state).forEach((key) => {\n      if (key === 'controllerCheckbox') {\n        return;\n      }\n      if (state[key] === CheckboxState.checked) {\n        checkedCount += 1;\n      }\n    });\n    return checkedCount === 1;\n  };\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case 'check': {\n        if (action.payload === 'controllerCheckbox') {\n          return {\n            controllerCheckbox: CheckboxState.checked,\n            checkbox1: CheckboxState.checked,\n            checkbox2: CheckboxState.checked,\n            checkbox3: CheckboxState.checked,\n            checkbox4: CheckboxState.checked,\n            checkbox5: CheckboxState.checked,\n          };\n        }\n        return {\n          ...state,\n          [action.payload]: CheckboxState.checked,\n          controllerCheckbox: areAllChecked(state) ? CheckboxState.checked : CheckboxState.indeterminate,\n        };\n      }\n      case 'uncheck': {\n        if (action.payload === 'controllerCheckbox') {\n          return {\n            controllerCheckbox: CheckboxState.unchecked,\n            checkbox1: CheckboxState.unchecked,\n            checkbox2: CheckboxState.unchecked,\n            checkbox3: CheckboxState.unchecked,\n            checkbox4: CheckboxState.unchecked,\n            checkbox5: CheckboxState.unchecked,\n          };\n        }\n        return {\n          ...state,\n          [action.payload]: CheckboxState.unchecked,\n          controllerCheckbox: areAllUnchecked(state) ? CheckboxState.unchecked : CheckboxState.indeterminate,\n        };\n      }\n      default:\n        throw new Error();\n    }\n  };\n  const initialState = {\n    controllerCheckbox: CheckboxState.indeterminate,\n    checkbox1: CheckboxState.checked,\n    checkbox2: CheckboxState.checked,\n    checkbox3: CheckboxState.unchecked,\n    checkbox4: CheckboxState.checked,\n    checkbox5: CheckboxState.unchecked,\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <Fieldset heading=\"Group label *\">\n      <Checkbox\n        aria-controls=\"checkbox1 checkbox2 checkbox3 checkbox4 checkbox5\"\n        id=\"controllerCheckbox\"\n        label=\"Label\"\n        indeterminate={state.controllerCheckbox === CheckboxState.indeterminate}\n        checked={state.controllerCheckbox === CheckboxState.checked}\n        style={{ marginTop: 'var(--spacing-xs)' }}\n        onChange={() => {\n          if (\n            state.controllerCheckbox === CheckboxState.unchecked ||\n            state.controllerCheckbox === CheckboxState.indeterminate\n          ) {\n            dispatch({ type: 'check', payload: 'controllerCheckbox' });\n          } else {\n            dispatch({ type: 'uncheck', payload: 'controllerCheckbox' });\n          }\n        }}\n      />\n      <ul style={{ marginLeft: 'var(--spacing-s)', paddingInlineStart: '0' }}>\n        {Object.entries(state).map((entry) => {\n          if (entry[0] === 'controllerCheckbox') {\n            return null;\n          }\n          return (\n            <li key={entry[0]} style={{ marginTop: 'var(--spacing-s)', listStyle: 'none' }}>\n              <Checkbox\n                id={entry[0]}\n                key={entry[0]}\n                label=\"Label\"\n                checked={entry[1] === CheckboxState.checked}\n                onChange={() => {\n                  if (entry[1] === CheckboxState.unchecked) {\n                    dispatch({ type: 'check', payload: entry[0] });\n                  } else {\n                    dispatch({ type: 'uncheck', payload: entry[0] });\n                  }\n                }}\n              />\n            </li>\n          );\n        })}\n      </ul>\n    </Fieldset>\n  );\n}}\n`}</code></pre>\n    </Playground>\n    <h3 {...{\n      \"id\": \"packages\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Packages`}<a parentName=\"h3\" {...{\n        \"href\": \"#packages\",\n        \"aria-label\": \"packages permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Package`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Included`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Storybook link`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Source link`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`HDS React`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><div style={{\n              display: 'flex',\n              gap: 'var(--spacing-3-xs)'\n            }}><IconCheckCircleFill mdxType=\"IconCheckCircleFill\" />{` Yes `}</div></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><Link openInNewTab openInNewTabAriaLabel=\"Opens in a new tab\" href=\"/storybook/react/?path=/story/components-checkbox--default\" mdxType=\"Link\">{`View in Storybook`}</Link></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><ExternalLink openInNewTab openInNewTabAriaLabel=\"Opens in a new tab\" href=\"https://github.com/City-of-Helsinki/helsinki-design-system/blob/master/packages/react/src/components/checkbox/Checkbox.tsx\" mdxType=\"ExternalLink\">{`View source`}</ExternalLink></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`HDS Core`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><div style={{\n              display: 'flex',\n              gap: 'var(--spacing-3-xs)'\n            }}><IconCheckCircleFill mdxType=\"IconCheckCircleFill\" />{` Yes `}</div></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><Link openInNewTab openInNewTabAriaLabel=\"Opens in a new tab\" href=\"/storybook/core/?path=/story/components-checkbox--default\" mdxType=\"Link\">{`View in Storybook`}</Link></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><ExternalLink openInNewTab openInNewTabAriaLabel=\"Opens in a new tab\" href=\"https://github.com/City-of-Helsinki/helsinki-design-system/tree/master/packages/core/src/components/checkbox\" mdxType=\"ExternalLink\">{`View source`}</ExternalLink></td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"properties\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Properties`}<a parentName=\"h3\" {...{\n        \"href\": \"#properties\",\n        \"aria-label\": \"properties permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h3>\n    <p>{`Note! You can find the full list of properties in the `}<Link openInNewTab openInNewTabAriaLabel=\"Opens in a new tab\" href=\"/storybook/react/?path=/story/components-checkbox--default\" mdxType=\"Link\">{`React Storybook.`}</Link></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Values`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default value`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`checked`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`If set to true, the component is checked.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`disabled`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`If set to true, the component is disabled.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`indeterminate`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`If set to true, the component is in indeterminate state.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`label`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A text label for the checkbox.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`onChange`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Callback fired when the state is changed.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`function`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","IconCheckCircleFill","props","console","warn","layoutProps","MDXLayout","children","pageContext","MDXContent","components","mdxType","parentName","style","display","gap","L","openInNewTab","openInNewTabAriaLabel","href","isMDXComponent"],"sourceRoot":""}