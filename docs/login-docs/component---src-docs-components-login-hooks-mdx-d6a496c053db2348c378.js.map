{"version":3,"file":"component---src-docs-components-login-hooks-mdx-d6a496c053db2348c378.js","mappings":"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","sources":["webpack://site/./src/docs/components/login/hooks.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { Login } from 'hds-react';\nimport Playground from '../../../components/Playground';\nimport TabsLayout from './tabs.mdx';\nexport const _frontmatter = {\n  \"slug\": \"/components/login/hooks\",\n  \"title\": \"Login - Hooks\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst PlaygroundPreview = makeShortcode(\"PlaygroundPreview\");\nconst InternalLink = makeShortcode(\"InternalLink\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = ({\n  children,\n  pageContext\n}) => <TabsLayout pageContext={pageContext}>{children}</TabsLayout>;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"hooks\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Hooks`}<a parentName=\"h2\" {...{\n        \"href\": \"#hooks\",\n        \"aria-label\": \"hooks permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h2>\n    <p>{`Hooks are the easiest way to listen to signals. Most hooks return the last triggered signal and re-renders the component. Re-rendering is done only if the listener returns true. So listeners added by hooks must return a boolean.`}</p>\n    <p>{`Hooks dispose of the listeners when the component unmounts.`}</p>\n    <h3 {...{\n      \"id\": \"generic-hooks\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Generic hooks`}<a parentName=\"h3\" {...{\n        \"href\": \"#generic-hooks\",\n        \"aria-label\": \"generic hooks permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Hook`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Arguments`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Return value`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`useSignalListener(listener)`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The listener function. There are no trigger props. The listener is always called when any signal is emitted in any namespace. The listener should return `}<inlineCode parentName=\"td\">{`true`}</inlineCode>{` if the component should re-render.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`An array of `}<inlineCode parentName=\"td\">{`[Signal or undefined, ()=>void]`}</inlineCode>{`. Latter is a reset function which clears the signal and re-render the component.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`useSignalTrackingWithReturnValue(triggerProps)`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Signal props need to match the incoming signal to trigger re-rendering. The hook creates a trigger from the props and re-renders if trigger returns `}<inlineCode parentName=\"td\">{`true`}</inlineCode>{`.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Same as above`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`useSignalTrackingWithCallback(triggerProps, callback)`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Signal props need to match the incoming signal to trigger the callback function. The hook never causes a re-render. The callback must do it.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`none`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[Table 1: Generic signal listener hooks]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Important!`}</strong>{` The listener passed to `}<inlineCode parentName=\"p\">{`useSignalListener`}</inlineCode>{` must be memoized or the hook will attach a new listener on each render because the props changed. The old one is disposed but to avoid unnecessary listeners, use memoization with `}<inlineCode parentName=\"p\">{`useMemo`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`useCallback`}</inlineCode>{`\nNote that all `}<inlineCode parentName=\"p\">{`triggerFor...`}</inlineCode>{` functions are constants and do not need memoization.`}</p>\n    <p><inlineCode parentName=\"p\">{`useSignalTrackingWithReturnValue`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`useSignalTrackingWithCallback`}</inlineCode>{` store their arguments to React refs, so memoization is not needed.`}</p>\n    <p>{`The array returned by the `}<inlineCode parentName=\"p\">{`useSignalListener`}</inlineCode>{` and the `}<inlineCode parentName=\"p\">{`useSignalTrackingWithReturnValue`}</inlineCode>{` have the last signal, if any, and a reset function which clears the last signal. This can be used for tracking certain errors and then resetting the array, when the user has seen a notification about the error.`}</p>\n    <p>{`Hooks cannot emit signals.`}</p>\n    <PlaygroundPreview mdxType=\"PlaygroundPreview\">\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\"\n        }}>{`import {\n  useSignalListener,\n  useSignalListenerWithReturnValue,\n  triggerForAllSessionPollerErrors,\n  isSessionEndedSignal,\n} from 'hds-react';\n\nconst ListenerComponent = () => {\n  const [ showDialog, setShowDialog ] = useState(false);\n    // listener function must be memoized when useSignalListener is used!\n  const myListener = useCallback(( signal )=>{\n    if( isSessionEndedSignal(signal) ){\n      setShowDialog(true)\n    }\n  },[]);\n  useSignalListener(myListener);\n  if ( showDialog ) {\n    return <Dialog ... />\n  }\n};\n\nconst ListenerComponentWithReturnValue = () => {\n  const [showDialog, setShowDialog] = useState(false);\n  const [sessionEndedSignal] = useSignalTrackingWithReturnValue(triggerForAllSessionPollerErrors);\n  if(isSessionEndedSignal(sessionEndedSignal)){\n    setShowDialog(true)\n  }\n  if (showDialog) {\n    return <Dialog ... />\n  }\n};\n`}</code></pre>\n    </PlaygroundPreview>\n    <h3 {...{\n      \"id\": \"oidc-client-hooks\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Oidc client hooks`}<a parentName=\"h3\" {...{\n        \"href\": \"#oidc-client-hooks\",\n        \"aria-label\": \"oidc client hooks permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Hook`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Return value`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`useOidcClient`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Returns the Oidc client,`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`OidcClient`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`useAuthenticatedUser`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Returns a user object, if it is valid and authenticated and passes `}<InternalLink href=\"/components/login/modules#methods\" mdxType=\"InternalLink\">{`isValidUser()`}</InternalLink>{` check`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`User`}</inlineCode>{` or `}<inlineCode parentName=\"td\">{`null`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`useCachedAmr`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Returns the user's amr value. It is cached because in some cases it must be decrypted from id_token.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string[]`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`useOidcClientTracking`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Returns an array of `}<inlineCode parentName=\"td\">{`[Signal, resetFunction, oidcClient instance]`}</inlineCode>{`. The hook forces the component using it to re-render each time the listener is triggered`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`[Signal or undefined, ()=>void, OidcClient]`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[Table 2: Oidc client hooks]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n    <PlaygroundPreview mdxType=\"PlaygroundPreview\">\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\"\n        }}>{`import { useOidcClient, useOidcClientTracking, useAuthenticatedUser, useCachedAmr } from 'hds-react';\n\nconst OidcClientHooks = () => {\n  const client = useOidcClient();\n  const [lastSignal, reset, oidcClient] = useOidcClientTracking();\n  const user = useAuthenticatedUser();\n  const amr = useCachedAmr();\n  if (user) {\n    return <p>Your amr is: {amr ? amr[0] : 'none'}</p>;\n  } else {\n    return (\n      <Button\n        onClick={() => {\n          client.login();\n        }}\n      >\n        Log in!\n      </Button>\n    );\n  }\n};\n`}</code></pre>\n    </PlaygroundPreview>\n    <h3 {...{\n      \"id\": \"api-tokens-client-hooks\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Api tokens client hooks`}<a parentName=\"h3\" {...{\n        \"href\": \"#api-tokens-client-hooks\",\n        \"aria-label\": \"api tokens client hooks permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Hook`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Return value`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`useApiTokensClient`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Returns the Api tokens client`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ApiTokensClient`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`useApiTokens`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Returns functions for checking tokens and status of renewal`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`{getStoredApiTokens(), isRenewing()}`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`useApiTokensClientTracking`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Returns an array of `}<inlineCode parentName=\"td\">{`[Signal, resetFunction, apiTokensClient instance]`}</inlineCode>{`. The hook forces the component using it to re-render each time the listener is triggered`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`[Signal or undefined, ()=>void, ApiTokensClient]`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[Table 3: Api tokens client hooks]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n    <PlaygroundPreview mdxType=\"PlaygroundPreview\">\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\"\n        }}>{`import { useApiTokensClient, useApiTokens, useApiTokensClientTracking } from 'hds-react';\n\nconst ApiTokensClientHooks = () => {\n  const client = useApiTokensClient();\n  const { getStoredApiTokens, isRenewing } = useApiTokens();\n  const [lastSignal, reset, apiTokensClient] = useApiTokensClientTracking();\n  if (isRenewing()) {\n    return <p>Your api tokens are renewed!</p>;\n  }\n  if (getStoredApiTokens()) {\n    return <p>You have api tokens!</p>;\n  }\n};\n`}</code></pre>\n    </PlaygroundPreview>\n    <h3 {...{\n      \"id\": \"session-poller-hooks\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Session poller hooks`}<a parentName=\"h3\" {...{\n        \"href\": \"#session-poller-hooks\",\n        \"aria-label\": \"session poller hooks permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Hook`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Return value`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`useSessionPoller`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Returns the Session poller,`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`SessionPoller`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`useSessionPollerTracking`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Returns an array of `}<inlineCode parentName=\"td\">{`[Signal, resetFunction, sessionPoller instance]`}</inlineCode>{`. The hook forces the component using it to re-render each time the listener is triggered`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`[Signal or undefined, ()=>void, SessionPoller]`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[Table 4: Session poller hooks]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n    <PlaygroundPreview mdxType=\"PlaygroundPreview\">\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\"\n        }}>{`import { useSessionPoller, useSessionPollerTracking } from 'hds-react';\n\nconst SessionPollerHooks = () => {\n  const poller = useSessionPoller();\n  const [lastSignal, reset, sessionPoller] = useSessionPollerTracking();\n  if (isSessionPollerStoppedSignal(lastSignal)) {\n    <Button\n      onClick={() => {\n        poller.start();\n      }}\n    >\n      Start polling!\n    </Button>;\n  }\n};\n`}</code></pre>\n    </PlaygroundPreview>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","mdx","PlaygroundPreview","InternalLink","layoutProps","MDXLayout","_ref","children","pageContext","TabsLayout","MDXContent","_ref2","components","_objectWithoutProperties","_excluded","Object","assign","mdxType","parentName","href","isMDXComponent"],"sourceRoot":""}