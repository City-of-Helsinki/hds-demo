"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[2653],{21669:function(t,e,a){a.r(e),a.d(e,{_frontmatter:function(){return d},default:function(){return g}});var n=a(63366),r=(a(67294),a(64983)),l=a(44186),i=a(88562),s=a(1076),o=(a(80699),["components"]),d={slug:"/components/signals",title:"Login - Signals"},p={_frontmatter:d},m=function(t){var e=t.children,a=t.pageContext;return(0,r.kt)(i.default,{pageContext:a},e)};function g(t){var e=t.components,a=(0,n.Z)(t,o);return(0,r.kt)(m,Object.assign({},p,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"signals",style:{position:"relative"}},"Signals",(0,r.kt)("a",{parentName:"h2",href:"#signals","aria-label":"signals permalink",className:"header-anchor after"},(0,r.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,r.kt)("p",null,"Modules communicate with signals. A module emits signals and listener functions are triggered by them. Listener functions can be added by other modules or they can be standalone functions."),(0,r.kt)("h3",{id:"signal",style:{position:"relative"}},"Signal",(0,r.kt)("a",{parentName:"h3",href:"#signal","aria-label":"signal permalink",className:"header-anchor after"},(0,r.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,r.kt)("p",null,"Signal is an object with following properties:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Value type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"type")),(0,r.kt)("td",{parentName:"tr",align:null},"Required. Type of the signal. Can be any string, but HDS emits 'init', 'error', 'event' and 'stateChange' signals"),(0,r.kt)("td",{parentName:"tr",align:null},"string")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"namespace")),(0,r.kt)("td",{parentName:"tr",align:null},"Required. Namespace is name of the module that emitted the signal."),(0,r.kt)("td",{parentName:"tr",align:null},"string")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"payload")),(0,r.kt)("td",{parentName:"tr",align:null},"Optional. Payload contains metadata and an additional type. Payload can also be an Error object"),(0,r.kt)("td",{parentName:"tr",align:null},"unknown")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"context")),(0,r.kt)("td",{parentName:"tr",align:null},"Optional. The emitting module instance. For example an Oidc client instance. This is not required, but if missing, beacon will set it."),(0,r.kt)("td",{parentName:"tr",align:null},"unknown")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[Table 1: Signal object properties]"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"important",style:{position:"relative"}},"Important",(0,r.kt)("a",{parentName:"h3",href:"#important","aria-label":"important permalink",className:"header-anchor after"},(0,r.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,r.kt)("p",null,"Like in React, once signal (event in React) is emitted, it is destroyed after all listeners have been called. Copy the object, if it is need for later use."),(0,r.kt)("h3",{id:"beacon",style:{position:"relative"}},"Beacon",(0,r.kt)("a",{parentName:"h3",href:"#beacon","aria-label":"beacon permalink",className:"header-anchor after"},(0,r.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,r.kt)("p",null,"Beacon is the controller of all signals and listeners. It emits all signals and connects all modules. It also stores all modules.\nA module is connected by calling ",(0,r.kt)("inlineCode",{parentName:"p"},"beacon.addContext(module)"),". Beacon then calls ",(0,r.kt)("inlineCode",{parentName:"p"},"module.connect()")," with the beacon as the only argument. After that, the module can listen to and emit signals."),(0,r.kt)("h4",{id:"beacon-methods",style:{position:"relative"}},"Beacon methods",(0,r.kt)("a",{parentName:"h4",href:"#beacon-methods","aria-label":"beacon methods permalink",className:"header-anchor after"},(0,r.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Arguments"),(0,r.kt)("th",{parentName:"tr",align:null},"Return values"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"emit(signal)")),(0,r.kt)("td",{parentName:"tr",align:null},"signal to emit"),(0,r.kt)("td",{parentName:"tr",align:null},"none")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"addListener(signalProps trigger)")),(0,r.kt)("td",{parentName:"tr",align:null},"signal props that trigger the listener or ready made trigger function"),(0,r.kt)("td",{parentName:"tr",align:null},"disposer function that removes the listener")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"addSignalContext(module)")),(0,r.kt)("td",{parentName:"tr",align:null},"adds a module and its context. The ",(0,r.kt)("inlineCode",{parentName:"td"},"connect")," method of the added module is called immediately."),(0,r.kt)("td",{parentName:"tr",align:null},"Disposer function to remove context")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"getSignalContext(module)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns context for the given namespace"),(0,r.kt)("td",{parentName:"tr",align:null},"Context module or undefined")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"getAllSignalContextsAsObject()")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns all stored contexts as on object of {","[context.namespace]",":context}"),(0,r.kt)("td",{parentName:"tr",align:null},"Object")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"clear()")),(0,r.kt)("td",{parentName:"tr",align:null},"Removes all data"),(0,r.kt)("td",{parentName:"tr",align:null},"none")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[Table 2: beacon methods]"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"signal-types-and-payloads",style:{position:"relative"}},"Signal types and payloads",(0,r.kt)("a",{parentName:"h3",href:"#signal-types-and-payloads","aria-label":"signal types and payloads permalink",className:"header-anchor after"},(0,r.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Signal type"),(0,r.kt)("th",{parentName:"tr",align:null},"Variable"),(0,r.kt)("th",{parentName:"tr",align:null},"Payload"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"event")),(0,r.kt)("td",{parentName:"tr",align:null},"eventSignalType"),(0,r.kt)("td",{parentName:"tr",align:null},"Usually ",(0,r.kt)("inlineCode",{parentName:"td"},"{type:event type}")," indicating what kind of event is emitted. May also have ",(0,r.kt)("inlineCode",{parentName:"td"},"data")," property containing for example User or Tokens.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"error")),(0,r.kt)("td",{parentName:"tr",align:null},"errorSignalType"),(0,r.kt)("td",{parentName:"tr",align:null},"Payload is an error object. This way payload.type matches error.type.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"stateChange")),(0,r.kt)("td",{parentName:"tr",align:null},"stateChangeSignalType"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"{state, previousState}")," New state and the previous state, if any")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"init")),(0,r.kt)("td",{parentName:"tr",align:null},"initSignalType"),(0,r.kt)("td",{parentName:"tr",align:null},"Emitted when all modules are connected and everything is ready. Emitted only once. Note that modules may emit other signals before this.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[Table 3: signal types and payloads]"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("p",null,"Custom modules may emit any other kind of signals with different payloads."),(0,r.kt)("h3",{id:"emitting-signals",style:{position:"relative"}},"Emitting signals",(0,r.kt)("a",{parentName:"h3",href:"#emitting-signals","aria-label":"emitting signals permalink",className:"header-anchor after"},(0,r.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,r.kt)(l.ZP,{mdxType:"PlaygroundPreview"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"const error  = new OidcClientError('Failed', oidcClientError.SIGNIN_ERROR),\n\n// this is the same as\nbeacon.emit({\n  type: errorSignalType,\n  namespace: 'teamHDS',\n  payload: error,\n});\n\n// this\nbeacon.emit(createErrorSignal('teamHDS', error));\n\n// and this - if custom, namespaced beacon is created.\ncustomBeacon.emitError(error));\n\n"))),(0,r.kt)("p",null,"See also ",(0,r.kt)(s.Z,{href:"/components/login/customisation#custom-beacon-functions-for-modules",mdxType:"InternalLink"},"custom namespaced beacons"),"."),(0,r.kt)("h3",{id:"listening-to-signals",style:{position:"relative"}},"Listening to signals",(0,r.kt)("a",{parentName:"h3",href:"#listening-to-signals","aria-label":"listening to signals permalink",className:"header-anchor after"},(0,r.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,r.kt)("p",null,"A signal listener is a function which receives one argument: the signal. A listener can listen to all signals or just one type or signal with a certain namespace.\nListeners can be even more specific and listen to signals with certain payloads. In short, a listener can listen to any properties of the signal and is triggered when all properties match."),(0,r.kt)(l.ZP,{mdxType:"PlaygroundPreview"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"const listener = (signal) => {\n  // do something with the signal.\n};\n// listen to all error signals\nconst trigger = { type: 'error' };\nconst disposer = beacon.addListener(trigger, listener);\n// the listener can be removed by calling the returned disposer\ndisposer();\n"))),"Instead of writing signal types as strings, it is better to use predefined triggers:",(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)(s.Z,{href:"/components/login/modules#signals",mdxType:"InternalLink"},"Oidc client triggers")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)(s.Z,{href:"/components/login/modules#signals-1",mdxType:"InternalLink"},"Api tokens client triggers")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)(s.Z,{href:"/components/login/modules#signals-2",mdxType:"InternalLink"},"Session poller triggers")),(0,r.kt)("li",{parentName:"ul"},"or call generic trigger creators")),(0,r.kt)("h3",{id:"generic-triggers",style:{position:"relative"}},"Generic triggers",(0,r.kt)("a",{parentName:"h3",href:"#generic-triggers","aria-label":"generic triggers permalink",className:"header-anchor after"},(0,r.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,r.kt)("p",null,"Generic trigger creators are functions that return predefined props to listen. They are not objects, so they can be used to create triggers for multiple namespaces, payloads and so on."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Trigger creator"),(0,r.kt)("th",{parentName:"tr",align:null},"Arguments"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"createTriggerPropsForAllSignals(namespace)")),(0,r.kt)("td",{parentName:"tr",align:null},"namespace to listen to. If omitted listens to all signals"),(0,r.kt)("td",{parentName:"tr",align:null},"all namespaces")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"createTriggerForAllNamespaces()")),(0,r.kt)("td",{parentName:"tr",align:null},"Listens to all signals in any namespace."),(0,r.kt)("td",{parentName:"tr",align:null},"none")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"createStateChangeTriggerProps(namespace, state, previousState)")),(0,r.kt)("td",{parentName:"tr",align:null},"namespace to listen to. Given state and previousState must also match. Both are optional."),(0,r.kt)("td",{parentName:"tr",align:null},"all namespaces")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"createInitTriggerProps(namespace)")),(0,r.kt)("td",{parentName:"tr",align:null},"namespace to listen to. Listens only to ",(0,r.kt)("inlineCode",{parentName:"td"},"init")," signals"),(0,r.kt)("td",{parentName:"tr",align:null},"all namespaces")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"createEventTriggerProps(namespace,type)")),(0,r.kt)("td",{parentName:"tr",align:null},"namespace and payload.type to listen to. Listens only to ",(0,r.kt)("inlineCode",{parentName:"td"},"event")," signals"),(0,r.kt)("td",{parentName:"tr",align:null},"all namespaces")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"createErrorTriggerProps(namespace,type)")),(0,r.kt)("td",{parentName:"tr",align:null},"namespace and payload.type to listen to. Listens only to ",(0,r.kt)("inlineCode",{parentName:"td"},"error")," signals"),(0,r.kt)("td",{parentName:"tr",align:null},"all namespaces")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[Table 4: Generic trigger creators]"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)(l.ZP,{mdxType:"PlaygroundPreview"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import createStateChangeTriggerProps from 'hds-react';\nconst disposer = beacon.addListener(createStateChangeTriggerProps(), (signal) => {\n  // do something with the signal.\n});\n"))),(0,r.kt)("p",null,"Ses also ",(0,r.kt)(s.Z,{href:"/components/login/hooks#hooks",mdxType:"InternalLink"},"hooks")),(0,r.kt)("h3",{id:"generic-signal-utility-functions",style:{position:"relative"}},"Generic signal utility functions",(0,r.kt)("a",{parentName:"h3",href:"#generic-signal-utility-functions","aria-label":"generic signal utility functions permalink",className:"header-anchor after"},(0,r.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,r.kt)("h3",{id:"create",style:{position:"relative"}},"Create",(0,r.kt)("a",{parentName:"h3",href:"#create","aria-label":"create permalink",className:"header-anchor after"},(0,r.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,r.kt)("p",null,"Signals are easier to create with functions than manually setting all properties"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Function"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"createErrorSignal(namespace, payload)")),(0,r.kt)("td",{parentName:"tr",align:null},"Creates an error signal with given namespace and error payload")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"createEventSignal(namespace, payload)")),(0,r.kt)("td",{parentName:"tr",align:null},"Creates an error signal with given namespace and event payload")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"createStateChangeSignal(namespace, state, previousState)")),(0,r.kt)("td",{parentName:"tr",align:null},"Creates an error signal with given namespace and stateChange payload")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[Table 5: Generic signal creators]"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"check",style:{position:"relative"}},"Check",(0,r.kt)("a",{parentName:"h3",href:"#check","aria-label":"check permalink",className:"header-anchor after"},(0,r.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,r.kt)("p",null,"Check signal type or namespace with these utilities"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Function"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"isErrorSignal(signal)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns true if given signal is an error signal")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"isEventSignal(signal)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns true if given signal is an event signal")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"isInitSignal(signal)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns true if given signal is an init signal")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"isStateChangeSignal(signal)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns true if given signal is a stateChange signal")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"isNamespacedSignal(signal, namespace)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns true if given signal has given namespace")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[Table 6: Generic signal checks]"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"get-payloads",style:{position:"relative"}},"Get payloads",(0,r.kt)("a",{parentName:"h3",href:"#get-payloads","aria-label":"get payloads permalink",className:"header-anchor after"},(0,r.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,r.kt)("p",null,"Returns signal payload if signal type is a match"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Function"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"getErrorSignalPayload(signal)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns payload if given signal is an error signal")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"getEventSignalPayload(signal)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns true if given signal is an event signal")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"getStateChangeSignalPayload(signal)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns true if given signal is a stateChange signal")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[Table 7: Generic payloads getters]"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"convert-and-filter",style:{position:"relative"}},"Convert and filter",(0,r.kt)("a",{parentName:"h3",href:"#convert-and-filter","aria-label":"convert and filter permalink",className:"header-anchor after"},(0,r.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Function"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"convertSignalToTrigger(signal)")),(0,r.kt)("td",{parentName:"tr",align:null},"Removes context from the signal, if exists")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"filterSignals(arrayOfSignals, matchingProps)")),(0,r.kt)("td",{parentName:"tr",align:null},"Filters signals from the array. Returns signals which match given props")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[Table 8: Convert and filter signals]"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"waitforsignals",style:{position:"relative"}},"waitForSignals",(0,r.kt)("a",{parentName:"h3",href:"#waitforsignals","aria-label":"waitforsignals permalink",className:"header-anchor after"},(0,r.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,r.kt)("p",null,"The function returns a promise which is resolved, when given signal(s) have been detected. Or it rejects the promise, when a signal in optional rejection list is given."),(0,r.kt)("p",null,"The function can be used for racing conditions, for example waiting for a user renewal success or error, which ever comes first."),(0,r.kt)("p",null,"Or wait for a longer set of emitted signals from user renewal start to api token renewal end."),(0,r.kt)("p",null,"Function is called with ",(0,r.kt)("inlineCode",{parentName:"p"},"waitForSignals(beaconInstance, arrayOfTriggers, options )")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Argument"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"beaconInstance")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Beacon")),(0,r.kt)("td",{parentName:"tr",align:null},"Beacon instance where listeners are added."),(0,r.kt)("td",{parentName:"tr",align:null},"none")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"arrayOfTriggers")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Partial Signal[]")),(0,r.kt)("td",{parentName:"tr",align:null},"Array of signals/signal props to match. Each array signal is checked once and removed when it matches"),(0,r.kt)("td",{parentName:"tr",align:null},"none")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Object ")),(0,r.kt)("td",{parentName:"tr",align:null},"Optional"),(0,r.kt)("td",{parentName:"tr",align:null},"none")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options.allowSkipping")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},'If true, and triggers are in order A, B, C, D and signal "C" is received. "A", "B", "C" are all removed from array and are not checked again'),(0,r.kt)("td",{parentName:"tr",align:null},"true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options.strictOrder")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"If true, signals are not tracked in strict order. If true and signals are received in wrong order, the promise is rejected"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options.rejectOn")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Partial Signal[]")),(0,r.kt)("td",{parentName:"tr",align:null},"Array of signals/signal props, which cause promise rejection, if match is found"),(0,r.kt)("td",{parentName:"tr",align:null},"none")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[Table 9: waitForSignals utility]"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("p",null,"There is not timeout. The promise can be rejected by setting a custom signal type to ",(0,r.kt)("inlineCode",{parentName:"p"},"options.rejectOn")," and emit matching signal."))}g.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-components-login-signals-mdx-daac988823f76d8bba84.js.map