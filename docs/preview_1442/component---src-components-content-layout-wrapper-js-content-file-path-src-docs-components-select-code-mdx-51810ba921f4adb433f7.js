"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[15061],{93530:function(e,t,l){var n=l(28453),a=l(96540),r=l(27758),c=l(85837),o=(l(97045),l(36633)),s=l(46465);l(86974);function u(e){const t=Object.assign({h1:"h1",a:"a",span:"span",p:"p"},(0,n.RP)(),e.components);return o.A||i("PageTabs",!1),o.A.Tab||i("PageTabs.Tab",!0),o.A.TabList||i("PageTabs.TabList",!0),o.A.TabPanel||i("PageTabs.TabPanel",!0),a.createElement(a.Fragment,null,a.createElement(t.h1,{id:"select",style:{position:"relative"}},"Select",a.createElement(t.a,{href:"#select","aria-label":"select permalink",className:"header-anchor after"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<span class="hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs" aria-hidden="true" style="vertical-align: middle"></span>'}}))),"\n",a.createElement("div",{class:"status-label-description"},a.createElement(s.A,{type:"info"},"Draft"),a.createElement(s.A,{type:"success",style:{marginLeft:"var(--spacing-xs)"}},a.createElement(t.p,null,"Accessible")),a.createElement(r.A)),"\n",a.createElement(c.A,null,a.createElement(t.p,null,"The select is a dialog that allows users to quickly navigate and select one or multiple items from a list. It includes\na text input for filtering and supports item grouping. Dropdowns are often used as part of forms and filters.")),"\n",a.createElement(o.A,{pageContext:e.pageContext},a.createElement(o.A.TabList,null,a.createElement(o.A.Tab,{href:"/"},"Usage"),a.createElement(o.A.Tab,{href:"/code"},"Code"),a.createElement(o.A.Tab,{href:"/accessibility"},"Accessibility"),a.createElement(o.A.Tab,{href:"/customisation"},"Customisation")),a.createElement(o.A.TabPanel,null,e.children)))}function i(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}t.A=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,n.RP)(),e.components);return t?a.createElement(t,e,a.createElement(u,e)):u(e)}},96544:function(e,t,l){l.r(t),l.d(t,{default:function(){return p}});var n=l(28453),a=l(96540),r=l(71186),c=l(93530),o=l(95212),s=l(98018),u=l(98472);const i=e=>{let{children:t,pageContext:l}=e;return a.createElement(c.A,{pageContext:l},t)};function m(e){const t=Object.assign({h2:"h2",a:"a",span:"span",pre:"pre",code:"code",h3:"h3",p:"p",h4:"h4",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",ul:"ul",li:"li",strong:"strong"},(0,n.RP)(),e.components),{Playground:l,IconCheckCircleFill:c,Link:i}=t;return c||E("IconCheckCircleFill",!0),i||E("Link",!0),l||E("Playground",!0),a.createElement(a.Fragment,null,a.createElement(t.h2,{id:"code",style:{position:"relative"}},"Code",a.createElement(t.a,{href:"#code","aria-label":"code permalink",className:"header-anchor after"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<span class="hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs" aria-hidden="true" style="vertical-align: middle"></span>'}}))),"\n",a.createElement(l,{scope:{Select:r.b6}},a.createElement(t.pre,null,a.createElement(t.code,{className:"language-jsx"},"import { Select } from 'hds-react';\n\n() => {\n  return (\n    <>\n      <Select\n        required\n        multiSelect\n        texts={{\n          label: 'Select something',\n          placeholder: 'Placeholder',\n          assistive: 'Assistive text',\n          language: 'en',\n        }}\n        groups={[\n          {\n            label: 'Americium',\n            value: 'Americium',\n            options: [\n              { label: 'Americium', value: 'americium' },\n              { label: 'Berkelium', selected: true },\n              { label: 'Californium', disabled: true },\n              { label: 'Copernicium', visible: false },\n              { label: 'Do not select this', value: 'error' },\n            ],\n          },\n        ]}\n        onChange={(selectedOptions) => {\n          console.log('selectedOptions:' + selectedOptions.map((option) => option.value).join(', '));\n          if (selectedOptions.map((option) => option.value).includes('error')) {\n            return {\n              invalid: true,\n              texts: {\n                error: 'Unselect the forbidden one',\n              },\n            };\n          }\n          return {\n            invalid: false,\n          };\n        }}\n      />\n    </>\n  );\n};\n"))),"\n",a.createElement(t.h3,{id:"passing-options",style:{position:"relative"}},"Passing options",a.createElement(t.a,{href:"#passing-options","aria-label":"passing options permalink",className:"header-anchor after"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<span class="hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs" aria-hidden="true" style="vertical-align: middle"></span>'}}))),"\n",a.createElement(t.p,null,"Select accepts options as strings, objects, or HTML. The simplest format is an array of strings:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-jsx"},"<Select options={['Option 1', 'Option 2']} />\n")),"\n",a.createElement(t.p,null,"Sometimes the value shown to the user should be different than the stored value. Then the options should be objects:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-jsx"},"<Select options={[{ label: 'The label is shown to the user', value: 'The actual value' }]} />\n")),"\n",a.createElement(t.p,null,"Initially selected options can be set with the ",a.createElement(t.code,null,"value"),' property of the Select component or by setting the "selected" property of an option to ',a.createElement(t.code,null,"true"),"."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-jsx"},'// these props result in the same output\n<Select options={["Option 1", "Option 2" ]} value="Option 2"/>\n// as these props\n<Select options={[{ label: "Option 1", selected:false }, { label: "Option 2", selected:true } ]} />\n')),"\n",a.createElement(t.p,null,"Options can also be individually hidden with the ",a.createElement(t.code,null,"visible")," property or made unselectable with the ",a.createElement(t.code,null,"disabled")," property."),"\n",a.createElement(t.h4,{id:"properties-of-the-option-object",style:{position:"relative"}},"Properties of the option object",a.createElement(t.a,{href:"#properties-of-the-option-object","aria-label":"properties of the option object permalink",className:"header-anchor after"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<span class="hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs" aria-hidden="true" style="vertical-align: middle"></span>'}}))),"\n",a.createElement(t.table,null,a.createElement(t.thead,null,a.createElement(t.tr,null,a.createElement(t.th,null,"Property"),a.createElement(t.th,null,"Description"),a.createElement(t.th,null,"Values"),a.createElement(t.th,null,"Default value"))),a.createElement(t.tbody,null,a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"disabled")),a.createElement(t.td,null,"Can the option be selected or unselected."),a.createElement(t.td,null,a.createElement(t.code,null,"boolean")),a.createElement(t.td,null,"false")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"isGropLabel")),a.createElement(t.td,null,"Internal. Indicates is a group label option. Should not be edited."),a.createElement(t.td,null,a.createElement(t.code,null,"boolean")),a.createElement(t.td,null,"false")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"label")),a.createElement(t.td,null,"Label, visible to the user."),a.createElement(t.td,null,a.createElement(t.code,null,"string")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"selected")),a.createElement(t.td,null,"Is the option selected."),a.createElement(t.td,null,a.createElement(t.code,null,"boolean")),a.createElement(t.td,null,"false")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"value")),a.createElement(t.td,null,"Value, not visible to the user."),a.createElement(t.td,null,a.createElement(t.code,null,"string")),a.createElement(t.td,null,"false")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"visible")),a.createElement(t.td,null,"Is the option visible. Options are hidden, for example, when filtered out."),a.createElement(t.td,null,a.createElement(t.code,null,"boolean")),a.createElement(t.td,null,"false")),a.createElement(t.tr,null,a.createElement(t.td,null,"[Table 1: Option properties]"),a.createElement(t.td),a.createElement(t.td),a.createElement(t.td)))),"\n",a.createElement(t.p,null,"Internally, all options are always converted to objects. Whenever options are passed to callbacks like ",a.createElement(t.code,null,"onChange")," or ",a.createElement(t.code,null,"onSearch"),", the options are in object format."),"\n",a.createElement(t.h3,{id:"options-as-groups",style:{position:"relative"}},"Options as groups",a.createElement(t.a,{href:"#options-as-groups","aria-label":"options as groups permalink",className:"header-anchor after"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<span class="hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs" aria-hidden="true" style="vertical-align: middle"></span>'}}))),"\n",a.createElement(t.p,null,"Options can be grouped by providing a ",a.createElement(t.code,null,"groups")," property. Groups have only ",a.createElement(t.code,null,"label")," and ",a.createElement(t.code,null,"options")," properties."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-jsx"},"<Select\n  groups={[\n    {\n      label: 'Group 1 label',\n      options: [{ label: 'Option 1' }, { label: 'Option 2' }],\n    },\n    {\n      label: 'Group 2 label',\n      options: [{ label: 'Option 1' }, { label: 'Option 2' }],\n    },\n  ]}\n/>\n")),"\n",a.createElement(t.p,null,"If there is only one group and the label is empty, the label is not shown. Multiple groups should all have labels. If the Select has ",a.createElement(t.code,null,"multiSelect")," set to ",a.createElement(t.code,null,"true"),", the group label can also be selected. Selecting it selects all options in that group. Selecting all options individually also selects the group's label."),"\n",a.createElement(t.p,null,"Internally, all options are set into a group even if the ",a.createElement(t.code,null,"groups")," property is not passed in props. The first option of all groups is always an option with ",a.createElement(t.code,null,"option.isGroupLabel")," set to ",a.createElement(t.code,null,"true"),". Even if the label was not given."),"\n",a.createElement(t.p,null,"This ensures the data is always in the same format internally and in all callbacks, despite what format options were passed to the component."),"\n",a.createElement(t.p,null,"The data and selected options are easily handled with ",a.createElement(o.A,{href:"#utility-functions"},"utility functions"),"."),"\n",a.createElement(t.h3,{id:"options-as-html",style:{position:"relative"}},"Options as HTML",a.createElement(t.a,{href:"#options-as-html","aria-label":"options as html permalink",className:"header-anchor after"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<span class="hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs" aria-hidden="true" style="vertical-align: middle"></span>'}}))),"\n",a.createElement(t.p,null,"Options can also be defined the same way the native ",a.createElement(t.code,null,"<select>")," element accepts them."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-jsx"},'// some properties are omitted to make the example clearer\n<Select>\n  <optgroup label="Group 1">\n    <option value="opt1">Option 1</option>\n    <option value="opt2">Option 2</option>\n  </optgroup>\n  <optgroup label="Group 2">\n    <option value="opt3">Option 3</option>\n    <option value="opt4">Option 4</option>\n  </optgroup>\n</Select>\n')),"\n",a.createElement(t.h3,{id:"changing-options-at-runtime",style:{position:"relative"}},"Changing options at runtime",a.createElement(t.a,{href:"#changing-options-at-runtime","aria-label":"changing options at runtime permalink",className:"header-anchor after"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<span class="hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs" aria-hidden="true" style="vertical-align: middle"></span>'}}))),"\n",a.createElement(t.p,null,"Options can be changed by passing a new set of ",a.createElement(t.code,null,"groups")," or ",a.createElement(t.code,null,"options")," as props to the component. This will naturally create a new instance of the component and clear the component's internal state."),"\n",a.createElement(t.p,null,"The ",a.createElement(t.code,null,"onChange")," callback can also return a new set of options. This is the easiest way to manipulate existing options. It can be used when there should be a ",a.createElement(s.A,{href:"https://hds.hel.fi/storybook/react/?path=/story/components-select--with-min-max"},"minimum or maximum number of options")," or if at least one option must be selected:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-jsx"},"import { Select, iterateAndCopyGroup } from 'hds-react';\n\n// some properties are omitted to make the example clearer\n<Select\n  invalid\n  onChange={(selectedOptions, clickedOption, data) => {\n    // undo invalid state after a selection has been made\n    if (selectedOptions.length > 0) {\n      return {\n        invalid: false,\n      };\n    }\n    // return a new set of options where the unselected is still selected\n    return {\n      groups: iterateAndCopyGroup(data.groups, (option) => {\n        if (option.value === clickedOption.value) {\n          return { ...option, selected: true };\n        }\n        return option;\n      }),\n    };\n  }}\n/>;\n")),"\n",a.createElement(s.A,{href:"https://hds.hel.fi/storybook/react/?path=/story/components-select--keep-one-selection"},a.createElement(t.p,null,"See the code in action in Storybook.")),"\n",a.createElement(t.p,null,a.createElement(o.A,{href:"#handling-changes"},"The documentation")," of the ",a.createElement(t.code,null,"onChange")," describes all properties that can\nbe updated within the callback."),"\n",a.createElement(t.h3,{id:"handling-changes",style:{position:"relative"}},"Handling changes",a.createElement(t.a,{href:"#handling-changes","aria-label":"handling changes permalink",className:"header-anchor after"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<span class="hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs" aria-hidden="true" style="vertical-align: middle"></span>'}}))),"\n",a.createElement(t.p,null,"When the user changes the selected options, the ",a.createElement(t.code,null,"onChange")," is called. Other user actions do not trigger the callback. Not even searching or filtering."),"\n",a.createElement(t.p,null,"The callback has the following signature:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-jsx"},"// some properties are omitted to make the example clearer\n<Select onChange={(selectedOptions, clickedOption, data) => {...} />;\n")),"\n",a.createElement(t.table,null,a.createElement(t.thead,null,a.createElement(t.tr,null,a.createElement(t.th,null,"Argument"),a.createElement(t.th,null,"Description"),a.createElement(t.th,null,"Values"),a.createElement(t.th,null,"Default value"))),a.createElement(t.tbody,null,a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"selectedOptions")),a.createElement(t.td,null,"An array of selected options in object format."),a.createElement(t.td,null,a.createElement(t.code,null,"Option[]")),a.createElement(t.td,null,"[]")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"clickedOption")),a.createElement(t.td,null,"The option that was clicked. Can be a group label too. The option data is prior to the selection, so its ",a.createElement(t.code,null,"selected")," property is not updated."),a.createElement(t.td,null,a.createElement(t.code,null,"Option")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"data")),a.createElement(t.td,null,"All data of the Select component."),a.createElement(t.td,null,a.createElement(o.A,{href:"#the-data-property-in-the-callbacks"},"SelectData")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,"[Table 2: Arguments of the onChange callback ]"),a.createElement(t.td),a.createElement(t.td),a.createElement(t.td)))),"\n",a.createElement(t.p,null,"The ",a.createElement(t.code,null,"onChange")," can return data that is stored immediately to the Select component. Returning any data is optional."),"\n",a.createElement(t.table,null,a.createElement(t.thead,null,a.createElement(t.tr,null,a.createElement(t.th,null,"Property"),a.createElement(t.th,null,"Description"),a.createElement(t.th,null,"Values"),a.createElement(t.th,null,"Default value"))),a.createElement(t.tbody,null,a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"groups")),a.createElement(t.td,null,"Array of ",a.createElement(t.code,null,"groups")," in the same format as passed to the Select component. Cannot be used with ",a.createElement(t.code,null,"options"),"."),a.createElement(t.td,null,a.createElement(t.code,null,"Option[]")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"invalid")),a.createElement(t.td,null,"The ",a.createElement(t.code,null,"invalid")," property."),a.createElement(t.td,null,a.createElement(t.code,null,"boolean")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"options")),a.createElement(t.td,null,"Array of ",a.createElement(t.code,null,"options")," in the same format as passed to the Select component. Cannot be used with ",a.createElement(t.code,null,"groups"),"."),a.createElement(t.td,null,a.createElement(t.code,null,"Option[]")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"texts")),a.createElement(t.td,null,"Updated texts in the same format as passed to the Select component. Does not need to include all texts. Only updated ones."),a.createElement(t.td,null,a.createElement(t.code,null,"Texts")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,"[Table 3: Properties of the return object of the onChange callback]"),a.createElement(t.td),a.createElement(t.td),a.createElement(t.td)))),"\n",a.createElement(t.h3,{id:"texts",style:{position:"relative"}},"Texts",a.createElement(t.a,{href:"#texts","aria-label":"texts permalink",className:"header-anchor after"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<span class="hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs" aria-hidden="true" style="vertical-align: middle"></span>'}}))),"\n",a.createElement(t.p,null,"The component has default texts in Finnish, English, and Swedish. The used language is passed in ",a.createElement(t.code,null,"texts.language"),". The value can be ",a.createElement(t.code,null,"fi"),", ",a.createElement(t.code,null,"en")," or ",a.createElement(t.code,null,"sv"),". Default is ",a.createElement(t.code,null,"fi"),"."),"\n",a.createElement(t.p,null,"If additional texts are passed, those values are checked first and any missing texts are picked from the default texts with the given language."),"\n",a.createElement(t.p,null,"Usually ",a.createElement(t.code,null,"label")," and ",a.createElement(t.code,null,"placeholder")," are given to instruct the user what to do."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-jsx"},"// some properties are omitted to make the example clearer\n<Select\n  texts={{\n    language: 'en',\n    label: 'Select something',\n    placeholder: 'Choose one',\n    language: 'en',\n  }}\n/>\n")),"\n",a.createElement(t.p,null,"Note that passed texts do not have language versions. If language changes, pass new texts and updated ",a.createElement(t.code,null,"language")," property."),"\n",a.createElement(s.A,{href:"https://hds.hel.fi/storybook/react/?path=/story/components-select--with-controls"},a.createElement(t.p,null,"See a demo about changing the language.")),"\n",a.createElement(t.h4,{id:"texts-as-a-function",style:{position:"relative"}},"Texts as a function",a.createElement(t.a,{href:"#texts-as-a-function","aria-label":"texts as a function permalink",className:"header-anchor after"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<span class="hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs" aria-hidden="true" style="vertical-align: middle"></span>'}}))),"\n",a.createElement(t.p,null,"You can also pass a function that is called when a text is needed."),"\n",a.createElement(t.p,null,"The function signature is:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-jsx"},"// some properties are omitted to make the example clearer\n<Select texts={(key, contents) => {return key} />;\n")),"\n",a.createElement(t.p,null,"Possible values for the ",a.createElement(t.code,null,"key")," are listed below. The ",a.createElement(t.code,null,"contents")," is an object used for ",a.createElement(o.A,{href:"helsinki-design-system/packages/react/src\n/components/\n"},"text interpolation"),", and it contains information about the current state of the component."),"\n",a.createElement(t.table,null,a.createElement(t.thead,null,a.createElement(t.tr,null,a.createElement(t.th,null,"Key"),a.createElement(t.th,null,"Purpose"))),a.createElement(t.tbody,null,a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"assistive")),a.createElement(t.td,null,"Assistive text shown below the button and tags.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"choiceCount_multiple")),a.createElement(t.td,null,"Tells the user how many choices are available. Plural.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"choiceCount_one")),a.createElement(t.td,null,"Tells the user there is only one choice available.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"clearButtonAriaLabel_multiple")),a.createElement(t.td,null,"The ",a.createElement(t.code,null,"aria-label")," for the clear button when there are multiple choices to clear.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"clearButtonAriaLabel_one")),a.createElement(t.td,null,"The ",a.createElement(t.code,null,"aria-label")," for the clear button when there is only one choice to clear.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"dropdownButtonAriaLabel")),a.createElement(t.td,null,"The ",a.createElement(t.code,null,"aria-label")," for the main button.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"error")),a.createElement(t.td,null,"Error text. Shown only if ",a.createElement(t.code,null,"invalid")," is ",a.createElement(t.code,null,"true"),".")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"filterClearButtonAriaLabel")),a.createElement(t.td,null,"The ",a.createElement(t.code,null,"aria-label")," for the clear button of the filter input field .")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"filteredWithoutResultsInfo")),a.createElement(t.td,null,"Text shown when there are no options with the given filter.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"filterLabel")),a.createElement(t.td,null,"Label of the filter input field.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"filterPlaceholder")),a.createElement(t.td,null,"Placeholder of the filter input field.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"filterResults")),a.createElement(t.td,null,"Screenreader information shown when options have been filtered.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"filterResultsCount_multiple")),a.createElement(t.td,null,"Shown with the ",a.createElement(t.code,null,"filterResults")," text informing there are multiple options.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"filterResultsCount_one")),a.createElement(t.td,null,"Shown with the ",a.createElement(t.code,null,"filterResults")," text informing there is only one option.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"filterWithAnotherTerm")),a.createElement(t.td,null,"Suggestion shown when there are no options with the given filter.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"label")),a.createElement(t.td,null,"Label of the component.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"multiSelectGroupAriaLabel")),a.createElement(t.td,null,"The ",a.createElement(t.code,null,"aria-label")," for each group in a multiselect.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"noSelectedOptions")),a.createElement(t.td,null,"Part of the main button ",a.createElement(t.code,null,"aria-label")," when there are no options selected.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"placeholder")),a.createElement(t.td,null,"Placeholder of the component.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"required")),a.createElement(t.td,null,"Part of the main button ",a.createElement(t.code,null,"aria-label")," informing a selection is required.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"searchClearButtonAriaLabel")),a.createElement(t.td,null,"The ",a.createElement(t.code,null,"aria-label")," for the clear button of the filter input field.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"searchedWithoutResultsInfo")),a.createElement(t.td,null,"Text shown when there are results with the given search.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"searchErrorText")),a.createElement(t.td,null,"Text shown when the search resulted in an error.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"searchErrorTitle")),a.createElement(t.td,null,"Title shown when the search resulted in an error.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"searching")),a.createElement(t.td,null,"Screenreader information shown when search started.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"searchLabel")),a.createElement(t.td,null,"Label of the search input field.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"searchPlaceholder")),a.createElement(t.td,null,"Placeholder of the search input field.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"searchResults_multiple")),a.createElement(t.td,null,"Screenreader information shown when search resulted in multiple options.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"searchResults_one")),a.createElement(t.td,null,"Screenreader information shown when search resulted in one option.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"searchWithAnotherTerm")),a.createElement(t.td,null,"Suggestion shown when there are no options with the given filter.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"selectedOptionsCount_multiple")),a.createElement(t.td,null,"Part of the main button ",a.createElement(t.code,null,"aria-label")," when there are multiple options selected.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"selectedOptionsCount_one")),a.createElement(t.td,null,"Part of the main button ",a.createElement(t.code,null,"aria-label")," when there is one option selected.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"selectedOptionsCount_zero")),a.createElement(t.td,null,"Part of the main button ",a.createElement(t.code,null,"aria-label")," when there are no options selected.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"tagRemoveSelectionAriaLabel")),a.createElement(t.td,null,"The ",a.createElement(t.code,null,"aria-label")," for delete button in a tag.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"tagsClearAllButton")),a.createElement(t.td,null,"Clear all button text below tags.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"tagsClearAllButtonAriaLabel_multiple")),a.createElement(t.td,null,"The ",a.createElement(t.code,null,"aria-label")," for the clear all button below tags when there are multiple choices to clear.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"tagsClearAllButtonAriaLabel_one")),a.createElement(t.td,null,"The ",a.createElement(t.code,null,"aria-label")," for the clear all button below tags when there is only one choice to clear.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"tagsPartiallyHidden")),a.createElement(t.td,null,'Screenreader information telling some tags were hidden after pressing the "Show less" button')),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"tagsRemaining_multiple")),a.createElement(t.td,null,"Screenreader information telling there are multiple choices left after a tag was removed.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"tagsRemaining_one")),a.createElement(t.td,null,"Screenreader information telling there is only one choice left after a tag was removed.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"tagsShowAllButton")),a.createElement(t.td,null,"Show all button text below tags.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"tagsShowAllButtonAriaLabel")),a.createElement(t.td,null,"The ",a.createElement(t.code,null,"aria-label")," for the show all button below tags.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"tagsShowLessButton")),a.createElement(t.td,null,"Show all button text below tags.")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"tagsShowLessButtonAriaLabel")),a.createElement(t.td,null,"The ",a.createElement(t.code,null,"aria-label")," for the show all button below tags.")),a.createElement(t.tr,null,a.createElement(t.td,null,"[Table 4: Text keys]"),a.createElement(t.td)))),"\n",a.createElement(t.p,null,"Note that several texts are also used in ",a.createElement(t.code,null,"aria-labels"),". For example, ",a.createElement(t.code,null,"label")," and ",a.createElement(t.code,null,"placeholder")," are included in the ",a.createElement(t.code,null,"aria-label")," when needed. Some other texts are also not shown in the user interface and are only to notify screen readers."),"\n",a.createElement(t.p,null,"Current texts can be seen in the ",a.createElement(s.A,{href:"helsinki-design-system/packages/react/src\n/components/select/texts.ts\n"},"source code"),"."),"\n",a.createElement(t.h4,{id:"text-templates-and-interpolation",style:{position:"relative"}},"Text templates and interpolation",a.createElement(t.a,{href:"#text-templates-and-interpolation","aria-label":"text templates and interpolation permalink",className:"header-anchor after"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<span class="hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs" aria-hidden="true" style="vertical-align: middle"></span>'}}))),"\n",a.createElement(t.p,null,"In some cases, the outputted text depends on the option that was selected or the number of selections. For example, when a search is finished, a notification is rendered for the screen reader: \"Found 5 options for search term 'Banana'.\""),"\n",a.createElement(t.p,null,"The key of the text template is ",a.createElement(t.code,null,"searchResults")," and its contents are ",a.createElement(t.code,null,'Found {{numberIndicator}} options for search term "{{value}}"'),"."),"\n",a.createElement(t.p,null,"The Select component creates the content for the interpolation when a text is needed and interpolates the template with the content."),"\n",a.createElement(t.table,null,a.createElement(t.thead,null,a.createElement(t.tr,null,a.createElement(t.th,null,"Property"),a.createElement(t.th,null,"Description"),a.createElement(t.th,null,"Values"),a.createElement(t.th,null,"Default value"))),a.createElement(t.tbody,null,a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"label")),a.createElement(t.td,null,"Label or any related string needed for the outputted text. For example, ",a.createElement(t.code,null,"option.label")," if an option is related."),a.createElement(t.td,null,a.createElement(t.code,null,"string")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"numberIndicator")),a.createElement(t.td,null,"Related number needed for the outputted text. Like number of search results, filtered options, etc."),a.createElement(t.td,null,a.createElement(t.code,null,"number")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"selectionCount")),a.createElement(t.td,null,"Number of selected options."),a.createElement(t.td,null,a.createElement(t.code,null,"number")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"value")),a.createElement(t.td,null,"Label or any related string needed for the outputted text. For example, filtered or searched string or ",a.createElement(t.code,null,"option.value"),"."),a.createElement(t.td,null,a.createElement(t.code,null,"string")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,"[Table 5: Content of the text interpolation]"),a.createElement(t.td),a.createElement(t.td),a.createElement(t.td)))),"\n",a.createElement(t.h4,{id:"updating-texts",style:{position:"relative"}},"Updating texts",a.createElement(t.a,{href:"#updating-texts","aria-label":"updating texts permalink",className:"header-anchor after"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<span class="hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs" aria-hidden="true" style="vertical-align: middle"></span>'}}))),"\n",a.createElement(t.p,null,"Texts can be changed with props, using the text function, and also at runtime when the ",a.createElement(t.code,null,"onChange")," is called. If the ",a.createElement(t.code,null,"onChange")," returns a ",a.createElement(t.code,null,"texts")," property, the texts will be appended to the current texts."),"\n",a.createElement(t.p,null,"This is a convenient way to show error or assistive texts after the user makes changes."),"\n",a.createElement(t.h3,{id:"filtering",style:{position:"relative"}},"Filtering",a.createElement(t.a,{href:"#filtering","aria-label":"filtering permalink",className:"header-anchor after"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<span class="hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs" aria-hidden="true" style="vertical-align: middle"></span>'}}))),"\n",a.createElement(t.p,null,"Options can be filtered with a function. If the ",a.createElement(t.code,null,"filter")," property is set, the component will show an input field where the user can write text to filter options with."),"\n",a.createElement(t.p,null,"HDS provides a ",a.createElement(t.code,null,"defaultFilter")," that checks if the label of an option starts with given text. The filter function should return ",a.createElement(t.code,null,"true")," or ",a.createElement(t.code,null,"false"),". The returned value is set to the option's ",a.createElement(t.code,null,"visible")," property, and options are then hidden. Group labels are not filtered. They are visible if any of their options are visible."),"\n",a.createElement(t.p,null,"The ",a.createElement(t.code,null,"filter")," function has the following signature:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-jsx"},"// some properties are omitted to make the example clearer\n<Select filter={(option, filterValue) => {return true} />;\n")),"\n",a.createElement(t.p,null,"It is called with the following arguments:"),"\n",a.createElement(t.table,null,a.createElement(t.thead,null,a.createElement(t.tr,null,a.createElement(t.th,null,"Argument"),a.createElement(t.th,null,"Description"),a.createElement(t.th,null,"Values"))),a.createElement(t.tbody,null,a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"filterValue")),a.createElement(t.td,null,"The text user has inputted."),a.createElement(t.td,null,a.createElement(t.code,null,"string"))),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"option")),a.createElement(t.td,null,"Current option to filter."),a.createElement(t.td,null,a.createElement(t.code,null,"Option"))),a.createElement(t.tr,null,a.createElement(t.td,null,"[Table 6: Arguments of the filter function ]"),a.createElement(t.td),a.createElement(t.td)))),"\n",a.createElement(t.h3,{id:"searching",style:{position:"relative"}},"Searching",a.createElement(t.a,{href:"#searching","aria-label":"searching permalink",className:"header-anchor after"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<span class="hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs" aria-hidden="true" style="vertical-align: middle"></span>'}}))),"\n",a.createElement(t.p,null,"The user may also search for options. Select with a search should not have initial options before the user has searched for something. Unless the options are already selected. Selected options are always preserved, even if a new search result does not include them.\nThe ",a.createElement(t.code,null,"search")," function is asynchronous and should return ",a.createElement(t.code,null,"groups"),", ",a.createElement(t.code,null,"options")," or an error."),"\n",a.createElement(t.p,null,"The ",a.createElement(t.code,null,"search")," function has the following signature:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-jsx"},"// some properties are omitted to make the example clearer\n<Select search={(searchValue, selectedOptions, data)=>{...}} />;\n")),"\n",a.createElement(t.p,null,"It is called with the following arguments:"),"\n",a.createElement(t.table,null,a.createElement(t.thead,null,a.createElement(t.tr,null,a.createElement(t.th,null,"Argument"),a.createElement(t.th,null,"Description"),a.createElement(t.th,null,"Values"))),a.createElement(t.tbody,null,a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"searchValue")),a.createElement(t.td,null,"The text user has inputted."),a.createElement(t.td,null,a.createElement(t.code,null,"string"))),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"selectedOptions")),a.createElement(t.td,null,"Currently selected options."),a.createElement(t.td,null,a.createElement(t.code,null,"Option[]"))),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"data")),a.createElement(t.td,null,"All data of the Select component."),a.createElement(t.td,null,a.createElement(o.A,{href:"#the-data-property-in-the-callbacks"},"SelectData"))),a.createElement(t.tr,null,a.createElement(t.td,null,"[Table 7: Arguments of the filter function ]"),a.createElement(t.td),a.createElement(t.td)))),"\n",a.createElement(t.p,null,"The function should return either ",a.createElement(t.code,null,"groups")," or ",a.createElement(t.code,null,"options"),"."),"\n",a.createElement(t.table,null,a.createElement(t.thead,null,a.createElement(t.tr,null,a.createElement(t.th,null,"Property"),a.createElement(t.th,null,"Description"),a.createElement(t.th,null,"Values"),a.createElement(t.th,null,"Default value"))),a.createElement(t.tbody,null,a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"groups")),a.createElement(t.td,null,"Array of ",a.createElement(t.code,null,"groups")," in the same format as passed to the Select component."),a.createElement(t.td,null,a.createElement(t.code,null,"Option[]")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"options")),a.createElement(t.td,null,"Array of ",a.createElement(t.code,null,"options")," in the same format as passed to the Select component."),a.createElement(t.td,null,a.createElement(t.code,null,"Option[]")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,"[Table 8: Return values of the search function]"),a.createElement(t.td),a.createElement(t.td),a.createElement(t.td)))),"\n",a.createElement(t.p,null,"If the search results in an error, an error message is shown to the user."),"\n",a.createElement(t.h3,{id:"useselectstorage-hook",style:{position:"relative"}},"useSelectStorage hook",a.createElement(t.a,{href:"#useselectstorage-hook","aria-label":"useselectstorage hook permalink",className:"header-anchor after"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<span class="hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs" aria-hidden="true" style="vertical-align: middle"></span>'}}))),"\n",a.createElement(t.p,null,"The properties passed to the Select component must be memoized or React will render a new instance of the component when props change. This means user's selections could be lost when the component re-renders."),"\n",a.createElement(t.p,null,"Properties and selected options may be stored to the parent component's state, and the user's changes have to be syncronized manually when the ",a.createElement(t.code,null,"onChange")," is called."),"\n",a.createElement(t.p,null,"The ",a.createElement(t.code,null,"useSelectStorage"),' is an utility hook that manages the memoisation and data updates automatically. It accepts the same properties as the Select function, except the "value" property. The selected values should not be reset again manually after initialisation.'),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-jsx"},"const storage = useSelectStorage({\n  groups: [\n    {\n      label: 'Group 1',\n      options: [...],\n    },\n    {\n      label: 'Group 2',\n      options: [...],\n    },\n  ],\n  onChange: (selectedOptions) => {\n    // handle changes\n  },\n  multiSelect: true,\n  filter: defaultFilter,\n  disabled: false,\n  open: false,\n  invalid: false,\n  id: 'hds-select-component',\n});\n<Select {...storage.getProps()} />;\n")),"\n",a.createElement(t.p,null,"A working examples are in the Storybook:"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"\n",a.createElement(s.A,{href:"https://hds.hel.fi/storybook/react/?path=/story/components-select--with-storage-controls"},a.createElement(t.p,null,"How to manage language changes.")),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(s.A,{href:"https://hds.hel.fi/storybook/react/?path=/story/components-select--with-min-max"},a.createElement(t.p,null,"Handling min and max number of selections.")),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(s.A,{href:"https://hds.hel.fi/storybook/react/?path=/story/components-select--multiselect-with-custom-tags"},a.createElement(t.p,null,"Showing selections with custom tags.")),"\n"),"\n"),"\n",a.createElement(t.p,null,"In addition to the properties of the Select component, excluding the ",a.createElement(t.code,null,"value"),", the ",a.createElement(t.code,null,"useSelectStorage")," accepts the following properties."),"\n",a.createElement(t.table,null,a.createElement(t.thead,null,a.createElement(t.tr,null,a.createElement(t.th,null,"Property"),a.createElement(t.th,null,"Description"),a.createElement(t.th,null,"Values"),a.createElement(t.th,null,"Default value"))),a.createElement(t.tbody,null,a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"updateKey")),a.createElement(t.td,null,"All data in the storage is memoized with this key. Changing it will reset all data to the given props."),a.createElement(t.td,null,a.createElement(t.code,null,"string")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,"[Table 9:Properties of the useSelectStorage]"),a.createElement(t.td),a.createElement(t.td),a.createElement(t.td)))),"\n",a.createElement(t.p,null,"The hook returns functions to modify current state of the Select component."),"\n",a.createElement(t.table,null,a.createElement(t.thead,null,a.createElement(t.tr,null,a.createElement(t.th,null,"Function"),a.createElement(t.th,null,"Description"),a.createElement(t.th,null,"Arguments"),a.createElement(t.th,null,"Return value"))),a.createElement(t.tbody,null,a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"getProps")),a.createElement(t.td,null,"Returns all current props"),a.createElement(t.td,null,"-"),a.createElement(t.td,null,a.createElement(t.code,null,"SelectProps"))),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"updateAllOptions")),a.createElement(t.td,null,"Updates all options with an iteration function"),a.createElement(t.td,null,a.createElement(t.code,null,"(option, group, optionIndex, groupIndex) => Option")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"setError")),a.createElement(t.td,null,"Updates the ",a.createElement(t.code,null,"invalid")," and ",a.createElement(t.code,null,"texts.error")," properties. If new error text is given, ",a.createElement(t.code,null,"invalid")," is set to ",a.createElement(t.code,null,"true"),"."),a.createElement(t.td,null,a.createElement(t.code,null,"string")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"setOpen")),a.createElement(t.td,null,"Opens and closes the list. Note that this cannot be synced with the internal state of the component. If the user has manually opened the list, using this function may not close it."),a.createElement(t.td,null,a.createElement(t.code,null,"boolean")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"setDisabled")),a.createElement(t.td,null,"Updates the ",a.createElement(t.code,null,"disabled")," property."),a.createElement(t.td,null,a.createElement(t.code,null,"boolean")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"setInvalid")),a.createElement(t.td,null,"Updates the ",a.createElement(t.code,null,"invalid")," property."),a.createElement(t.td,null,a.createElement(t.code,null,"boolean")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"updateTexts")),a.createElement(t.td,null,"Updates new texts."),a.createElement(t.td,null,a.createElement(t.code,null,"Partial<Texts>")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"render")),a.createElement(t.td,null,"Re-renders the component with the hook. Should be called after any updates."),a.createElement(t.td,null,"-"),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,"[Table 10:Functions of the useSelectStorage hook]"),a.createElement(t.td),a.createElement(t.td),a.createElement(t.td)))),"\n",a.createElement(t.p,null,"The functions are usually called inside the onChange function. ",a.createElement(s.A,{href:"https://hds.hel.fi/storybook/react/?path=/story/components-select--with-storage-controls"},"See them in action"),"."),"\n",a.createElement(t.h3,{id:"component-properties",style:{position:"relative"}},"Component Properties",a.createElement(t.a,{href:"#component-properties","aria-label":"component properties permalink",className:"header-anchor after"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<span class="hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs" aria-hidden="true" style="vertical-align: middle"></span>'}}))),"\n",a.createElement(t.table,null,a.createElement(t.thead,null,a.createElement(t.tr,null,a.createElement(t.th,null,"Property"),a.createElement(t.th,null,"Description"),a.createElement(t.th,null,"Values"),a.createElement(t.th,null,"Default value"))),a.createElement(t.tbody,null,a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"children")),a.createElement(t.td,null,"Options as HTML elements. Can be ",a.createElement(t.code,null,"<option>")," and ",a.createElement(t.code,null,"<optgroup>")," elements."),a.createElement(t.td,null,a.createElement(t.code,null,"ReactElement<HTMLOptGroupElement or HTMLOptionElement>")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"clearable")),a.createElement(t.td,null,"If set to true, clear selections button is displayed"),a.createElement(t.td,null,a.createElement(t.code,null,"boolean")),a.createElement(t.td,null,"false")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"children")),a.createElement(t.td,null,"Options as HTML elements. Can be ",a.createElement(t.code,null,"<option>")," and ",a.createElement(t.code,null,"<optgroup>")," elements."),a.createElement(t.td,null,a.createElement(t.code,null,"ReactElement<HTMLOptGroupElement or HTMLOptionElement>")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"disabled")),a.createElement(t.td,null,"If set to true, the component is disabled."),a.createElement(t.td,null,a.createElement(t.code,null,"boolean")),a.createElement(t.td,null,"false")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"filter")),a.createElement(t.td,null,"Function used for filtering options. If set, an input field is shown above the option list."),a.createElement(t.td,null,a.createElement(t.code,null,"(option, filter)=>boolean")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"groups")),a.createElement(t.td,null,"If options need to be grouped, options should be passed as groups. Cannot be used with ",a.createElement(t.code,null,"options"),"."),a.createElement(t.td,null,a.createElement(t.code,null,"[{label:'Group label', options:[<option objects>]}]")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"icon")),a.createElement(t.td,null,"Icon shown before in the button."),a.createElement(t.td,null,a.createElement(t.code,null,"React.ReactNode")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"id")),a.createElement(t.td,null,"The id of the element. Given id is used as a prefix for child elements. See getIds()."),a.createElement(t.td,null,a.createElement(t.code,null,"string")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"invalid")),a.createElement(t.td,null,"If set to true, the component shows an error."),a.createElement(t.td,null,a.createElement(t.code,null,"boolean")),a.createElement(t.td,null,"false")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"multiSelect")),a.createElement(t.td,null,"If set to true, the user can select multiple options."),a.createElement(t.td,null,a.createElement(t.code,null,"boolean")),a.createElement(t.td,null,"false")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"noTags")),a.createElement(t.td,null,"If set to true and multiselect is also true, the list of selected options is not shown as tags."),a.createElement(t.td,null,a.createElement(t.code,null,"boolean")),a.createElement(t.td,null,"false")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"onBlur")),a.createElement(t.td,null,"Called when the component loses focus."),a.createElement(t.td,null,a.createElement(t.code,null,"()=>void")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"onChange")),a.createElement(t.td,null,"Required. Called each time the user clicks an option."),a.createElement(t.td,null,a.createElement(t.code,null,"(selectedOptions, option, data)=>Partial<SelectProps> or void")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"onFocus")),a.createElement(t.td,null,"Called when the component gets focus."),a.createElement(t.td,null,a.createElement(t.code,null,"()=>void")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"onSearch")),a.createElement(t.td,null,"Search function. If set, an input field is shown above the option list."),a.createElement(t.td,null,a.createElement(t.code,null,"(searchValue, selectedOptions, data) => Promise<SearchResult>")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"open")),a.createElement(t.td,null,"If set to true, the list is open."),a.createElement(t.td,null,a.createElement(t.code,null,"boolean")),a.createElement(t.td,null,"false")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"options")),a.createElement(t.td,null,"List of options to select. Cannot be used with ",a.createElement(t.code,null,"groups"),"."),a.createElement(t.td,null,a.createElement(t.code,null,"string[]")," or ",a.createElement(t.code,null,"Partial<Option[]>")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"required")),a.createElement(t.td,null,"If set to true, ",a.createElement(t.code,null,"*")," is shown with the label. Does not check is an option selected."),a.createElement(t.td,null,a.createElement(t.code,null,"boolean")),a.createElement(t.td,null,"false")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"texts")),a.createElement(t.td,null,"Overrides for default texts or a function that returns a text for given key. Texts.language defines the current language."),a.createElement(t.td,null,a.createElement(t.code,null,"{[key]:string}")," or ",a.createElement(t.code,null,"(key,contents)=>string")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"theme")),a.createElement(t.td,null,"Custom theme styles."),a.createElement(t.td,null,a.createElement(t.code,null,"SelectCustomTheme")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"value")),a.createElement(t.td,null,"Selected value(s). If ",a.createElement(t.code,null,"options")," or ",a.createElement(t.code,null,"groups")," have selected options, this is discarded."),a.createElement(t.td,null,a.createElement(t.code,null,"string[]")," or ",a.createElement(t.code,null,"Partial<Option[]>")),a.createElement(t.td,null,"-")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"virtualize")),a.createElement(t.td,null,"Use with very long lists of options. Changes how options are rendered."),a.createElement(t.td,null,a.createElement(t.code,null,"boolean")),a.createElement(t.td,null,"false")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"visibleOptions")),a.createElement(t.td,null,"Number of visible options in the list before scrolling. It affects the height of the list. Use decimals, so a part of the next option is shown."),a.createElement(t.td,null,a.createElement(t.code,null,"number")),a.createElement(t.td,null,"5.5")),a.createElement(t.tr,null,a.createElement(t.td,null,"[Table 11:Select properties]"),a.createElement(t.td),a.createElement(t.td),a.createElement(t.td)))),"\n",a.createElement(u.A,{nodeName:"div",notAllowed:["tabIndex"]}),"\n"," ","\n",a.createElement(t.h3,{id:"the-data-property-in-the-callbacks",style:{position:"relative"}},"The data property in the callbacks",a.createElement(t.a,{href:"#the-data-property-in-the-callbacks","aria-label":"the data property in the callbacks permalink",className:"header-anchor after"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<span class="hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs" aria-hidden="true" style="vertical-align: middle"></span>'}}))),"\n",a.createElement(t.p,null,"Callbacks receive all current data of the Select component. This includes the following properties of the component:"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.code,null,"disabled")),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"filterFunction")),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"groups")," (is an array of ",a.createElement(t.code,null,"{ options: Option[] }"),")"),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"invalid")),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"onBlur")),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"onChange")),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"onFocus")),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"onSearch")),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"open")),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"multiSelect")),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"noTags")),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"required")),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"visibleOptions")),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"virtualize")),"\n"),"\n",a.createElement(t.h3,{id:"utility-functions",style:{position:"relative"}},"Utility functions",a.createElement(t.a,{href:"#utility-functions","aria-label":"utility functions permalink",className:"header-anchor after"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<span class="hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs" aria-hidden="true" style="vertical-align: middle"></span>'}}))),"\n",a.createElement(t.p,null,"The following functions are exported to make data handling and option mutation easier."),"\n",a.createElement(t.table,null,a.createElement(t.thead,null,a.createElement(t.tr,null,a.createElement(t.th,null,"Property"),a.createElement(t.th,null,"Description"),a.createElement(t.th,null,"Arguments"),a.createElement(t.th,null,"Return value"))),a.createElement(t.tbody,null,a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"clearAllSelectedOptions")),a.createElement(t.td,null,"Returns a copy of the groups with all options unselected. Disabled options are not unselected by default. Set the second argument to ",a.createElement(t.code,null,"false")," to unselect disabled options too."),a.createElement(t.td,null,a.createElement(t.code,null,"(groups:Group[],keepDisabledUnselected=true)")),a.createElement(t.td,null,a.createElement(t.code,null,"Group[]"))),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"defaultFilter")),a.createElement(t.td,null,"Filters options by checking if the ",a.createElement(t.code,null,"option.label")," starts with the given ",a.createElement(t.code,null,"filterValue"),"."),a.createElement(t.td,null,a.createElement(t.code,null,"(option:Option,filterValue:string)")),a.createElement(t.td,null,a.createElement(t.code,null,"boolean"))),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"getAllOptions")),a.createElement(t.td,null,"Returns an array of all options in all groups. If the argument ",a.createElement(t.code,null,"filterOutGroupLabels")," is ",a.createElement(t.code,null,"true")," (default), group label options are filtered out."),a.createElement(t.td,null,a.createElement(t.code,null,"(groups:Group[],filterOutGroupLabels?:boolean)")),a.createElement(t.td,null,a.createElement(t.code,null,"Option[]"))),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"getElementIds")),a.createElement(t.td,null,"Returns ids of all elements within the Select component. The id given to the Select component must be provided."),a.createElement(t.td,null,a.createElement(t.code,null,"(id:string")),a.createElement(t.td,null,a.createElement(t.code,null,"Record<string,string>"))),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"getNewSelections")),a.createElement(t.td,null,'Compares two lists of options and returns "new" ones from the second list that are not in the first list. Only ',a.createElement(t.code,null,"option.value")," is used in comparison."),a.createElement(t.td,null,a.createElement(t.code,null,"(optionListA:Option[],optionListB:Option[])")),a.createElement(t.td,null,a.createElement(t.code,null,"Option[]"))),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"getOptionGroupIndex")),a.createElement(t.td,null,"Returns the index of the group where the option is stored. Only ",a.createElement(t.code,null,"option.value")," is used in comparison."),a.createElement(t.td,null,a.createElement(t.code,null,"(groups:Group[], option:Optio)")),a.createElement(t.td,null,a.createElement(t.code,null,"number"))),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"getOptionIndex")),a.createElement(t.td,null,"Returns the index of an option in an array of options. Only ",a.createElement(t.code,null,"option.value")," is used in comparison."),a.createElement(t.td,null,a.createElement(t.code,null,"(options, option:Option)")),a.createElement(t.td,null,a.createElement(t.code,null,"number"))),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"getSelectedOptions")),a.createElement(t.td,null,"Returns an array of all selected options in all groups without group labels."),a.createElement(t.td,null,a.createElement(t.code,null,"(groups:Group[])")),a.createElement(t.td,null,a.createElement(t.code,null,"Option[]"))),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"iterateAndCopyGroup")),a.createElement(t.td,null,"Creates a copy of the given groups. Iterates all options with the given ",a.createElement(t.code,null,"iterator")," function and returns them as new options. The iterator function is called with ",a.createElement(t.code,null,"(currentOption,currentGroup,optionIndex, groupIndex)")," and it should return an option."),a.createElement(t.td,null,a.createElement(t.code,null,"(groups:Group[], iterator)")),a.createElement(t.td,null,a.createElement(t.code,null,"Group[]"))),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"pickSelectedValues")),a.createElement(t.td,null,"Returns the values of the all given options. Use with ",a.createElement(t.code,null,"getSelectedOptions")," to get all selected values."),a.createElement(t.td,null,a.createElement(t.code,null,"(options:Option[])")),a.createElement(t.td,null,a.createElement(t.code,null,"string[]"))),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"propsToGroups")),a.createElement(t.td,null,"Converts ",a.createElement(t.code,null,"options")," or ",a.createElement(t.code,null,"groups")," in any format to an array of group objects with an array of options also as objects."),a.createElement(t.td,null,a.createElement(t.code,null,"({groups?:Group[],options?:Option[]})")),a.createElement(t.td,null,a.createElement(t.code,null,"Groups[]"))),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"updateOptionInGroup")),a.createElement(t.td,null,"Returns a copy of the groups with the given option replaced with the given updated version of it. Only ",a.createElement(t.code,null,"option.value")," is used in comparison. If ",a.createElement(t.code,null,"isMultiSelect")," is ",a.createElement(t.code,null,"false")," and the given option is selected, all other options are unselected."),a.createElement(t.td,null,a.createElement(t.code,null,"(groups:Group[],updatedOption:Option,isMultiSelect:boolean)")),a.createElement(t.td,null,a.createElement(t.code,null,"Group[]"))),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"updateSelectedOptionsInGroups")),a.createElement(t.td,null,"Copies given groups and updates options in given array of selected options. Does not update group labels if all options of a group are selected or unselected."),a.createElement(t.td,null,a.createElement(t.code,null,"(groups:Group[],selectedOptions:Option[])")),a.createElement(t.td,null,a.createElement(t.code,null,"Groups[]"))),a.createElement(t.tr,null,a.createElement(t.td,null,"[Table 12:Utility functions]"),a.createElement(t.td),a.createElement(t.td),a.createElement(t.td)))),"\n",a.createElement(t.h3,{id:"packages",style:{position:"relative"}},"Packages",a.createElement(t.a,{href:"#packages","aria-label":"packages permalink",className:"header-anchor after"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<span class="hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs" aria-hidden="true" style="vertical-align: middle"></span>'}}))),"\n",a.createElement(t.table,null,a.createElement(t.thead,null,a.createElement(t.tr,null,a.createElement(t.th,null,"Package"),a.createElement(t.th,null,"Included"),a.createElement(t.th,null,"Storybook link"),a.createElement(t.th,null,"Source link"))),a.createElement(t.tbody,null,a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.strong,null,"HDS React")),a.createElement(t.td,null,a.createElement("div",{style:{display:"flex",gap:"var(--spacing-3-xs)"}},a.createElement(c)," Yes ")),a.createElement(t.td,null,a.createElement(i,{openInNewTab:!0,openInNewTabAriaLabel:"Opens in a new tab",href:"/storybook/react/?path=?path=/story/components-select--multiselect"},"View in Storybook")),a.createElement(t.td,null,a.createElement(s.A,{openInNewTab:!0,openInNewTabAriaLabel:"Opens in a new tab",href:"https://github.com/City-of-Helsinki/helsinki-design-system/blob/master/packages/react/src/components/select/Select.tsx"},"View source"))))))}var d=function(e){return void 0===e&&(e={}),a.createElement(i,e,a.createElement(m,e))};function E(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}function h(e){let{children:t}=e;return a.createElement(a.Fragment,null,t)}function p(e){return a.createElement(h,e,a.createElement(d,e))}},98472:function(e,t,l){var n=l(96540),a=l(98018);t.A=e=>{let{nodeName:t,splitProps:l,overlappingProps:r,notAllowed:c,nodeType:o="HTML"}=e;const s=()=>n.createElement("p",null,"This component also accepts all native",n.createElement(a.A,{href:`https://developer.mozilla.org/en-US/docs/Web/${o}/Element/${t}#attributes`},n.createElement("code",null,t)," element props"),c&&c.length?n.createElement(n.Fragment,null,", except"," ",c.map(((e,t)=>n.createElement(n.Fragment,null,n.createElement("code",null,e),n.createElement(n.Fragment,null,t<c.length-1?", ":""))))," ","attribute(s)"):"","."),u=()=>{if(0===l.length)return"";const e=l.join(", ");return n.createElement(n.Fragment,null," ","(",n.createElement("code",null,e),")"," ")},i=()=>l?n.createElement("p",null," ","Some native element props ",n.createElement(u,null)," are split into multiple children in the component."):null,m=()=>n.createElement("ul",null,r.map((e=>{const{used:t,overwritten:l}=(e=>{if("ariaLabel"===e)return{used:"ariaLabel",overwritten:"aria-label"};if("dataTestId"===e)return{used:"dataTestId",overwritten:"data-testid"};const[t,l]=e.split("/");return{used:t,overwritten:l}})(e);return t&&l?n.createElement("li",{key:e},n.createElement("code",null,t)," overrides the ",n.createElement("code",null,l)):null}))),d=()=>r&&r.length?n.createElement("p",null,"Following component properties override their native counterparts: ",n.createElement(m,null)):null;return n.createElement(n.Fragment,null,n.createElement(s,null),n.createElement(d,null),n.createElement(i,null))}},86974:function(e,t,l){var n=l(96540),a=l(18041),r=l(82041);t.A=e=>{let{children:t,...l}=e;return n.createElement(a.N,l,(0,r.l)(t))}},46465:function(e,t,l){var n=l(96540),a=l(45793),r=l(82041);t.A=e=>{let{children:t,...l}=e;return n.createElement(a.S,l,(0,r.l)(t))}},27758:function(e,t,l){var n=l(96540),a=l(91);t.A=()=>{const e={Draft:"The component is work in progress",Beta:"The component is being tested",Stable:"The component has been tested and defects have been fixed",Accessible:"The component has been reviewed for accessibility",Deprecated:"The component will be removed"};return n.createElement(a.T,{placement:"right-end",className:"status-label-tooltip",boxShadow:!0},n.createElement("ul",{className:"status-label-definitions"},Object.keys(e).map((t=>n.createElement("li",{key:t},n.createElement("span",{className:"status-name"},t),n.createElement("span",null,e[t]))))))}}}]);