{"version":3,"file":"component---src-docs-components-header-accessibility-mdx-2d66d30adf396e8abe46.js","mappings":"kQAOaA,EAAe,CAC1B,KAAQ,mCACR,MAAS,0BAELC,EAAc,CAClBD,gBAEIE,EAAYC,IAAA,IAAC,SACjBC,EAAQ,YACRC,GACDF,EAAA,OAAKG,EAAAA,EAAAA,IAACC,EAAAA,QAAU,CAACF,YAAaA,GAAcD,EAAsB,EACpD,SAASI,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAER,OAAOP,EAAAA,EAAAA,IAACJ,EAASY,OAAAC,OAAA,GAAKd,EAAiBU,EAAK,CAAED,WAAYA,EAAYM,QAAQ,eAG5EV,EAAAA,EAAAA,IAAA,MACE,GAAM,gBACN,MAAS,CACP,SAAY,aACb,iBACiBA,EAAAA,EAAAA,IAAA,KAAGW,WAAW,KAC9B,KAAQ,iBACR,aAAc,0BACd,UAAa,wBACZX,EAAAA,EAAAA,IAAA,QAAMW,WAAW,IAChB,UAAa,4DACb,cAAe,OACf,MAAS,CACP,cAAiB,eAGzBX,EAAAA,EAAAA,IAAA,MACE,GAAM,mBACN,MAAS,CACP,SAAY,aACb,oBACoBA,EAAAA,EAAAA,IAAA,KAAGW,WAAW,KACjC,KAAQ,oBACR,aAAc,6BACd,UAAa,wBACZX,EAAAA,EAAAA,IAAA,QAAMW,WAAW,IAChB,UAAa,4DACb,cAAe,OACf,MAAS,CACP,cAAiB,eAGzBX,EAAAA,EAAAA,IAAA,WACEA,EAAAA,EAAAA,IAAA,MAAIW,WAAW,MAAI,2GAA4GX,EAAAA,EAAAA,IAACY,EAAAA,EAAY,CAACC,KAAK,mCAAmCH,QAAQ,gBAAc,qBAAqC,8BAChPV,EAAAA,EAAAA,IAAA,MAAIW,WAAW,OAAKX,EAAAA,EAAAA,IAAA,UAAQW,WAAW,MAAI,8FAAwG,8SACnJX,EAAAA,EAAAA,IAAA,MAAIW,WAAW,MAAI,2CAA4CX,EAAAA,EAAAA,IAAA,cAAYW,WAAW,MAAI,YAA0B,cAAcX,EAAAA,EAAAA,IAAA,cAAYW,WAAW,MAAI,SAAuB,6DAA6DX,EAAAA,EAAAA,IAAA,cAAYW,WAAW,MAAI,iBAA+B,mLAAmLX,EAAAA,EAAAA,IAAA,cAAYW,WAAW,MAAI,QAAsB,2DAA2DX,EAAAA,EAAAA,IAAA,cAAYW,WAAW,MAAI,aAA2B,0KAChoBX,EAAAA,EAAAA,IAAA,MAAIW,WAAW,MAAI,+LACnBX,EAAAA,EAAAA,IAAA,MAAIW,WAAW,MAAI,mDAIzB,CAEAT,EAAWY,gBAAiB,C","sources":["webpack://site/./src/docs/components/header/accessibility.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport TabsLayout from './tabs.mdx';\nimport InternalLink from '../../../components/InternalLink';\nexport const _frontmatter = {\n  \"slug\": \"/components/header/accessibility\",\n  \"title\": \"Header - Accessibility\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = ({\n  children,\n  pageContext\n}) => <TabsLayout pageContext={pageContext}>{children}</TabsLayout>;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"accessibility\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Accessibility`}<a parentName=\"h2\" {...{\n        \"href\": \"#accessibility\",\n        \"aria-label\": \"accessibility permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h2>\n    <h3 {...{\n      \"id\": \"pay-attention-to\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Pay attention to`}<a parentName=\"h3\" {...{\n        \"href\": \"#pay-attention-to\",\n        \"aria-label\": \"pay attention to permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h3>\n    <ul>\n      <li parentName=\"ul\">{`HDS Navigation is designed to support many different brand colours. When customising colours, refer to `}<InternalLink href=\"/foundation/design-tokens/colour\" mdxType=\"InternalLink\">{`colour guidelines`}</InternalLink>{` to ensure accessibility.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`When designing a menu link hierarchy, always think about keyboard and screen reader users.`}</strong>{` First, make sure top-level menu labels are clear, and submenu items contextually fit under it. Next, make sure the menu option order is logical and reasonable. Remember that keyboard users need to manually navigate to each element and thus placing a commonly used menu option last is not optimal.`}</li>\n      <li parentName=\"ul\">{`Landmarks are provided by the wrapping `}<inlineCode parentName=\"li\">{`<header>`}</inlineCode>{` element, `}<inlineCode parentName=\"li\">{`<nav>`}</inlineCode>{` element in the Header.NavigationMenu component and with `}<inlineCode parentName=\"li\">{`role=\"search\"`}</inlineCode>{` attribute on the Header.NavigationSearch component. In case you want more landmarks, the Header.UniversalBar, Header.ActionBar and Header.NavigationSearch components support `}<inlineCode parentName=\"li\">{`role`}</inlineCode>{` prop which should be used together with a descriptive `}<inlineCode parentName=\"li\">{`ariaLabel`}</inlineCode>{` prop. Just remember that landmarks should be used sparingly in order to avoid \"noise\" for screen readers and making the overall page layout difficult to understand.`}</li>\n      <li parentName=\"ul\">{`Header.NavigationMenu's dropdowns open only by clicking them. They don't open from hovering with the mouse as it can be difficult to navigate for people with motor and seeing challenges.`}</li>\n      <li parentName=\"ul\">{`Only use the elements you need. Avoid clutter.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","_ref","children","pageContext","mdx","TabsLayout","MDXContent","_ref2","components","props","_objectWithoutProperties","_excluded","Object","assign","mdxType","parentName","InternalLink","href","isMDXComponent"],"sourceRoot":""}