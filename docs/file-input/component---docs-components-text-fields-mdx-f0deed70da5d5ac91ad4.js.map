{"version":3,"sources":["webpack:///../docs/components/text_fields.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","type","style","marginLeft","parentName","href","external","__position","__code","__scope","Playground","TextArea","TextInput","StatusLabel","ColorBox","LargeParagraph","Link","Text","id","label","placeholder","helperText","required","defaultValue","marginTop","disabled","errorText","invalid","readOnly","tooltipLabel","tooltipButtonLabel","tooltipText","isMDXComponent"],"mappings":"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","file":"component---docs-components-text-fields-mdx-f0deed70da5d5ac91ad4.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mikanevalainen/Documents/code/helsinki-design-system/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from \"docz\";\nimport { TextArea, TextInput, StatusLabel } from \"hds-react\";\nimport ColorBox from \"../../src/components/ColorBox\";\nimport LargeParagraph from \"../../src/components/LargeParagraph\";\nimport Link from \"../../src/components/Link\";\nimport Text from \"../../src/components/Text\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"text-fields\"\n    }}>{`Text fields`}</h1>\n    <StatusLabel type=\"info\" mdxType=\"StatusLabel\">Stable</StatusLabel>\n    <StatusLabel type=\"success\" style={{\n      marginLeft: 'var(--spacing-xs)'\n    }} mdxType=\"StatusLabel\">Accessible</StatusLabel>\n    <LargeParagraph mdxType=\"LargeParagraph\">\n  A text field is an input field that the user can interact with and input content and data. The user can also be provided with helper text if needed. Text inputs are used for shorter information while Text areas can be used for multiline answers.\n    </LargeParagraph>\n    <h2 {...{\n      \"id\": \"principles\"\n    }}>{`Principles`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`A label should always be provided with a text field.`}</strong></li>\n      <li parentName=\"ul\">{`Use a text input when a single line of text is expected. For multiline inputs, use a text area.`}</li>\n      <li parentName=\"ul\">{`Allow the text input to reflect the length of the content you expect the user to enter.`}</li>\n      <li parentName=\"ul\">{`If possible, add programmatic assistance. Detect and pre-fill inputs to reduce errors and save time. Use sentence-case for default values, detected values, and auto-completion text.`}</li>\n      <li parentName=\"ul\">{`If possible, do input validation in client-side real-time and provide the user with immediate feedback. See `}<a parentName=\"li\" {...{\n          \"href\": \"/patterns/form-validation\"\n        }}>{`HDS Form validation pattern page`}</a>{` for more information.`}</li>\n      <li parentName=\"ul\">{`If possible, be forgiving of different input formats and small mistakes. It can greatly increase user experience of your product if you can fix common mistakes for the user.`}</li>\n      <li parentName=\"ul\">{`To decrease a cognitive load of the user, it is recommended to mark all required fields. Remember to provide explanation of the required field indicator at the top of your form.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"accessibility\"\n    }}>{`Accessibility`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Placeholder text can be used to give hints and examples to the user what should be entered to the field. `}<strong parentName=\"li\">{`However, all assistive technologies do not threat placeholder texts as labels and therefore they may ignore them completely.`}</strong>{` Aim to provide the sufficient information to fill the input in the label.`}</li>\n      <li parentName=\"ul\">{`It is required to use `}<inlineCode parentName=\"li\">{`autocomplete`}</inlineCode>{` attribute if input control is listed in the common input purposes list. You can read the full list of common input purposes at `}<Link href=\"https://www.w3.org/TR/WCAG21/#input-purposes\" external mdxType=\"Link\">{`WCAG 2.1 documentation website`}</Link>{`. You can read more about the requirement from `}<Link href=\"https://www.w3.org/WAI/WCAG21/Understanding/identify-input-purpose\" external mdxType=\"Link\">{`WCAG 2.1 Identify Input Purpose guideline`}</Link>{`.`}</li>\n      <li parentName=\"ul\">{`In the case of an erroneous input, aim to provide clear instructions to the user on how to correct the mistake. Always provide a text description of the error.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"usage-and-variations\"\n    }}>{`Usage and variations`}</h2>\n    <h3 {...{\n      \"id\": \"text-input\"\n    }}>{`Text input`}</h3>\n    <p>{`A text input serves in most use cases when the user needs to enter information. Text input works well for short inputs that fit in one line and are not longer than one sentence.`}</p>\n    <Playground __position={2} __code={'<TextInput\\n  id=\\\"input\\\"\\n  label=\\\"Label\\\"\\n  placeholder=\\\"Placeholder\\\"\\n  helperText=\\\"Assistive text\\\"\\n  required\\n/>\\n<TextInput\\n  label=\\\"Label\\\"\\n  defaultValue=\\\"Text input value\\\"\\n  helperText=\\\"Assistive text\\\"\\n  style={{ marginTop: \\'var(--spacing-s)\\' }}\\n  disabled\\n/>\\n<TextInput\\n  id=\\\"input-invalid\\\"\\n  label=\\\"Label\\\"\\n  defaultValue=\\\"Text input value\\\"\\n  errorText=\\\"Error text\\\"\\n  helperText=\\\"Assistive text\\\"\\n  style={{ marginTop: \\'var(--spacing-s)\\' }}\\n  invalid\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      TextArea,\n      TextInput,\n      StatusLabel,\n      ColorBox,\n      LargeParagraph,\n      Link,\n      Text,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <TextInput id=\"input\" label=\"Label\" placeholder=\"Placeholder\" helperText=\"Assistive text\" required mdxType=\"TextInput\" />\n  <TextInput label=\"Label\" defaultValue=\"Text input value\" helperText=\"Assistive text\" style={{\n        marginTop: 'var(--spacing-s)'\n      }} disabled mdxType=\"TextInput\" />\n  <TextInput id=\"input-invalid\" label=\"Label\" defaultValue=\"Text input value\" errorText=\"Error text\" helperText=\"Assistive text\" style={{\n        marginTop: 'var(--spacing-s)'\n      }} invalid mdxType=\"TextInput\" />\n    </Playground>\n    <h4 {...{\n      \"id\": \"core-code-example\"\n    }}>{`Core code example:`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!-- Enabled  -->\n<div class=\"hds-text-input\">\n  <label for=\"input\" class=\"hds-text-input__label\">\n    Label\n    <span class=\"hds-text-input__required\">*</span>\n  </label>\n  <div class=\"hds-text-input__input-wrapper\">\n    <input id=\"input\" class=\"hds-text-input__input\" type=\"text\" placeholder=\"Placeholder\" required />\n  </div>\n  <span class=\"hds-text-input__helper-text\">Assistive text</span>\n</div>\n\n<!-- Disabled -->\n<div class=\"hds-text-input\">\n  <label for=\"input\" class=\"hds-text-input__label\">\n    Label\n  </label>\n  <div class=\"hds-text-input__input-wrapper\">\n    <input id=\"input\" class=\"hds-text-input__input\" type=\"text\" value=\"Text input value\" disabled />\n  </div>\n  <span class=\"hds-text-input__helper-text\">Assistive text</span>\n</div>\n\n<!-- Error -->\n<div class=\"hds-text-input hds-text-input--invalid\">\n  <label for=\"input\" class=\"hds-text-input__label\">\n    Label\n  </label>\n  <div class=\"hds-text-input__input-wrapper\">\n    <input id=\"input\" class=\"hds-text-input__input\" type=\"text\" value=\"Text input value\" />\n  </div>\n  <span class=\"hds-text-input__error-text\">Error text</span>\n  <span class=\"hds-text-input__helper-text\">Assistive text</span>\n</div>\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"react-code-example\"\n    }}>{`React code example:`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`/* Enabled */\n<TextInput\n  id=\"input\"\n  label=\"Label\"\n  placeholder=\"Placeholder\"\n  helperText=\"Assistive text\"\n  required\n/>\n\n/* Disabled */\n<TextInput\n  id=\"input\"\n  label=\"Label\"\n  defaultValue=\"Text input value\"\n  helperText=\"Assistive text\"\n  disabled\n/>\n\n/* Error */\n<TextInput\n  id=\"input\"\n  label=\"Label\"\n  defaultValue=\"Text input value\"\n  errorText=\"Error text\"\n  helperText=\"Assistive text\"\n  invalid\n/>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"text-area\"\n    }}>{`Text area`}</h3>\n    <p>{`A text area is meant for situations where inputted text is multiline or contains more than one sentence.`}</p>\n    <Playground __position={3} __code={'<TextArea\\n  id=\\\"textarea\\\"\\n  label=\\\"Label\\\"\\n  placeholder=\\\"Placeholder\\\"\\n  helperText=\\\"Assistive text\\\"\\n  required\\n/>\\n<TextArea\\n  label=\\\"Label\\\"\\n  defaultValue=\\\"Text area value\\\"\\n  helperText=\\\"Assistive text\\\"\\n  style={{ marginTop: \\'var(--spacing-s)\\' }}\\n  disabled\\n/>\\n<TextArea\\n  id=\\\"textarea-invalid\\\"\\n  label=\\\"Label\\\"\\n  defaultValue=\\\"Text area value\\\"\\n  errorText=\\\"Error text\\\"\\n  helperText=\\\"Assistive text\\\"\\n  style={{ marginTop: \\'var(--spacing-s)\\' }}\\n  invalid\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      TextArea,\n      TextInput,\n      StatusLabel,\n      ColorBox,\n      LargeParagraph,\n      Link,\n      Text,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <TextArea id=\"textarea\" label=\"Label\" placeholder=\"Placeholder\" helperText=\"Assistive text\" required mdxType=\"TextArea\" />\n  <TextArea label=\"Label\" defaultValue=\"Text area value\" helperText=\"Assistive text\" style={{\n        marginTop: 'var(--spacing-s)'\n      }} disabled mdxType=\"TextArea\" />\n  <TextArea id=\"textarea-invalid\" label=\"Label\" defaultValue=\"Text area value\" errorText=\"Error text\" helperText=\"Assistive text\" style={{\n        marginTop: 'var(--spacing-s)'\n      }} invalid mdxType=\"TextArea\" />\n    </Playground>\n    <h4 {...{\n      \"id\": \"core-code-example-1\"\n    }}>{`Core code example:`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!-- Enabled  -->\n<div class=\"hds-text-input\">\n  <label for=\"textarea\" class=\"hds-text-input__label\">\n    Label\n    <span class=\"hds-text-input__required\">*</span>\n  </label>\n  <div class=\"hds-text-input__input-wrapper\">\n    <textarea id=\"textarea\" class=\"hds-text-input__input\" placeholder=\"Placeholder\" required></textarea>\n  </div>\n  <span class=\"hds-text-input__helper-text\">Assistive text</span>\n</div>\n\n<!-- Disabled -->\n<div class=\"hds-text-input\">\n  <label for=\"textarea\" class=\"hds-text-input__label\">\n    Label\n  </label>\n  <div class=\"hds-text-input__input-wrapper\">\n    <textarea id=\"textarea\" class=\"hds-text-input__input\" disabled>\n      Text area value\n    </textarea>\n  </div>\n  <span class=\"hds-text-input__helper-text\">Assistive text</span>\n</div>\n\n<!-- Error -->\n<div class=\"hds-text-input hds-text-input--invalid\">\n  <label for=\"textarea\" class=\"hds-text-input__label\">\n    Label\n  </label>\n  <div class=\"hds-text-input__input-wrapper\">\n    <textarea id=\"textarea\" class=\"hds-text-input__input\">\n      Text area value\n    </textarea>\n  </div>\n  <span class=\"hds-text-input__error-text\">Error text</span>\n  <span class=\"hds-text-input__helper-text\">Assistive text</span>\n</div>\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"react-code-example-1\"\n    }}>{`React code example:`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`/* Enabled */\n<TextArea\n  id=\"textarea\"\n  label=\"Label\"\n  placeholder=\"Placeholder\"\n  helperText=\"Assistive text\"\n  required\n/>\n\n/* Disabled */\n<TextArea\n  id=\"textarea\"\n  label=\"Label\"\n  defaultValue=\"Text input value\"\n  helperText=\"Assistive text\"\n  disabled\n/>\n\n/* Error */\n<TextArea\n  id=\"textarea\"\n  label=\"Label\"\n  defaultValue=\"Text input value\"\n  errorText=\"Error text\"\n  helperText=\"Assistive text\"\n  invalid\n/>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"read-only\"\n    }}>{`Read-only`}</h3>\n    <p>{`Read-only text input is used to indicate an input among other inputs that cannot be edited. This is needed in situations where, for example, the information has been gathered from other source and filled automatically. Read-only fields should not be confused with disabled text fields. Disabled text fields are used when there is an action the user can make to activate the field. Read-only text fields will stay uneditable in the same view.`}</p>\n    <Playground __position={4} __code={'<TextInput\\n  label=\\\"Label\\\"\\n  defaultValue=\\\"Read-only value\\\"\\n  helperText=\\\"Assistive text\\\"\\n  readOnly\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      TextArea,\n      TextInput,\n      StatusLabel,\n      ColorBox,\n      LargeParagraph,\n      Link,\n      Text,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <TextInput label=\"Label\" defaultValue=\"Read-only value\" helperText=\"Assistive text\" readOnly mdxType=\"TextInput\" />\n    </Playground>\n    <h4 {...{\n      \"id\": \"core-code-example-2\"\n    }}>{`Core code example:`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<div class=\"hds-text-input\">\n  <label for=\"input\" class=\"hds-text-input__label\">\n    Label\n  </label>\n  <div class=\"hds-text-input__input-wrapper\">\n    <input id=\"input\" class=\"hds-text-input__input\" type=\"text\" value=\"Text input value\" readonly />\n  </div>\n  <span class=\"hds-text-input__helper-text\">Assistive text</span>\n</div>\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"react-code-example-2\"\n    }}>{`React code example:`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<TextInput\n  id=\"textarea\"\n  label=\"Label\"\n  defaultValue=\"Text input value\"\n  helperText=\"Assistive text\"\n  readOnly\n/>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"with-tooltip\"\n    }}>{`With tooltip`}</h3>\n    <p>{`Both text input and text area can be provided with additional tooltip. Tooltip information should be considered as extra information, for example, why this information is gathered or how is it used. The user should have sufficient information on how to fill the input field in label and assistive text. You can find more information about Tooltips how they are used from the `}<a parentName=\"p\" {...{\n        \"href\": \"/components/tooltip\"\n      }}>{`Tooltip documentation page`}</a>{`.`}</p>\n    <Playground __position={5} __code={'<TextInput\\n  id=\\\"input-tooltip\\\"\\n  label=\\\"Label\\\"\\n  placeholder=\\\"Placeholder\\\"\\n  tooltipLabel=\\\"Tooltip label\\\"\\n  tooltipButtonLabel=\\\"Tooltip button label\\\"\\n  tooltipText=\\'Tooltips contain \\\"nice to have\\\" information. Default Tooltip contents should not be longer than two to three sentences. For longer descriptions, provide a link to a separate page.\\'\\n/>\\n<TextArea\\n  id=\\\"textarea-tooltip\\\"\\n  label=\\\"Label\\\"\\n  placeholder=\\\"Placeholder\\\"\\n  tooltipLabel=\\\"Tooltip label\\\"\\n  tooltipButtonLabel=\\\"Tooltip button label\\\"\\n  tooltipText=\\'Tooltips contain \\\"nice to have\\\" information. Default Tooltip contents should not be longer than two to three sentences. For longer descriptions, provide a link to a separate page.\\'\\n  style={{ marginTop: \\'var(--spacing-s)\\' }}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      TextArea,\n      TextInput,\n      StatusLabel,\n      ColorBox,\n      LargeParagraph,\n      Link,\n      Text,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <TextInput id=\"input-tooltip\" label=\"Label\" placeholder=\"Placeholder\" tooltipLabel=\"Tooltip label\" tooltipButtonLabel=\"Tooltip button label\" tooltipText=\"Tooltips contain &quot;nice to have&quot; information. Default Tooltip contents should not be longer than two to three sentences. For longer descriptions, provide a link to a separate page.\" mdxType=\"TextInput\" />\n  <TextArea id=\"textarea-tooltip\" label=\"Label\" placeholder=\"Placeholder\" tooltipLabel=\"Tooltip label\" tooltipButtonLabel=\"Tooltip button label\" tooltipText=\"Tooltips contain &quot;nice to have&quot; information. Default Tooltip contents should not be longer than two to three sentences. For longer descriptions, provide a link to a separate page.\" style={{\n        marginTop: 'var(--spacing-s)'\n      }} mdxType=\"TextArea\" />\n    </Playground>\n    <h4 {...{\n      \"id\": \"react-code-example-3\"\n    }}>{`React code example:`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`/* Text input */\n<TextInput\n  id=\"input\"\n  label=\"Label\"\n  placeholder=\"Placeholder\"\n  tooltipLabel=\"Tooltip label\"\n  tooltipButtonLabel=\"Tooltip button label\"\n  tooltipText=\"Tooltips contain &quot;nice to have&quot; information. Default Tooltip contents should not be longer than two to three sentences. For longer descriptions, provide a link to a separate page.\"\n/>\n\n/* Text area */\n<TextArea\n  id=\"textarea\"\n  label=\"Label\"\n  placeholder=\"Placeholder\"\n  tooltipLabel=\"Tooltip label\"\n  tooltipButtonLabel=\"Tooltip button label\"\n  tooltipText=\"Tooltips contain &quot;nice to have&quot; information. Default Tooltip contents should not be longer than two to three sentences. For longer descriptions, provide a link to a separate page.\"\n/>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"demos--api\"\n    }}>{`Demos & API`}</h2>\n    <h3 {...{\n      \"id\": \"core\"\n    }}>{`Core`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/storybook/core/?path=/story/components-text-input--default\"\n      }}>{`Text inputs in hds-core`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/storybook/core/?path=/story/components-textarea--default\"\n      }}>{`Text areas in hds-core`}</a></p>\n    <h3 {...{\n      \"id\": \"react\"\n    }}>{`React`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/storybook/react/?path=/story/components-textinput--default\"\n      }}>{`Text inputs in hds-react`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/storybook/react/?path=/docs/components-textinput--default\"\n      }}>{`TextInput API`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/storybook/react/?path=/story/components-textarea--default\"\n      }}>{`Text areas in hds-react`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/storybook/react/?path=/docs/components-textarea--default\"\n      }}>{`TextArea API`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}