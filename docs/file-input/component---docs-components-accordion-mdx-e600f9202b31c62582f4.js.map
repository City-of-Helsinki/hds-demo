{"version":3,"sources":["webpack:///../docs/components/accordion.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","type","style","marginLeft","parentName","href","external","__position","__code","__scope","Playground","Accordion","StatusLabel","useAccordion","IconAngleUp","IconAngleDown","Button","Card","Select","Combobox","ColorBox","LargeParagraph","Link","Text","heading","maxWidth","card","border","theme","marginTop","initiallyOpen","isOpen","buttonProps","contentProps","icon","aria-hidden","iconLeft","aria-label","multiselect","label","placeholder","options","clearButtonAriaLabel","selectedItemRemoveButtonAriaLabel","isMDXComponent"],"mappings":"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","file":"component---docs-components-accordion-mdx-e600f9202b31c62582f4.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mikanevalainen/Documents/code/helsinki-design-system/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from \"docz\";\nimport { Accordion, StatusLabel, useAccordion, IconAngleUp, IconAngleDown, Button, Card, Select, Combobox } from \"hds-react\";\nimport ColorBox from \"../../src/components/ColorBox\";\nimport LargeParagraph from \"../../src/components/LargeParagraph\";\nimport Link from \"../../src/components/Link\";\nimport Text from \"../../src/components/Text\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"accordion\"\n    }}>{`Accordion`}</h1>\n    <StatusLabel type=\"info\" mdxType=\"StatusLabel\">Stable</StatusLabel>\n    <StatusLabel type=\"success\" style={{\n      marginLeft: 'var(--spacing-xs)'\n    }} mdxType=\"StatusLabel\">Accessible</StatusLabel>\n    <LargeParagraph mdxType=\"LargeParagraph\">\n    Accordions can be used to hide and reveal information. When used correctly, they are a good way to make higher amount of information easier to digest for the user.\n    </LargeParagraph>\n    <h2 {...{\n      \"id\": \"principles\"\n    }}>{`Principles`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Use accordions to allow the user to quickly glance the information and then choose to open sections that are interesting to them.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Accordions must be given a header that describes the accordion content.`}</strong>{` This header also acts as the label for the expand button. The header level can be chosen depending on the structure of the page.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Do not put essential or must-read information inside accordions.`}</strong>{` If the user is expected to open all of the accordions while using the service, then it is likely that the information should not be inside accordions.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Accordions work well when the user usually needs only part of the information. You may also consider placing parts of lower importance inside accordions while the most important parts are always visible.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Do not use accordions to create step-by-step forms. You must not expect that the user opens all accordions in a specific order.`}</li>\n      <li parentName=\"ul\">{`Accordions should initially be closed when the page is loaded.`}</li>\n      <li parentName=\"ul\">{`Expanding or closing the accordion should only affect to the related accordion area. You also should not auto-close or auto-open accordions.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"accessibility\"\n    }}>{`Accessibility`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Use HDS provided accordion elements when creating custom accordions. These elements pass accessibility testing.`}</li>\n      <li parentName=\"ul\">{`When creating custom accordions, make sure that the expanded accordion area directly follows the accordion button in the DOM tree.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`If you must place the accordion area somewhere else, use `}<inlineCode parentName=\"li\">{`aria-owns`}</inlineCode>{` attribute to indicate the relationship. However, be aware that this attribute does not necessarily work with all screen readers.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Make sure that the keyboard user can navigate out of the accordion area without closing the accordion. See `}<Link href=\"https://www.w3.org/TR/WCAG21/#no-keyboard-trap\" external mdxType=\"Link\">{`WCAG 2.1.2 No Keyboard Trap guideline`}</Link>{` for more information.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"usage--variations\"\n    }}>{`Usage & variations`}</h2>\n    <h3 {...{\n      \"id\": \"default-accordion\"\n    }}>{`Default accordion`}</h3>\n    <p>{`Basic HDS Accordions provide two different visuals to choose from. These implementations are easy to take into use if you do not need any special functionality or styling.`}</p>\n    <p>{`This style is visually less distracting and it works well when there are multiple accordions one below another or nearby. `}</p>\n    <Playground __position={2} __code={'<Accordion heading=\\\"How to publish data?\\\" style={{ maxWidth: \\'360px\\' }}>\\n  To publish your data, open your profile settings and click button \\'Publish\\'.\\n</Accordion>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Accordion,\n      StatusLabel,\n      useAccordion,\n      IconAngleUp,\n      IconAngleDown,\n      Button,\n      Card,\n      Select,\n      Combobox,\n      ColorBox,\n      LargeParagraph,\n      Link,\n      Text,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Accordion heading=\"How to publish data?\" style={{\n        maxWidth: '360px'\n      }} mdxType=\"Accordion\">\n        To publish your data, open your profile settings and click button 'Publish'.\n    </Accordion>\n    </Playground>\n    <h4 {...{\n      \"id\": \"react-code-example\"\n    }}>{`React code example:`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<Accordion\n    heading=\"How to publish data?\"\n    style={{ maxWidth: '360px' }}\n>\n    To publish your data, open your profile settings and click button 'Publish'.\n</Accordion>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"accordion-with-a-card\"\n    }}>{`Accordion with a card`}</h3>\n    <p>{`You can also use HDS Cards as a container for your Accordions. Cards offer the same customizability options as default HDS Cards. To learn more about Cards and their customization, refer to `}<a parentName=\"p\" {...{\n        \"href\": \"/components/card\"\n      }}>{`HDS Card documentation`}</a>{`.`}</p>\n    <p>{`If you have multiple accordions one below another or many accordions in the same view, consider using the visually more light `}<a parentName=\"p\" {...{\n        \"href\": \"#default-accordion\"\n      }}>{`default styling variant`}</a>{` instead of this one.`}</p>\n    <Playground __position={3} __code={'<Accordion\\n  card\\n  border\\n  heading=\\\"How to publish data?\\\"\\n  style={{ maxWidth: \\'360px\\' }}\\n>\\n  To publish your data, open your profile settings and click button \\'Publish\\'.\\n</Accordion>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Accordion,\n      StatusLabel,\n      useAccordion,\n      IconAngleUp,\n      IconAngleDown,\n      Button,\n      Card,\n      Select,\n      Combobox,\n      ColorBox,\n      LargeParagraph,\n      Link,\n      Text,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Accordion card border heading=\"How to publish data?\" style={{\n        maxWidth: '360px'\n      }} mdxType=\"Accordion\">\n        To publish your data, open your profile settings and click button 'Publish'.\n    </Accordion>\n    </Playground>\n    <h4 {...{\n      \"id\": \"react-code-example-1\"\n    }}>{`React code example:`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<Accordion \n    card \n    border\n    heading=\"How to publish data?\"\n    style={{ maxWidth: '360px'}}\n>\n    To publish your data, open your profile settings and click button 'Publish'.\n</Accordion>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"accordion-with-custom-styles\"\n    }}>{`Accordion with custom styles`}</h3>\n    <p>{`You can easily customize HDS Accordions by giving them a `}<inlineCode parentName=\"p\">{`theme`}</inlineCode>{` prop.`}</p>\n    <Playground __position={4} __code={'<Accordion\\n  card\\n  border\\n  heading=\\\"How to publish data?\\\"\\n  style={{ maxWidth: \\'480px\\' }}\\n  theme={{\\n    \\'--background-color\\': \\'var(--color-white)\\',\\n    \\'--border-color\\': \\'var(--color-brick)\\',\\n    \\'--padding-horizontal\\': \\'var(--spacing-m)\\',\\n    \\'--padding-vertical\\': \\'var(--spacing-m)\\',\\n    \\'--header-font-color\\': \\'var(--color-black-90)\\',\\n    \\'--header-font-size\\': \\'var(--fontsize-heading-l)\\',\\n    \\'--header-line-height\\': \\'var(--lineheight-l)\\',\\n    \\'--button-size\\': \\'28px\\',\\n    \\'--button-border-color-hover\\': \\'var(--color-coat-of-arms)\\',\\n    \\'--content-font-color\\': \\'var(--color-black-90)\\',\\n    \\'--content-font-size\\': \\'var(--fontsize-body-m)\\',\\n    \\'--content-line-height\\': \\'var(--lineheight-l)\\',\\n  }}\\n>\\n  To publish your data, open your profile settings and click button \\'Publish\\'.\\n</Accordion>\\n<Accordion\\n  card\\n  heading=\\\"How to publish data?\\\"\\n  style={{ maxWidth: \\'360px\\', marginTop: \\'var(--spacing-s)\\' }}\\n  theme={{\\n    \\'--background-color\\': \\'var(--color-bus)\\',\\n    \\'--padding-horizontal\\': \\'var(--spacing-m)\\',\\n    \\'--padding-vertical\\': \\'var(--spacing-m)\\',\\n    \\'--header-font-color\\': \\'var(--color-white)\\',\\n    \\'--header-font-size\\': \\'var(--fontsize-heading-s)\\',\\n    \\'--header-line-height\\': \\'var(--lineheight-s)\\',\\n    \\'--button-size\\': \\'28px\\',\\n    \\'--button-border-color-hover\\': \\'var(--color-white)\\',\\n    \\'--content-font-color\\': \\'var(--color-white)\\',\\n    \\'--content-font-size\\': \\'var(--fontsize-body-m)\\',\\n    \\'--content-line-height\\': \\'var(--lineheight-l)\\',\\n  }}\\n>\\n  To publish your data, open your profile settings and click button \\'Publish\\'.\\n</Accordion>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Accordion,\n      StatusLabel,\n      useAccordion,\n      IconAngleUp,\n      IconAngleDown,\n      Button,\n      Card,\n      Select,\n      Combobox,\n      ColorBox,\n      LargeParagraph,\n      Link,\n      Text,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Accordion card border heading=\"How to publish data?\" style={{\n        maxWidth: '480px'\n      }} theme={{\n        '--background-color': 'var(--color-white)',\n        '--border-color': 'var(--color-brick)',\n        '--padding-horizontal': 'var(--spacing-m)',\n        '--padding-vertical': 'var(--spacing-m)',\n        '--header-font-color': 'var(--color-black-90)',\n        '--header-font-size': 'var(--fontsize-heading-l)',\n        '--header-line-height': 'var(--lineheight-l)',\n        '--button-size': '28px',\n        '--button-border-color-hover': 'var(--color-coat-of-arms)',\n        '--content-font-color': 'var(--color-black-90)',\n        '--content-font-size': 'var(--fontsize-body-m)',\n        '--content-line-height': 'var(--lineheight-l)'\n      }} mdxType=\"Accordion\">\n        To publish your data, open your profile settings and click button 'Publish'.\n    </Accordion>\n      <Accordion card heading=\"How to publish data?\" style={{\n        maxWidth: '360px',\n        marginTop: 'var(--spacing-s)'\n      }} theme={{\n        '--background-color': 'var(--color-bus)',\n        '--padding-horizontal': 'var(--spacing-m)',\n        '--padding-vertical': 'var(--spacing-m)',\n        '--header-font-color': 'var(--color-white)',\n        '--header-font-size': 'var(--fontsize-heading-s)',\n        '--header-line-height': 'var(--lineheight-s)',\n        '--button-size': '28px',\n        '--button-border-color-hover': 'var(--color-white)',\n        '--content-font-color': 'var(--color-white)',\n        '--content-font-size': 'var(--fontsize-body-m)',\n        '--content-line-height': 'var(--lineheight-l)'\n      }} mdxType=\"Accordion\">\n    To publish your data, open your profile settings and click button 'Publish'.\n      </Accordion>\n    </Playground>\n    <h4 {...{\n      \"id\": \"react-code-example-2\"\n    }}>{`React code example:`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<Accordion \n    card \n    border\n    heading=\"How to publish data?\"\n    style={{ maxWidth: '360px'}}\n    theme={{\n        '--background-color': 'var(--color-white)',\n        '--border-color': 'var(--color-brick)',\n        '--padding-horizontal': 'var(--spacing-m)',\n        '--padding-vertical': 'var(--spacing-m)',\n        '--header-font-color': 'var(--color-black-90)',\n        '--header-font-size': 'var(--fontsize-heading-l)',\n        '--header-line-height': 'var(--lineheight-l)',\n        '--button-size': '28px',\n        '--button-border-color-hover': 'var(--color-coat-of-arms)',\n        '--content-font-color': 'var(--color-black-90)',\n        '--content-font-size': 'var(--fontsize-body-m)',\n        '--content-line-height': 'var(--lineheight-l)',\n    }}\n>\n    To publish your data, open your profile settings and click button 'Publish'.\n</Accordion>\n\n<Accordion \n    card \n    heading=\"How to publish data?\"\n    style={{ maxWidth: '360px', marginTop: 'var(--spacing-s)'}}\n    theme={{\n        '--background-color': 'var(--color-bus)',\n        '--padding-horizontal': 'var(--spacing-m)',\n        '--padding-vertical': 'var(--spacing-m)',\n        '--header-font-color': 'var(--color-white)',\n        '--header-font-size': 'var(--fontsize-heading-s)',\n        '--header-line-height': 'var(--lineheight-s)',\n        '--button-size': '28px',\n        '--button-border-color-hover': 'var(--color-white)',\n        '--content-font-color': 'var(--color-white)',\n        '--content-font-size': 'var(--fontsize-body-m)',\n        '--content-line-height': 'var(--lineheight-l)',\n    }}\n>\n    To publish your data, open your profile settings and click button 'Publish'.\n</Accordion>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"custom-accordion\"\n    }}>{`Custom accordion`}</h3>\n    <p>{`If the basic accordion components do not fit for your needs, you can build a custom accordion by using HDS provided accordion elements.`}</p>\n    <Playground __position={5} __code={'() => {\\n  const initiallyOpen = false\\n  const { isOpen, buttonProps, contentProps } = useAccordion({\\n    initiallyOpen,\\n  })\\n  const icon = isOpen ? (\\n    <IconAngleUp aria-hidden />\\n  ) : (\\n    <IconAngleDown aria-hidden />\\n  )\\n  return (\\n    <>\\n      <Button iconLeft={icon} {...buttonProps}>\\n        Advanced filters\\n      </Button>\\n      <Card\\n        border\\n        aria-label=\\\"Advanced filters\\\"\\n        style={{ marginTop: \\'var(--spacing-m)\\' }}\\n        {...contentProps}\\n      >\\n        <Select\\n          multiselect\\n          label=\\\"Filter by event category\\\"\\n          placeholder=\\\"No selected categories\\\"\\n          options={[\\n            { label: \\'Culture & arts\\' },\\n            { label: \\'Sports\\' },\\n            { label: \\'Museums\\' },\\n            { label: \\'Music\\' },\\n          ]}\\n          clearButtonAriaLabel=\\\"Clear all selections\\\"\\n          selectedItemRemoveButtonAriaLabel=\\\"Remove\\\"\\n          style={{ maxWidth: \\'360px\\' }}\\n        />\\n        <Select\\n          multiselect\\n          label=\\\"Filter by event location\\\"\\n          placeholder=\\\"No selected locations\\\"\\n          options={[\\n            { label: \\'Haaga\\' },\\n            { label: \\'Herttoniemi\\' },\\n            { label: \\'Kallio\\' },\\n            { label: \\'Kamppi\\' },\\n            { label: \\'Laajasalo\\' },\\n            { label: \\'Lauttasaari\\' },\\n            { label: \\'Mellunkylä\\' },\\n            { label: \\'Pasila\\' },\\n          ]}\\n          clearButtonAriaLabel=\\\"Clear all selections\\\"\\n          selectedItemRemoveButtonAriaLabel=\\\"Remove\\\"\\n          style={{ maxWidth: \\'360px\\', marginTop: \\'var(--spacing-s)\\' }}\\n        />\\n      </Card>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Accordion,\n      StatusLabel,\n      useAccordion,\n      IconAngleUp,\n      IconAngleDown,\n      Button,\n      Card,\n      Select,\n      Combobox,\n      ColorBox,\n      LargeParagraph,\n      Link,\n      Text,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const initiallyOpen = false;\n        const {\n          isOpen,\n          buttonProps,\n          contentProps\n        } = useAccordion({\n          initiallyOpen\n        });\n        const icon = isOpen ? <IconAngleUp aria-hidden mdxType=\"IconAngleUp\" /> : <IconAngleDown aria-hidden mdxType=\"IconAngleDown\" />;\n        return <>\n            <Button iconLeft={icon} {...buttonProps} mdxType=\"Button\">\n                Advanced filters\n            </Button>\n            <Card border aria-label=\"Advanced filters\" style={{\n            marginTop: 'var(--spacing-m)'\n          }} {...contentProps} mdxType=\"Card\">\n                <Select multiselect label=\"Filter by event category\" placeholder=\"No selected categories\" options={[{\n              label: 'Culture & arts'\n            }, {\n              label: 'Sports'\n            }, {\n              label: 'Museums'\n            }, {\n              label: 'Music'\n            }]} clearButtonAriaLabel=\"Clear all selections\" selectedItemRemoveButtonAriaLabel=\"Remove\" style={{\n              maxWidth: '360px'\n            }} mdxType=\"Select\" />\n                <Select multiselect label=\"Filter by event location\" placeholder=\"No selected locations\" options={[{\n              label: 'Haaga'\n            }, {\n              label: 'Herttoniemi'\n            }, {\n              label: 'Kallio'\n            }, {\n              label: 'Kamppi'\n            }, {\n              label: 'Laajasalo'\n            }, {\n              label: 'Lauttasaari'\n            }, {\n              label: 'Mellunkylä'\n            }, {\n              label: 'Pasila'\n            }]} clearButtonAriaLabel=\"Clear all selections\" selectedItemRemoveButtonAriaLabel=\"Remove\" style={{\n              maxWidth: '360px',\n              marginTop: 'var(--spacing-s)'\n            }} mdxType=\"Select\" />\n            </Card>\n        </>;\n      }}\n    </Playground>\n    <h4 {...{\n      \"id\": \"react-code-example-3\"\n    }}>{`React code example:`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { Accordion, useAccordion, Button, Card } from 'hds-react';\n\nconst CustomAccordion = () => {\n    // Handle accordion state with useAccordion hook\n    const { isOpen, buttonProps, contentProps } = useAccordion({ initiallyOpen: false });\n\n    // Change icon based on accordion open state\n    const icon = isOpen ? <IconAngleUp aria-hidden /> : <IconAngleDown aria-hidden />;\n\n    return (\n        <>\n            <Button iconLeft={icon} {...buttonProps}>Advanced filters</Button>\n            <Card border aria-label=\"Advanced filters\" {...contentProps}>\n                Accordion content\n            </Card>\n        </>\n    );\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"demos--api\"\n    }}>{`Demos & API`}</h2>\n    <h3 {...{\n      \"id\": \"core\"\n    }}>{`Core`}</h3>\n    <p><em parentName=\"p\">{`Not included in hds-core!`}</em></p>\n    <h3 {...{\n      \"id\": \"react\"\n    }}>{`React`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/storybook/react/?path=/story/components-accordion--default\"\n      }}>{`Accordion in hds-react`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/storybook/react/?path=/docs/components-accordion--default\"\n      }}>{`Accordion API`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}