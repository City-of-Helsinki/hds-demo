{"version":3,"file":"component---src-docs-elements-design-tokens-breakpoints-index-mdx-33cb4069ccf247a5b5c4.js","mappings":"4TAYaA,EAAe,GACtBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAM5E,kCACA,QAAC,EAAAC,EAAD,CAAaC,KAAK,OAAOF,QAAQ,eAAjC,WACA,QAAC,IAAD,CAAeA,QAAQ,iBAAvB,2GAGA,QAAC,IAAD,CAAMA,QAAQ,SAChB,QAAC,YAAD,CAAcG,UAAU,iBACtB,QAAC,IAAAC,IAAD,eACA,QAAC,IAAAA,IAAD,iBAEF,QAAC,aAAD,MACE,QAAC,UAAD,CAAOJ,QAAQ,YAEjB,QAAC,aAAD,MACE,QAAC,UAAD,CAAQA,QAAQ,cAOpBH,EAAWQ,gBAAiB,G,4LCtCfZ,EAAe,CAC1B,KAAQ,6CACR,MAAS,+BAELC,EAAc,CAClBD,aAAAA,GAGIE,EAAY,SAAC,GAAD,IAChBW,EADgB,EAChBA,SADgB,OAEZ,wBAAGA,IAEM,SAAST,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,6BACA,QAAC,UAAD,CAAuBA,QAAQ,2BAC/B,QAAC,UAAD,CAAsBO,MAAO,CAC3BC,UAAW,oBACVR,QAAQ,0BAMfH,EAAWQ,gBAAiB,G,iLC9BfZ,EAAe,CAC1B,KAAQ,4CACR,MAAS,6BAELC,EAAc,CAClBD,aAAAA,GAGIE,EAAY,SAAC,GAAD,IAChBW,EADgB,EAChBA,SADgB,OAEZ,wBAAGA,IAEM,SAAST,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAE5E,4BACA,qKAAuJ,QAAC,EAAAS,EAAD,CAAMC,KAAK,IAAIC,KAAK,IAAIX,QAAQ,QAAhC,uBAAvJ,gEACA,iCACA,mBACE,cAAIY,WAAW,MAAf,sLAA0M,QAAC,EAAAH,EAAD,CAAMC,KAAK,IAAIC,KAAK,2BAA2BX,QAAQ,QAAvD,mCAC1M,cAAIY,WAAW,MAAf,oJACA,cAAIA,WAAW,MAAf,gGACA,cAAIA,WAAW,MAAf,+EAAmG,QAAC,EAAAH,EAAD,CAAMC,KAAK,IAAIC,KAAK,IAAIX,QAAQ,QAAhC,+BAAnG,oGAEF,oCACA,mBACE,cAAIY,WAAW,MAAf,mLAAuM,QAAC,EAAAH,EAAD,CAAMC,KAAK,IAAIC,KAAK,0DAA0DE,UAAQ,EAACb,QAAQ,QAA/F,wCAAvM,OAEF,8CACA,sEACA,mBACE,cAAIY,WAAW,OAAK,kBAAQA,WAAW,MAAnB,qBAApB,kFACA,cAAIA,WAAW,OAAK,kBAAQA,WAAW,MAAnB,0BAApB,yDAEF,kBAAG,kBAAQA,WAAW,KAAnB,iDAAH,yKAA6P,sBAAYA,WAAW,KAAvB,kBAA7P,+BAAsV,sBAAYA,WAAW,KAAvB,uBAAtV,YACA,kBAAG,kBAAQA,WAAW,KAAnB,uGAAH,8EAAwN,QAAC,EAAAH,EAAD,CAAMC,KAAK,IAAIC,KAAK,gFAAgFE,UAAQ,EAACb,QAAQ,QAArH,mCAAxN,SAAuY,QAAC,EAAAS,EAAD,CAAMC,KAAK,IAAIC,KAAK,+EAA+EE,UAAQ,EAACb,QAAQ,QAApH,kCAAvY,MAMJH,EAAWQ,gBAAiB","sources":["webpack://hds-site/./src/docs/elements/design-tokens/breakpoints/index.mdx","webpack://hds-site/./src/docs/elements/design-tokens/breakpoints/tokens.mdx","webpack://hds-site/./src/docs/elements/design-tokens/breakpoints/usage.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mikanevalainen/Documents/code/helsinki-design-system/new-site/src/components/layout.js\";\nimport { StatusLabel, Tabs } from 'hds-react';\nimport LeadParagraph from '../../../../components/LeadParagraph';\nimport Usage from './usage.mdx';\nimport Tokens from './tokens.mdx';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n\n    <h1>{`Breakpoints`}</h1>\n    <StatusLabel type=\"info\" mdxType=\"StatusLabel\">Stable</StatusLabel>\n    <LeadParagraph mdxType=\"LeadParagraph\">\n  Breakpoint tokens are used to keep services and products using HDS consistent across all screen sizes.\n    </LeadParagraph>\n    <Tabs mdxType=\"Tabs\">\n  <Tabs.TabList className=\"pageTabsList\">\n    <Tabs.Tab>Usage</Tabs.Tab>\n    <Tabs.Tab>Tokens</Tabs.Tab>\n  </Tabs.TabList>\n  <Tabs.TabPanel>\n    <Usage mdxType=\"Usage\" />\n  </Tabs.TabPanel>\n  <Tabs.TabPanel>\n    <Tokens mdxType=\"Tokens\" />\n  </Tabs.TabPanel>\n    </Tabs>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport Playground from '../../../../components/Playground';\nimport BreakpointTokensTable from './components/breakpoint-tokens-table.tsx';\nimport ContainerTokensTable from './components/container-tokens-table.tsx';\nexport const _frontmatter = {\n  \"slug\": \"/elements/design-tokens/breakpoints/tokens\",\n  \"title\": \"Breakpoints tokens - Tokens\"\n};\nconst layoutProps = {\n  _frontmatter\n};\n\nconst MDXLayout = ({\n  children\n}) => <>{children}</>;\n\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`Tokens`}</h2>\n    <BreakpointTokensTable mdxType=\"BreakpointTokensTable\" />\n    <ContainerTokensTable style={{\n      marginTop: 'var(--spacing-l)'\n    }} mdxType=\"ContainerTokensTable\" />\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { Link } from 'hds-react';\nimport Playground from '../../../../components/Playground';\nexport const _frontmatter = {\n  \"slug\": \"/elements/design-tokens/breakpoints/usage\",\n  \"title\": \"Breakpoint tokens - Usage\"\n};\nconst layoutProps = {\n  _frontmatter\n};\n\nconst MDXLayout = ({\n  children\n}) => <>{children}</>;\n\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2>{`Usage`}</h2>\n    <p>{`HDS includes tokenized values for both breakpoints and maximum container width in each breakpoint. Breakpoint tokens can be also used alongside `}<Link size=\"M\" href=\"#\" mdxType=\"Link\">{`HDS grid guidelines`}</Link>{` in order to create consistent designs and implementations.`}</p>\n    <h3>{`Principles`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Always use token of the same level for both the breakpoint and container width. This ensures consistency across all services using HDS breakpoint tokens. Read more about this in `}<Link size=\"M\" href=\"#using-breakpoint-tokens\" mdxType=\"Link\">{`the breakpoint usage section.`}</Link></li>\n      <li parentName=\"ul\">{`Aim to provide all breakpoints listed in HDS tokens in your service. This way you ensure your service is usable with every common screen width.`}</li>\n      <li parentName=\"ul\">{`For best results, test your designs and implementations at the edge of each HDS breakpoint.`}</li>\n      <li parentName=\"ul\">{`It is recommended to use scaling methods HDS suggests for each breakpoint (`}<Link size=\"M\" href=\"#\" mdxType=\"Link\">{`see Breakpoints token table`}</Link>{`). However, it is allowed to use different scaling methods if it works better for the service.`}</li>\n    </ul>\n    <h3>{`Accessibility`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`When testing your designs and implementation at different breakpoints, pay extra attention how your service behaves if browser zoom functionality is used. Read more about the `}<Link size=\"M\" href=\"https://www.w3.org/WAI/WCAG21/Understanding/reflow.html\" external mdxType=\"Link\">{`WCAG requirements considering reflow`}</Link>{`.`}</li>\n    </ul>\n    <h3>{`Using breakpoint tokens`}</h3>\n    <p>{`The breakpoint tokens are divided into two sets;`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Breakpoint tokens`}</strong>{` define exact widths (in pixels) where the next breakpoint comes into effect.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Container width tokens`}</strong>{` define maximum container width in each breakpoint.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Note how these two sets of tokens are linked.`}</strong>{` You are supposed pick and use tokens from same level depending on the screen width. For example, when screen width is above 767 pixels and below 992 pixels you use `}<inlineCode parentName=\"p\">{`--breakpoint-m`}</inlineCode>{` token in combination with `}<inlineCode parentName=\"p\">{`--container-width-m`}</inlineCode>{` token.`}</p>\n    <p><strong parentName=\"p\">{`HDS offers a Container component which follows breakpoint and container width tokens automatically.`}</strong>{` It is recommended to use it if possible. For more info and examples, see `}<Link size=\"M\" href=\"https://hds.hel.fi/storybook/react/?path=/story/components-container--example\" external mdxType=\"Link\">{`Container - React documentation`}</Link>{` and `}<Link size=\"M\" href=\"https://hds.hel.fi/storybook/core/?path=/story/components-container--default\" external mdxType=\"Link\">{`Container - Core documentation`}</Link>{`.`}</p>\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","S","type","className","Tab","isMDXComponent","children","style","marginTop","L","size","href","parentName","external"],"sourceRoot":""}