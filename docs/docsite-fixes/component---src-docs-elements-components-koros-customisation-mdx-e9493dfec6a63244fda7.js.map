{"version":3,"file":"component---src-docs-elements-components-koros-customisation-mdx-e9493dfec6a63244fda7.js","mappings":"8LAasBA,E,6DALTC,EAAe,CAC1B,KAAQ,2CACR,MAAS,yBAQLC,GALgBF,EAKW,aALH,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,cAASG,KAIZG,EAAc,CAClBL,aAAAA,GAGIM,EAAY,SAAC,GAAD,IAChBC,EADgB,EAChBA,SADgB,OAEZ,wBAAGA,IAEM,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,QAACI,EAAD,iBAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAE5E,oCACA,QAAC,EAAAC,EAAD,CAAcC,KAAK,QAAQC,MAAM,yCAAyCC,UAAU,mBAAmBJ,QAAQ,gBAA/G,+GACyG,6BADzG,mCAC0J,6BAD1J,sDAGA,4CACA,QAACT,EAAD,CAAYS,QAAQ,eAClB,oBAAK,gBAAMK,WAAW,MAClB,UAAa,gBADZ,gEAIL,oBAAK,gBAAMA,WAAW,MAClB,UAAa,iBADZ,mlBA2BXP,EAAWQ,gBAAiB","sources":["webpack://hds-site/./src/docs/elements/components/koros/customisation.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { Notification } from 'hds-react';\nexport const _frontmatter = {\n  \"slug\": \"/elements/components/koros/customisation\",\n  \"title\": \"Koros - Customisation\"\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Playground = makeShortcode(\"Playground\");\nconst layoutProps = {\n  _frontmatter\n};\n\nconst MDXLayout = ({\n  children\n}) => <>{children}</>;\n\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2>{`Customisation`}</h2>\n    <Notification type=\"alert\" label=\"Koros customisation works differently!\" className=\"siteNotification\" mdxType=\"Notification\">\n  Koros is an older HDS component and therefore its customisation works slightly differently. Instead of the <code>theme</code> property, you need to use the <code>style</code> property. This will be fixed in a future update.\n    </Notification>\n    <h3>{`Customisation example`}</h3>\n    <Playground mdxType=\"Playground\">\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\"\n        }}>{`<Koros style={{ fill: 'var(--color-coat-of-arms)' }} />;\n`}</code></pre>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-html\"\n        }}>{`<style type=\"text/css\">\n  .hds-custom-koros {\n    fill: var(--color-coat-of-arms);\n  }\n</style>\n<div class=\"hds-koros hds-custom-koros\">\n  <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" width=\"100%\" height=\"85\">\n    <defs>\n      <pattern id=\"korosBasicCustom\" x=\"0\" y=\"0\" width=\"106\" height=\"85\" patternUnits=\"userSpaceOnUse\">\n        <path\n          transform=\"scale(5.3)\"\n          d=\"M0,800h20V0c-4.9,0-5,2.6-9.9,2.6S5,0,0,0V800z\"\n        />\n      </pattern>\n    </defs>\n    <rect fill=\"url(#korosBasicCustom)\" width=\"100%\" height=\"85\" />\n  </svg>\n</div>\n`}</code></pre>\n    </Playground>\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","Playground","props","console","warn","layoutProps","MDXLayout","children","MDXContent","components","mdxType","N","type","label","className","parentName","isMDXComponent"],"sourceRoot":""}