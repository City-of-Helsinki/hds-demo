{"version":3,"file":"component---src-docs-elements-components-dropdown-accessibility-mdx-40f180bc1a8b09018466.js","mappings":"gPAOaA,EAAe,CAC1B,KAAQ,8CACR,MAAS,4BAELC,EAAc,CAClBD,aAAAA,GAGIE,EAAY,SAAC,GAAD,IAChBC,EADgB,EAChBA,SADgB,OAEZ,wBAAGA,IAEM,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAC5E,oCACA,uCACA,mBACE,cAAIC,WAAW,MAAf,+NACE,cAAIA,WAAW,OACb,cAAIA,WAAW,MAAf,8FAAkH,sBAAYA,WAAW,MAAvB,QAAlH,gBAGJ,cAAIA,WAAW,MAAf,oGACA,cAAIA,WAAW,MAAf,4KAAgM,sBAAYA,WAAW,MAAvB,eAAhM,+BAONJ,EAAWK,gBAAiB","sources":["webpack://hds-site/./src/docs/elements/components/dropdown/accessibility.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"slug\": \"/elements/components/dropdown/accessibility\",\n  \"title\": \"Dropdown - Accessibility\"\n};\nconst layoutProps = {\n  _frontmatter\n};\n\nconst MDXLayout = ({\n  children\n}) => <>{children}</>;\n\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`Accessibility`}</h2>\n    <h3>{`Pay attention to`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`When the dialog is closed, the focus should return to the element that triggered the original dialog context. This allows keyboard and screen reader users to continue the context where they originally opened the dialog.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`If the dialog was opened on a page load, the focus should be returned to the start of the `}<inlineCode parentName=\"li\">{`body`}</inlineCode>{` element.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`When the dialog is active, everything outside of the dialog should be inaccessible to the user.`}</li>\n      <li parentName=\"ul\">{`Pay attention to the roles of buttons of your dialog. If you use the button as a link instead of an action (i.e. the button press opens a new page), you must specify a `}<inlineCode parentName=\"li\">{`role=\"link\"`}</inlineCode>{` attribute to the button.`}</li>\n    </ul>\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","children","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}