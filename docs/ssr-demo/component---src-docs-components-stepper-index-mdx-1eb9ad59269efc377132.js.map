{"version":3,"file":"component---src-docs-components-stepper-index-mdx-1eb9ad59269efc377132.js","mappings":"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","sources":["webpack://site/./src/docs/components/stepper/index.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { useReducer } from 'react';\nimport { Stepper, StepState, Button, IconArrowLeft, IconArrowRight, Link } from 'hds-react';\nimport PlaygroundPreview from '../../../components/Playground';\nimport TabsLayout from './tabs.mdx';\nexport const StepperExample = () => {\n  const commonReducer = stepsTotal => (state, action) => {\n    switch (action.type) {\n      case 'completeStep':\n        {\n          const activeStepIndex = action.payload === stepsTotal - 1 ? stepsTotal - 1 : action.payload + 1;\n          return {\n            activeStepIndex,\n            steps: state.steps.map((step, index) => {\n              if (index === action.payload && index !== stepsTotal - 1) {\n                // current one but not last one\n                return {\n                  state: StepState.completed,\n                  label: step.label\n                };\n              }\n\n              if (index === action.payload + 1) {\n                // next one\n                return {\n                  state: StepState.available,\n                  label: step.label\n                };\n              }\n\n              return step;\n            })\n          };\n        }\n\n      case 'setActive':\n        {\n          return {\n            activeStepIndex: action.payload,\n            steps: state.steps.map((step, index) => {\n              if (index === action.payload) {\n                return {\n                  state: StepState.available,\n                  label: step.label\n                };\n              }\n\n              return step;\n            })\n          };\n        }\n\n      default:\n        throw new Error();\n    }\n  };\n\n  const reducer = commonReducer(5);\n  const initialState = {\n    activeStepIndex: 0,\n    steps: [{\n      label: 'Step 1',\n      state: StepState.available\n    }, {\n      label: 'Step 2',\n      state: StepState.disabled\n    }, {\n      label: 'Step 3',\n      state: StepState.disabled\n    }, {\n      label: 'Step 4 - longer text',\n      state: StepState.disabled\n    }, {\n      label: 'Step 5',\n      state: StepState.disabled\n    }]\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const lastStep = state.activeStepIndex === state.steps.length - 1;\n  return <div>\n      <Stepper steps={state.steps} language=\"en\" selectedStep={state.activeStepIndex} onStepClick={(event, stepIndex) => dispatch({\n      type: 'setActive',\n      payload: stepIndex\n    })} mdxType=\"Stepper\" />\n      <div style={{\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'flex-end',\n      gap: '24px'\n    }}>\n        <Button disabled={state.activeStepIndex === 0} variant=\"secondary\" onClick={() => dispatch({\n        type: 'setActive',\n        payload: state.activeStepIndex - 1\n      })} style={{\n        height: 'fit-content',\n        width: 'fit-content'\n      }} iconLeft={<IconArrowLeft mdxType=\"IconArrowLeft\" />} mdxType=\"Button\">\n          Previous\n        </Button>\n        <Button variant={lastStep ? 'primary' : 'secondary'} onClick={() => dispatch({\n        type: 'completeStep',\n        payload: state.activeStepIndex\n      })} style={{\n        height: 'fit-content',\n        width: 'fit-content'\n      }} iconRight={lastStep ? undefined : <IconArrowRight mdxType=\"IconArrowRight\" />} mdxType=\"Button\">\n          {lastStep ? 'Send' : 'Next'}\n        </Button>\n      </div>\n    </div>;\n};\nexport const SmallStepperExample = () => {\n  const commonReducer = stepsTotal => (state, action) => {\n    switch (action.type) {\n      case 'completeStep':\n        {\n          const activeStepIndex = action.payload === stepsTotal - 1 ? stepsTotal - 1 : action.payload + 1;\n          return {\n            activeStepIndex,\n            steps: state.steps.map((step, index) => {\n              if (index === action.payload && index !== stepsTotal - 1) {\n                // current one but not last one\n                return {\n                  state: StepState.completed,\n                  label: step.label\n                };\n              }\n\n              if (index === action.payload + 1) {\n                // next one\n                return {\n                  state: StepState.available,\n                  label: step.label\n                };\n              }\n\n              return step;\n            })\n          };\n        }\n\n      case 'setActive':\n        {\n          return {\n            activeStepIndex: action.payload,\n            steps: state.steps.map((step, index) => {\n              if (index === action.payload) {\n                return {\n                  state: StepState.available,\n                  label: step.label\n                };\n              }\n\n              return step;\n            })\n          };\n        }\n\n      default:\n        throw new Error();\n    }\n  };\n\n  const reducer = commonReducer(5);\n  const initialState = {\n    activeStepIndex: 0,\n    steps: [{\n      label: 'Step 1',\n      state: StepState.available\n    }, {\n      label: 'Step 2',\n      state: StepState.disabled\n    }, {\n      label: 'Step 3',\n      state: StepState.disabled\n    }, {\n      label: 'Step 4 - longer text',\n      state: StepState.disabled\n    }, {\n      label: 'Step 5',\n      state: StepState.disabled\n    }]\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const lastStep = state.activeStepIndex === state.steps.length - 1;\n  return <div style={{\n    maxWidth: '480px'\n  }}>\n      <Stepper steps={state.steps} language=\"en\" small selectedStep={state.activeStepIndex} onStepClick={(event, stepIndex) => dispatch({\n      type: 'setActive',\n      payload: stepIndex\n    })} mdxType=\"Stepper\" />\n      <div style={{\n      height: '80px',\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'flex-end',\n      gap: '24px'\n    }}>\n        <Button disabled={state.activeStepIndex === 0} variant=\"secondary\" onClick={() => dispatch({\n        type: 'setActive',\n        payload: state.activeStepIndex - 1\n      })} style={{\n        height: 'fit-content',\n        width: 'fit-content'\n      }} iconLeft={<IconArrowLeft mdxType=\"IconArrowLeft\" />} mdxType=\"Button\">\n          Previous\n        </Button>\n        <Button variant={lastStep ? 'primary' : 'secondary'} onClick={() => dispatch({\n        type: 'completeStep',\n        payload: state.activeStepIndex\n      })} style={{\n        height: 'fit-content',\n        width: 'fit-content'\n      }} iconRight={lastStep ? undefined : <IconArrowRight mdxType=\"IconArrowRight\" />} mdxType=\"Button\">\n          {lastStep ? 'Send' : 'Next'}\n        </Button>\n      </div>\n    </div>;\n};\nexport const HeadingStepperExample = () => {\n  const commonReducer = stepsTotal => (state, action) => {\n    switch (action.type) {\n      case 'completeStep':\n        {\n          const activeStepIndex = action.payload === stepsTotal - 1 ? stepsTotal - 1 : action.payload + 1;\n          return {\n            activeStepIndex,\n            steps: state.steps.map((step, index) => {\n              if (index === action.payload && index !== stepsTotal - 1) {\n                // current one but not last one\n                return {\n                  state: StepState.completed,\n                  label: step.label\n                };\n              }\n\n              if (index === action.payload + 1) {\n                // next one\n                return {\n                  state: StepState.available,\n                  label: step.label\n                };\n              }\n\n              return step;\n            })\n          };\n        }\n\n      case 'setActive':\n        {\n          return {\n            activeStepIndex: action.payload,\n            steps: state.steps.map((step, index) => {\n              if (index === action.payload) {\n                return {\n                  state: StepState.available,\n                  label: step.label\n                };\n              }\n\n              return step;\n            })\n          };\n        }\n\n      default:\n        throw new Error();\n    }\n  };\n\n  const reducer = commonReducer(5);\n  const initialState = {\n    activeStepIndex: 0,\n    steps: [{\n      label: 'Step 1',\n      state: StepState.available\n    }, {\n      label: 'Step 2',\n      state: StepState.disabled\n    }, {\n      label: 'Step 3',\n      state: StepState.disabled\n    }, {\n      label: 'Step 4 - longer text',\n      state: StepState.disabled\n    }, {\n      label: 'Step 5',\n      state: StepState.disabled\n    }]\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const lastStep = state.activeStepIndex === state.steps.length - 1;\n  return <div>\n      <Stepper steps={state.steps} language=\"en\" stepHeading selectedStep={state.activeStepIndex} onStepClick={(event, stepIndex) => dispatch({\n      type: 'setActive',\n      payload: stepIndex\n    })} mdxType=\"Stepper\" />\n      <div style={{\n      height: '80px',\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'flex-end',\n      gap: '24px'\n    }}>\n        <Button disabled={state.activeStepIndex === 0} variant=\"secondary\" onClick={() => dispatch({\n        type: 'setActive',\n        payload: state.activeStepIndex - 1\n      })} style={{\n        height: 'fit-content',\n        width: 'fit-content'\n      }} iconLeft={<IconArrowLeft mdxType=\"IconArrowLeft\" />} mdxType=\"Button\">\n          Previous\n        </Button>\n        <Button variant={lastStep ? 'primary' : 'secondary'} onClick={() => dispatch({\n        type: 'completeStep',\n        payload: state.activeStepIndex\n      })} style={{\n        height: 'fit-content',\n        width: 'fit-content'\n      }} iconRight={lastStep ? undefined : <IconArrowRight mdxType=\"IconArrowRight\" />} mdxType=\"Button\">\n          {lastStep ? 'Send' : 'Next'}\n        </Button>\n      </div>\n    </div>;\n};\nexport const OverflowStepperExample = () => {\n  const commonReducer = stepsTotal => (state, action) => {\n    switch (action.type) {\n      case 'completeStep':\n        {\n          const activeStepIndex = action.payload === stepsTotal - 1 ? stepsTotal - 1 : action.payload + 1;\n          return {\n            activeStepIndex,\n            steps: state.steps.map((step, index) => {\n              if (index === action.payload && index !== stepsTotal - 1) {\n                // current one but not last one\n                return {\n                  state: StepState.completed,\n                  label: step.label\n                };\n              }\n\n              if (index === action.payload + 1) {\n                // next one\n                return {\n                  state: StepState.available,\n                  label: step.label\n                };\n              }\n\n              return step;\n            })\n          };\n        }\n\n      case 'setActive':\n        {\n          return {\n            activeStepIndex: action.payload,\n            steps: state.steps.map((step, index) => {\n              if (index === action.payload) {\n                return {\n                  state: StepState.available,\n                  label: step.label\n                };\n              }\n\n              return step;\n            })\n          };\n        }\n\n      default:\n        throw new Error();\n    }\n  };\n\n  const reducer = commonReducer(5);\n  const initialState = {\n    activeStepIndex: 0,\n    steps: [{\n      label: 'Step 1',\n      state: StepState.available\n    }, {\n      label: 'Step 2',\n      state: StepState.disabled\n    }, {\n      label: 'Step 3',\n      state: StepState.disabled\n    }, {\n      label: 'Step 4 - longer text',\n      state: StepState.disabled\n    }, {\n      label: 'Step 5',\n      state: StepState.disabled\n    }]\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const lastStep = state.activeStepIndex === state.steps.length - 1;\n  return <div style={{\n    maxWidth: '400px'\n  }}>\n      <Stepper steps={state.steps} language=\"en\" selectedStep={state.activeStepIndex} onStepClick={(event, stepIndex) => dispatch({\n      type: 'setActive',\n      payload: stepIndex\n    })} mdxType=\"Stepper\" />\n      <div style={{\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'flex-end',\n      gap: '24px'\n    }}>\n        <Button disabled={state.activeStepIndex === 0} variant=\"secondary\" onClick={() => dispatch({\n        type: 'setActive',\n        payload: state.activeStepIndex - 1\n      })} style={{\n        height: 'fit-content',\n        width: 'fit-content'\n      }} iconLeft={<IconArrowLeft mdxType=\"IconArrowLeft\" />} mdxType=\"Button\">\n          Previous\n        </Button>\n        <Button variant={lastStep ? 'primary' : 'secondary'} onClick={() => dispatch({\n        type: 'completeStep',\n        payload: state.activeStepIndex\n      })} style={{\n        height: 'fit-content',\n        width: 'fit-content'\n      }} iconRight={lastStep ? undefined : <IconArrowRight mdxType=\"IconArrowRight\" />} mdxType=\"Button\">\n          {lastStep ? 'Send' : 'Next'}\n        </Button>\n      </div>\n    </div>;\n};\nexport const _frontmatter = {\n  \"slug\": \"/components/stepper\",\n  \"title\": \"Stepper\",\n  \"navTitle\": \"Stepper\"\n};\nconst layoutProps = {\n  StepperExample,\n  SmallStepperExample,\n  HeadingStepperExample,\n  OverflowStepperExample,\n  _frontmatter\n};\n\nconst MDXLayout = ({\n  children,\n  pageContext\n}) => <TabsLayout pageContext={pageContext}>{children}</TabsLayout>;\n\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"usage\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Usage`}<a parentName=\"h2\" {...{\n        \"href\": \"#usage\",\n        \"aria-label\": \"usage permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h2>\n    <h3 {...{\n      \"id\": \"example\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Example`}<a parentName=\"h3\" {...{\n        \"href\": \"#example\",\n        \"aria-label\": \"example permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h3>\n\n    <PlaygroundPreview mdxType=\"PlaygroundPreview\">\n  <StepperExample mdxType=\"StepperExample\" />\n    </PlaygroundPreview>\n    <h3 {...{\n      \"id\": \"principles\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Principles`}<a parentName=\"h3\" {...{\n        \"href\": \"#principles\",\n        \"aria-label\": \"principles permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h3>\n    <ul>\n      <li parentName=\"ul\">{`Each form step must be given a clear and descriptive label.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`The label is required even if it is visually hidden on smaller screen sizes.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`It is recommended that the form steps must be filled in order.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`This means that steps are disabled until their previous step is completed successfully.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Avoid using a stepper in short forms. One step should have at least three (3) form components inside it.`}</li>\n      <li parentName=\"ul\">{`Use `}<a parentName=\"li\" {...{\n          \"href\": \"#small\"\n        }}>{`small variant`}</a>{` on small screens or spaces.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`You can use the default variant on small screens if the amount of steps is small (2-4 steps).`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Do not span the stepper into multiple rows. If you are running out of space, consider using `}<a parentName=\"li\" {...{\n          \"href\": \"#small\"\n        }}>{`the small variant`}</a>{` or alter the spacing between steps.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`HDS stepper also supports scrolling when it overflows outside the container. Generally, this should be the last resort option if it is not possible to fit the stepper on screen with other methods.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`You can find an example of creating a complete form with the stepper in `}<Link openInNewTab openInNewTabAriaLabel=\"Opens in a new tab\" size=\"M\" href=\"/storybook/react/?path=/docs/components-stepper--simple-form-example#simple-form-example\" mdxType=\"Link\">{`the HDS React Storybook`}</Link>{`.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"variations\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Variations`}<a parentName=\"h3\" {...{\n        \"href\": \"#variations\",\n        \"aria-label\": \"variations permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h3>\n    <h4 {...{\n      \"id\": \"default\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Default`}<a parentName=\"h4\" {...{\n        \"href\": \"#default\",\n        \"aria-label\": \"default permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h4>\n    <p>{`The default stepper variant includes visible step labels. The stepper can be navigated by pressing the steps themselves or controlled via external button elements.`}</p>\n    <PlaygroundPreview mdxType=\"PlaygroundPreview\">\n   <StepperExample mdxType=\"StepperExample\" />\n    </PlaygroundPreview>\n    <h4 {...{\n      \"id\": \"small\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Small`}<a parentName=\"h4\" {...{\n        \"href\": \"#small\",\n        \"aria-label\": \"small permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h4>\n    <p>{`The small stepper variant omits the visible step labels. This variant of the stepper suits better for smaller screens or tight spaces. Steps are still interactable even though the labels are visually hidden.`}</p>\n\n    <PlaygroundPreview mdxType=\"PlaygroundPreview\">\n  <SmallStepperExample mdxType=\"SmallStepperExample\" />\n    </PlaygroundPreview>\n    <h4 {...{\n      \"id\": \"with-step-heading\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`With step heading`}<a parentName=\"h4\" {...{\n        \"href\": \"#with-step-heading\",\n        \"aria-label\": \"with step heading permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h4>\n    <p>{`The stepper can automatically render the step heading if the property `}<inlineCode parentName=\"p\">{`stepHeading`}</inlineCode>{` is enabled. The step heading will include the current step number, the total amount of steps, and the step label. `}</p>\n    <p>{`You can control the heading level of the generated step heading via the `}<inlineCode parentName=\"p\">{`stepHeadingAriaLevel`}</inlineCode>{` property. The heading is automatically localised if you change the component language with the `}<inlineCode parentName=\"p\">{`language`}</inlineCode>{` property.`}</p>\n\n    <PlaygroundPreview mdxType=\"PlaygroundPreview\">\n  <HeadingStepperExample mdxType=\"HeadingStepperExample\" />\n    </PlaygroundPreview>\n    <h4 {...{\n      \"id\": \"overflow\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Overflow`}<a parentName=\"h4\" {...{\n        \"href\": \"#overflow\",\n        \"aria-label\": \"overflow permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h4>\n    <p>{`The stepper reacts accordingly when it overflows outside of the container. The user can scroll the stepper view or use left and right angle icons to browse the stepper.`}</p>\n    <p>{`This variant should only be the last resort option if it is not possible to fit the stepper on screen with other methods. Prefer the `}<inlineCode parentName=\"p\">{`small`}</inlineCode>{` variant or shorter labels as a solution before resorting to overflow.`}</p>\n\n    <PlaygroundPreview mdxType=\"PlaygroundPreview\">\n  <OverflowStepperExample mdxType=\"OverflowStepperExample\" />\n    </PlaygroundPreview>\n    <h4 {...{\n      \"id\": \"step-states\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Step states`}<a parentName=\"h4\" {...{\n        \"href\": \"#step-states\",\n        \"aria-label\": \"step states permalink\",\n        \"className\": \"header-anchor after\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs\",\n          \"aria-hidden\": \"true\",\n          \"style\": {\n            \"verticalAlign\": \"middle\"\n          }\n        }}></span></a></h4>\n    <p>{`The HDS stepper offers multiple predefined states for steps to be used. `}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`completed`}</inlineCode>{` state for completed steps`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`available`}</inlineCode>{` state for steps that are available but not completed yet`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`attention`}</inlineCode>{` state for steps that require the user's attention (e.g. the step has been edited by another user)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`paused`}</inlineCode>{` state for steps that require the user's attention (e.g. waiting for a review from officials)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`disabled`}</inlineCode>{` state for steps that are not available yet (e.g. require a previous step to be completed first)`}</li>\n    </ul>\n    <PlaygroundPreview mdxType=\"PlaygroundPreview\">\n  <Stepper language=\"en\" onStepClick={function noRefCheck() {}} selectedStep={1} steps={[{\n        label: 'Completed',\n        state: StepState.completed\n      }, {\n        label: 'Current',\n        state: StepState.available\n      }, {\n        label: 'Available',\n        state: StepState.available\n      }, {\n        label: 'Needs attention',\n        state: StepState.attention\n      }, {\n        label: 'Paused',\n        state: StepState.paused\n      }, {\n        label: 'Disabled',\n        state: StepState.disabled\n      }]} mdxType=\"Stepper\" />  \n    </PlaygroundPreview>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["StepperExample","stepsTotal","reducer","state","action","type","activeStepIndex","payload","steps","map","step","index","StepState","label","Error","initialState","useReducer","dispatch","lastStep","length","language","selectedStep","onStepClick","event","stepIndex","mdxType","style","display","justifyContent","alignItems","gap","B","disabled","variant","onClick","height","width","iconLeft","iconRight","undefined","I","SmallStepperExample","maxWidth","small","HeadingStepperExample","stepHeading","OverflowStepperExample","_frontmatter","layoutProps","MDXLayout","children","pageContext","MDXContent","components","props","parentName","L","openInNewTab","openInNewTabAriaLabel","size","href","isMDXComponent"],"sourceRoot":""}