"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[2395],{24022:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return r},default:function(){return p}});var a=n(45987),o=(n(67294),n(64983)),i=n(9460),l=n(54329);const s=["components"],r={slug:"/components/dialog/customisation",title:"Dialog - Customisation"},c={_frontmatter:r},d=e=>{let{children:t,pageContext:n}=e;return(0,o.kt)(l.default,{pageContext:n},t)};function p(e){let{components:t}=e,n=(0,a.Z)(e,s);return(0,o.kt)(d,Object.assign({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"customisation",style:{position:"relative"}},"Customisation",(0,o.kt)("a",{parentName:"h2",href:"#customisation","aria-label":"customisation permalink",className:"header-anchor after"},(0,o.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,o.kt)("h3",{id:"customisation-properties",style:{position:"relative"}},"Customisation properties",(0,o.kt)("a",{parentName:"h3",href:"#customisation-properties","aria-label":"customisation properties permalink",className:"header-anchor after"},(0,o.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,o.kt)("p",null,"You can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"theme")," property to customise the component. See all available theme variables in the table below."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Theme variable"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"--accent-line-color")),(0,o.kt)("td",{parentName:"tr",align:null},"Color of the dialog accent line")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"--overlay-color")),(0,o.kt)("td",{parentName:"tr",align:null},"Color of the dialog overlay")))),(0,o.kt)("h3",{id:"customisation-example",style:{position:"relative"}},"Customisation example",(0,o.kt)("a",{parentName:"h3",href:"#customisation-example","aria-label":"customisation example permalink",className:"header-anchor after"},(0,o.kt)("span",{parentName:"a",className:"hds-anchor-icon hds-icon hds-icon--link hds-icon--size-xs","aria-hidden":"true",style:{verticalAlign:"middle"}}))),(0,o.kt)(i.ZP,{mdxType:"Playground"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"{() => {\n  const dialogTargetRef = React.useRef(null); // We need to render the dialog into a div inside the Playground component to ensure correct dialog styles in the HDS documentation. The dialog will be rendered into the document body by default.\n  const openInfoDialogButtonRef = React.useRef(null);\n  const [isOpen, setIsOpen] = React.useState(false);\n  const close = () => setIsOpen(false);\n  const titleId = 'info-dialog-title';\n  const descriptionId = 'info-dialog-content';\n  return (\n    <>\n      <div ref={dialogTargetRef} />\n      <Button ref={openInfoDialogButtonRef} onClick={() => setIsOpen(true)}>\n        Open Info dialog\n      </Button>\n      <Dialog\n        id=\"info-dialog\"\n        aria-labelledby={titleId}\n        aria-describedby={descriptionId}\n        isOpen={isOpen}\n        close={close}\n        closeButtonLabelText=\"Close info dialog\"\n        focusAfterCloseRef={openInfoDialogButtonRef}\n        targetElement={dialogTargetRef.current}\n        theme={{\n          '--accent-line-color': 'var(--color-tram)',\n          '--overlay-color': 'rgba(0, 0, 0, 0.7)'\n        }}\n      >\n        <Dialog.Header\n          id={titleId}\n          title=\"Terms of service have changed\"\n          iconLeft={<IconInfoCircle aria-hidden=\"true\" />}\n        />\n        <Dialog.Content>\n          <p id={descriptionId} className=\"text-body\">\n            Please note that the terms of this service have changed. You can review the changes in the user settings.\n          </p>\n        </Dialog.Content>\n        <Dialog.ActionButtons>\n          <Button onClick={close}>Close</Button>\n        </Dialog.ActionButtons>\n      </Dialog>\n    </>\n  );\n}}\n"))))}p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-components-dialog-customisation-mdx-5ce575977e8f9d8b7dee.js.map